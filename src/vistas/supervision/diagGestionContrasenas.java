/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas.supervision;

import entidades.persona.investigador.Contrasena;
import entidades.persona.investigador.Investigador;
import facade.ContrasenaFacade;
import includes.Encrypter;
import java.security.NoSuchAlgorithmException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author huguito
 */
public class diagGestionContrasenas extends javax.swing.JDialog {

    private Investigador investigador;
    private Contrasena contrasena;
    private String tipoOperacion;

    /**
     * Creates new form diagGestionContrasenas
     */
    public diagGestionContrasenas(java.awt.Frame parent, boolean modal, Investigador investigador) {
        super(parent, modal);
        initComponents();
        this.investigador = investigador;
        inicializarComponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lbInvestigador = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pfContrasena = new javax.swing.JPasswordField();
        pfConfirmaContrasena = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lbCuil = new javax.swing.JLabel();
        btnAceptar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagGestionContrasenas.class, "diagGestionContrasenas.jPanel1.border.title"))); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(diagGestionContrasenas.class, "diagGestionContrasenas.jLabel1.text")); // NOI18N

        lbInvestigador.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        lbInvestigador.setText(org.openide.util.NbBundle.getMessage(diagGestionContrasenas.class, "diagGestionContrasenas.lbInvestigador.text")); // NOI18N

        jLabel3.setText(org.openide.util.NbBundle.getMessage(diagGestionContrasenas.class, "diagGestionContrasenas.jLabel3.text")); // NOI18N

        pfContrasena.setText(org.openide.util.NbBundle.getMessage(diagGestionContrasenas.class, "diagGestionContrasenas.pfContrasena.text")); // NOI18N

        pfConfirmaContrasena.setText(org.openide.util.NbBundle.getMessage(diagGestionContrasenas.class, "diagGestionContrasenas.pfConfirmaContrasena.text")); // NOI18N

        jLabel4.setText(org.openide.util.NbBundle.getMessage(diagGestionContrasenas.class, "diagGestionContrasenas.jLabel4.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(diagGestionContrasenas.class, "diagGestionContrasenas.jLabel2.text")); // NOI18N

        lbCuil.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        lbCuil.setText(org.openide.util.NbBundle.getMessage(diagGestionContrasenas.class, "diagGestionContrasenas.lbCuil.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbInvestigador, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lbCuil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pfContrasena, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                            .addComponent(pfConfirmaContrasena, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbInvestigador))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lbCuil))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(pfContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pfConfirmaContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap())
        );

        btnAceptar.setText(org.openide.util.NbBundle.getMessage(diagGestionContrasenas.class, "diagGestionContrasenas.btnAceptar.text")); // NOI18N
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        btnCancelar.setText(org.openide.util.NbBundle.getMessage(diagGestionContrasenas.class, "diagGestionContrasenas.btnCancelar.text")); // NOI18N
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnEliminar.setText(org.openide.util.NbBundle.getMessage(diagGestionContrasenas.class, "diagGestionContrasenas.btnEliminar.text")); // NOI18N
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnAceptar)
                    .addComponent(btnEliminar))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        aceptar();
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try {
            eliminar();
        } catch (Exception ex) {
            Logger.getLogger(diagGestionContrasenas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(diagGestionContrasenas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(diagGestionContrasenas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(diagGestionContrasenas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(diagGestionContrasenas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                diagGestionContrasenas dialog = new diagGestionContrasenas(new javax.swing.JFrame(), true, new Investigador());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbCuil;
    private javax.swing.JLabel lbInvestigador;
    private javax.swing.JPasswordField pfConfirmaContrasena;
    private javax.swing.JPasswordField pfContrasena;
    // End of variables declaration//GEN-END:variables

    private void inicializarComponentes() {
        contrasena = ContrasenaFacade.getInstance().buscarPorInvestigador(investigador);
        lbInvestigador.setText(investigador.toString());
        lbCuil.setText(investigador.getPersona().getCuil());

        if (contrasena != null) {
            tipoOperacion = "Modificación";
            pfContrasena.setText(contrasena.getContrasena());

        } else {
            tipoOperacion = "Alta";
            contrasena = new Contrasena();
            contrasena.setInvestigador(investigador);
        }
    }

    private void aceptar() {
        String password = new String(pfContrasena.getPassword());
        String confirmaPassword = new String(pfConfirmaContrasena.getPassword());
        if (!password.equals("")) {
            if (password.equals(confirmaPassword)) {
                try {
                    switch (tipoOperacion) {
                        case "Modificación":
                            contrasena.setContrasena(password);
                            ContrasenaFacade.getInstance().modificarYCambiarClave(contrasena);
                            JOptionPane.showMessageDialog(null, "Contraseña Modificada!");
                            this.dispose();
                            break;
                        case "Alta":
                            contrasena.setContrasena(password);
                            ContrasenaFacade.getInstance().alta(contrasena);
                            JOptionPane.showMessageDialog(null, "Contraseña almacenada!");
                            this.dispose();
                            break;
                    }


                } catch (NoSuchAlgorithmException ex) {
                    JOptionPane.showMessageDialog(this, ex);
                } catch (Exception ex) {
                    Logger.getLogger(diagGestionContrasenas.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Las contraseñas no coinciden, no se cambiará", "Error de Confirmación de Contraseña", JOptionPane.ERROR_MESSAGE);
                pfContrasena.setText("");
                pfConfirmaContrasena.setText("");
            }
        }else{
            JOptionPane.showMessageDialog(null, "No escribio la contraseña!");
        }


    }

    private void eliminar() throws Exception {
        if (tipoOperacion.equals("Modificación")) {
            int opcion = JOptionPane.showConfirmDialog(null, "Esta usted seguro?");
            if (opcion == JOptionPane.YES_OPTION) {
                ContrasenaFacade.getInstance().eliminar(contrasena);
                JOptionPane.showMessageDialog(null, "Contraseña Eliminada");
                this.dispose();
            }

        } else {
            JOptionPane.showMessageDialog(null, "Todavia no posse contraseña registrada \n"
                    + "Nada que eliminar!");
        }
    }
}
