/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas.mensajes;

import entidades.persona.investigador.AreaSecyt;
import entidades.persona.investigador.Mensaje;
import facade.MensajeFacade;
import includes.Comunes;
import includes.ModeloTablaNoEditable;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.NoResultException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JViewport;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author hugo
 */
public class diagPapelera extends javax.swing.JDialog {

    private ModeloTablaNoEditable modeloTablaMensajes;
    AreaSecyt areaSecyt = null;

    /**
     * Creates new form diagPapelera
     */
    public diagPapelera(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setTitle("Papelera de mensajes");
        inicializarComponentes();
    }

    public diagPapelera(java.awt.Frame parent, boolean modal, AreaSecyt areaSecyt) {
        super(parent, modal);
        this.areaSecyt = areaSecyt;
        initComponents();
        inicializarComponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMensajes = new javax.swing.JTable();
        btnRestaurar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagPapelera.class, "diagPapelera.jPanel1.border.title"))); // NOI18N

        tblMensajes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblMensajes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMensajesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMensajes);

        btnRestaurar.setText(org.openide.util.NbBundle.getMessage(diagPapelera.class, "diagPapelera.btnRestaurar.text")); // NOI18N
        btnRestaurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestaurarActionPerformed(evt);
            }
        });

        jButton1.setText(org.openide.util.NbBundle.getMessage(diagPapelera.class, "diagPapelera.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRestaurar, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRestaurar)
                .addGap(102, 102, 102))
        );

        btnCerrar.setText(org.openide.util.NbBundle.getMessage(diagPapelera.class, "diagPapelera.btnCerrar.text")); // NOI18N
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(265, 265, 265)
                .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCerrar)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        cerrar();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void tblMensajesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMensajesMouseClicked
    }//GEN-LAST:event_tblMensajesMouseClicked

    private void btnRestaurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestaurarActionPerformed
       restaurarMensaje();
    }//GEN-LAST:event_btnRestaurarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        verMensajePapelera();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(diagPapelera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(diagPapelera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(diagPapelera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(diagPapelera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                diagPapelera dialog = new diagPapelera(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnRestaurar;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMensajes;
    // End of variables declaration//GEN-END:variables

    private void cerrar() {
        this.dispose();
    }

    private void inicializarComponentes() {
        
        try {
            if (areaSecyt != null) {
                cargarTablaMensajes(MensajeFacade.getInstance().listarBorrados(areaSecyt));
            } else {
                cargarTablaMensajes(MensajeFacade.getInstance().listarBorrados());
            }
        } catch (Exception ex) {
            Logger.getLogger(diagPapelera.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void cargarTablaMensajes(List<Mensaje> listaMensajes) {
        modeloTablaMensajes = new ModeloTablaNoEditable();
        cargarEncabezadosTablaMensajes(modeloTablaMensajes);
        configurarTabla(tblMensajes);
        try {
            cargar(listaMensajes);
        } catch (Exception ex) {
            Logger.getLogger(diagMensajes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void cargarEncabezadosTablaMensajes(ModeloTablaNoEditable modeloTablaMensajes) {
        modeloTablaMensajes.addColumn("Id");
        modeloTablaMensajes.addColumn("Area Secyt");
        modeloTablaMensajes.addColumn("Investigador");
        modeloTablaMensajes.addColumn("Fecha de Envio");
        modeloTablaMensajes.addColumn("Mensaje");
        modeloTablaMensajes.addColumn("Estado");
        tblMensajes.setModel(modeloTablaMensajes);
    }

    private void configurarTabla(JTable tbl) {
        JViewport scroll = (JViewport) tbl.getParent();
        int ancho = scroll.getWidth();
        int anchoColumna = 0;
        TableColumnModel modeloColumna = tbl.getColumnModel();
        TableColumn columnaTabla;
        for (int i = 0; i < tbl.getColumnCount(); i++) {
            columnaTabla = modeloColumna.getColumn(i);
            switch (i) {
                case 0:
                    anchoColumna = (1 * ancho) / 100;
                    break;
                case 1:
                    anchoColumna = (20 * ancho) / 100;
                    break;
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                    anchoColumna = (5 * ancho) / 100;
                    break;
            }
            columnaTabla.setPreferredWidth(anchoColumna);
            tbl.setColumnModel(modeloColumna);
        }
        tbl.getTableHeader().setFont(new java.awt.Font("Dialog",
                java.awt.Font.PLAIN, 10));
        tbl.getTableHeader().setBackground(java.awt.Color.WHITE);
        tbl.getTableHeader().setForeground(Color.BLACK);
        //Si le queremos cambiar el tamaño a la tablita
        tbl.setFont(new java.awt.Font("Dialog",
                java.awt.Font.PLAIN, 10));
    }

    private void cargar(List<Mensaje> lista) {
        try {
            modeloTablaMensajes = new ModeloTablaNoEditable();
            cargarEncabezadosTablaMensajes(modeloTablaMensajes);
            for (Mensaje m : lista) {
                cargarMensaje(m);

            }

            tblMensajes.setModel(modeloTablaMensajes);
        } catch (Exception ex) {
            Logger.getLogger(diagMensajes.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void cargarMensaje(Mensaje m) {

        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        Object[] fila = new Object[6];
        fila[0] = m.getId();
        fila[1] = m.getAreaSecyt();
        fila[2] = m.getInvestigador();
        try {
            fila[3] = formato.format(m.getFechaEnvio());
        } catch (Exception ex) {
        }


        fila[4] = m.getDescripcion();
        try {
            if (m.getLeido()) {
                fila[5] = "Leído";
            } else {
                fila[5] = "No leído";
            }
        } catch (NoResultException ex) {
        }
        modeloTablaMensajes.addRow(fila);

    }

    private void restaurarMensaje() {
        if(tblMensajes.getSelectedRow()!=-1){
            Mensaje mensaje = MensajeFacade.getInstance().buscar((Long) tblMensajes.getValueAt(tblMensajes.getSelectedRow(), 0));
            mensaje.setBorrado(false);
            try {
                MensajeFacade.getInstance().modificar(mensaje);
            } catch (Exception ex) {
                Logger.getLogger(diagPapelera.class.getName()).log(Level.SEVERE, null, ex);
            }
            inicializarComponentes();
        }else{
            JOptionPane.showMessageDialog(null, "Debe seleccionar un mensaje para restaurarlo");
        }
    }

    private void verMensajePapelera() {
        if(tblMensajes.getSelectedRow()!=-1){
            Mensaje mensaje = MensajeFacade.getInstance().buscar((Long) tblMensajes.getValueAt(tblMensajes.getSelectedRow(), 0));
            diagVerMensajePapelera verMensaje = new diagVerMensajePapelera(null, true,mensaje);
            verMensaje.setLocation(Comunes.centrarDialog(verMensaje));
            verMensaje.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(null, "Debe seleccionar un mensaje para ver!");
        }
    }
}