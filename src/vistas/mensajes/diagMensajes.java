/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas.mensajes;

import entidades.persona.investigador.AreaSecyt;
import entidades.persona.investigador.Investigador;
import entidades.persona.investigador.Mensaje;
import entidades.persona.investigador.PlantillaMensaje;
import facade.AreaSecytFacade;
import facade.MensajeFacade;
import facade.PlantillaMensajeFacade;
import includes.Comunes;
import includes.ModeloTablaNoEditable;
import java.awt.Color;
import java.awt.Frame;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.NoResultException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JViewport;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import org.apache.poi.poifs.property.Parent;
import org.jdesktop.swingx.JXTaskPane;
import org.jfree.ui.UIUtilities;
import vista.frPrincipal;

/**
 *
 * @author huguito
 */
public class diagMensajes extends javax.swing.JDialog {

    /**
     * Creates new form diagMensajes
     */
    ModeloTablaNoEditable modeloTablaMensajes = new ModeloTablaNoEditable();
    ModeloTablaNoEditable modeloTablaPlantillas = new ModeloTablaNoEditable();
    private Investigador investigador = null;
    private AreaSecyt areaSecyt = null;
    private frPrincipal jframe;
    private ModeloTablaNoEditable modeloTablaMensajesEnviados = new ModeloTablaNoEditable();

    public diagMensajes(frPrincipal parent, boolean modal) {
        super(parent, modal);
        initComponents();
        jTabbedPane1.setSelectedIndex(1);
        this.jframe = parent;
        this.setTitle("Administracion de Mensajes Investigadores");
        mostrarFiltros();
        inicializarComponentes();
    }

    public diagMensajes(frPrincipal parent, boolean modal, Investigador investigador) {
        super(parent, modal);
        initComponents();
        this.jframe = parent;
        jTabbedPane1.setSelectedIndex(1);
        this.setTitle("Administracion de Mensajes Investigadores");
        ocultarFiltros();
        this.investigador = investigador;
        inicializarComponentesPInvestigador();
    }

    public diagMensajes(frPrincipal parent, boolean modal, AreaSecyt areaSecyt) {
        super(parent, modal);
        initComponents();
        this.jframe = parent;
        jTabbedPane1.setSelectedIndex(1);
        this.setTitle("Administracion de Mensajes Investigadores");
        ocultarFiltros();
        this.areaSecyt = areaSecyt;
        inicializarComponentesPAreaSecyt();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAceptar = new javax.swing.JButton();
        panelBusqueda = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfInvestigador = new javax.swing.JTextField();
        btnBuscarInvestigador = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cboAreas = new javax.swing.JComboBox();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblPlantillas = new javax.swing.JTable();
        btnNuevaPlantilla = new javax.swing.JButton();
        btnModificarPlantilla = new javax.swing.JButton();
        btnEliminarPlantilla = new javax.swing.JButton();
        btnUtilizarPlantilla = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnVerPapelera = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        cboEstadoMensaje = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        btnCambiarEstadoMensaje = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMensajes = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        cboTipoMensaje = new javax.swing.JComboBox();
        btnNuevoMensaje = new javax.swing.JButton();
        btnVerMensaje = new javax.swing.JButton();
        btnPapelera = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMensajesEnviados = new javax.swing.JTable();
        btnVerMensajeEnviado = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnAceptar.setText(org.openide.util.NbBundle.getMessage(diagMensajes.class, "diagMensajes.btnAceptar.text")); // NOI18N
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        panelBusqueda.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagMensajes.class, "diagMensajes.panelBusqueda.border.title"))); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(diagMensajes.class, "diagMensajes.jLabel1.text")); // NOI18N

        tfInvestigador.setText(org.openide.util.NbBundle.getMessage(diagMensajes.class, "diagMensajes.tfInvestigador.text")); // NOI18N

        btnBuscarInvestigador.setText(org.openide.util.NbBundle.getMessage(diagMensajes.class, "diagMensajes.btnBuscarInvestigador.text")); // NOI18N
        btnBuscarInvestigador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarInvestigadorActionPerformed(evt);
            }
        });

        jLabel2.setText(org.openide.util.NbBundle.getMessage(diagMensajes.class, "diagMensajes.jLabel2.text")); // NOI18N

        cboAreas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboAreas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboAreasItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout panelBusquedaLayout = new javax.swing.GroupLayout(panelBusqueda);
        panelBusqueda.setLayout(panelBusquedaLayout);
        panelBusquedaLayout.setHorizontalGroup(
            panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBusquedaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBusquedaLayout.createSequentialGroup()
                        .addComponent(tfInvestigador, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarInvestigador, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cboAreas, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(226, Short.MAX_VALUE))
        );
        panelBusquedaLayout.setVerticalGroup(
            panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBusquedaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboAreas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(8, 8, 8)
                .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfInvestigador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnBuscarInvestigador))
                .addContainerGap())
        );

        tblPlantillas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPlantillas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPlantillasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblPlantillas);

        btnNuevaPlantilla.setText(org.openide.util.NbBundle.getMessage(diagMensajes.class, "diagMensajes.btnNuevaPlantilla.text")); // NOI18N
        btnNuevaPlantilla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaPlantillaActionPerformed(evt);
            }
        });

        btnModificarPlantilla.setText(org.openide.util.NbBundle.getMessage(diagMensajes.class, "diagMensajes.btnModificarPlantilla.text")); // NOI18N
        btnModificarPlantilla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarPlantillaActionPerformed(evt);
            }
        });

        btnEliminarPlantilla.setText(org.openide.util.NbBundle.getMessage(diagMensajes.class, "diagMensajes.btnEliminarPlantilla.text")); // NOI18N
        btnEliminarPlantilla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarPlantillaActionPerformed(evt);
            }
        });

        btnUtilizarPlantilla.setText(org.openide.util.NbBundle.getMessage(diagMensajes.class, "diagMensajes.btnUtilizarPlantilla.text")); // NOI18N
        btnUtilizarPlantilla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUtilizarPlantillaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnModificarPlantilla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNuevaPlantilla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminarPlantilla, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(btnUtilizarPlantilla, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(319, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(210, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(btnNuevaPlantilla)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModificarPlantilla)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminarPlantilla)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addComponent(btnUtilizarPlantilla)
                .addGap(23, 23, 23))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(64, 64, 64)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(56, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(diagMensajes.class, "diagMensajes.jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        btnVerPapelera.setText(org.openide.util.NbBundle.getMessage(diagMensajes.class, "diagMensajes.btnVerPapelera.text")); // NOI18N
        btnVerPapelera.setToolTipText(org.openide.util.NbBundle.getMessage(diagMensajes.class, "diagMensajes.btnVerPapelera.toolTipText")); // NOI18N
        btnVerPapelera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerPapeleraActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagMensajes.class, "diagMensajes.jPanel2.border.title"))); // NOI18N

        cboEstadoMensaje.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No leído", "Leído" }));

        jLabel6.setText(org.openide.util.NbBundle.getMessage(diagMensajes.class, "diagMensajes.jLabel6.text")); // NOI18N

        btnCambiarEstadoMensaje.setText(org.openide.util.NbBundle.getMessage(diagMensajes.class, "diagMensajes.btnCambiarEstadoMensaje.text")); // NOI18N
        btnCambiarEstadoMensaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCambiarEstadoMensajeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboEstadoMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCambiarEstadoMensaje, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboEstadoMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(btnCambiarEstadoMensaje))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        tblMensajes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblMensajes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMensajesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMensajes);

        jLabel3.setText(org.openide.util.NbBundle.getMessage(diagMensajes.class, "diagMensajes.jLabel3.text")); // NOI18N

        cboTipoMensaje.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No leídos", "Leídos", "Todos" }));
        cboTipoMensaje.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboTipoMensajeItemStateChanged(evt);
            }
        });

        btnNuevoMensaje.setText(org.openide.util.NbBundle.getMessage(diagMensajes.class, "diagMensajes.btnNuevoMensaje.text")); // NOI18N
        btnNuevoMensaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoMensajeActionPerformed(evt);
            }
        });

        btnVerMensaje.setText(org.openide.util.NbBundle.getMessage(diagMensajes.class, "diagMensajes.btnVerMensaje.text")); // NOI18N
        btnVerMensaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerMensajeActionPerformed(evt);
            }
        });

        btnPapelera.setText(org.openide.util.NbBundle.getMessage(diagMensajes.class, "diagMensajes.btnPapelera.text")); // NOI18N
        btnPapelera.setToolTipText(org.openide.util.NbBundle.getMessage(diagMensajes.class, "diagMensajes.btnPapelera.toolTipText")); // NOI18N
        btnPapelera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPapeleraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboTipoMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnVerMensaje, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnNuevoMensaje, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                            .addComponent(btnPapelera, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnVerPapelera)
                .addGap(7, 7, 7)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(121, 121, 121))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboTipoMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnNuevoMensaje)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnVerMensaje)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPapelera))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnVerPapelera)))
                .addContainerGap())
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(diagMensajes.class, "diagMensajes.jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        tblMensajesEnviados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblMensajesEnviados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMensajesEnviadosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblMensajesEnviados);

        btnVerMensajeEnviado.setText(org.openide.util.NbBundle.getMessage(diagMensajes.class, "diagMensajes.btnVerMensajeEnviado.text")); // NOI18N
        btnVerMensajeEnviado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerMensajeEnviadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVerMensajeEnviado, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(btnVerMensajeEnviado)))
                .addContainerGap(70, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(diagMensajes.class, "diagMensajes.jPanel4.TabConstraints.tabTitle"), jPanel4); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelBusqueda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 715, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(299, 299, 299))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(btnAceptar)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCambiarEstadoMensajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCambiarEstadoMensajeActionPerformed
        try {
            cambiarEstadoMensaje();
        } catch (Exception ex) {
            Logger.getLogger(diagMensajes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCambiarEstadoMensajeActionPerformed

    private void tblMensajesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMensajesMouseClicked
        mostrarEstado();
    }//GEN-LAST:event_tblMensajesMouseClicked

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        cerrar();
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void cboTipoMensajeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboTipoMensajeItemStateChanged
        try {
            cambiarMensajesAMostrar();
        } catch (Exception ex) {
            Logger.getLogger(diagMensajes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cboTipoMensajeItemStateChanged

    private void cboAreasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboAreasItemStateChanged
        try {
            filtrarPorArea();
        } catch (Exception ex) {
            Logger.getLogger(diagMensajes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cboAreasItemStateChanged

    private void btnBuscarInvestigadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarInvestigadorActionPerformed
        try {
            filtrarPorInvestigador();
        } catch (Exception ex) {
            Logger.getLogger(diagMensajes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnBuscarInvestigadorActionPerformed

    private void btnVerMensajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerMensajeActionPerformed
        try {
            verMensaje();
        } catch (Exception ex) {
            Logger.getLogger(diagMensajes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnVerMensajeActionPerformed

    private void btnNuevoMensajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoMensajeActionPerformed
        EscribirNuevoMje();
        try {
            cambiarMensajesAMostrar();
        } catch (Exception ex) {
            Logger.getLogger(diagMensajes.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnNuevoMensajeActionPerformed

    private void btnPapeleraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPapeleraActionPerformed
        enviarAPapelera();
    }//GEN-LAST:event_btnPapeleraActionPerformed

    private void btnVerPapeleraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerPapeleraActionPerformed
        abrirPapelera();
        try {
            cambiarMensajesAMostrar();
        } catch (Exception ex) {
            Logger.getLogger(diagMensajes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnVerPapeleraActionPerformed

    private void tblMensajesEnviadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMensajesEnviadosMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblMensajesEnviadosMouseClicked

    private void btnVerMensajeEnviadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerMensajeEnviadoActionPerformed
        mostrarMensajeEnviado();
    }//GEN-LAST:event_btnVerMensajeEnviadoActionPerformed

    private void tblPlantillasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPlantillasMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblPlantillasMouseClicked

    private void btnNuevaPlantillaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaPlantillaActionPerformed
        cargarNuevaPlantilla();
        try {
            cargarTablaPlantillas(PlantillaMensajeFacade.getInstance().listar());
        } catch (Exception ex) {
            Logger.getLogger(diagMensajes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnNuevaPlantillaActionPerformed

    private void btnModificarPlantillaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarPlantillaActionPerformed
        try {
            modificarPlantilla();
            cargarTablaPlantillas(PlantillaMensajeFacade.getInstance().listar());
        } catch (Exception ex) {
            Logger.getLogger(diagMensajes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnModificarPlantillaActionPerformed

    private void btnEliminarPlantillaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarPlantillaActionPerformed
        try {
            eliminarPlantilla();
            cargarTablaPlantillas(PlantillaMensajeFacade.getInstance().listar());
        } catch (Exception ex) {
            Logger.getLogger(diagMensajes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEliminarPlantillaActionPerformed

    private void btnUtilizarPlantillaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUtilizarPlantillaActionPerformed
        try {
            utilizarPlantilla();
            cambiarMensajesAMostrar();
        } catch (Exception ex) {
            Logger.getLogger(diagMensajes.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnUtilizarPlantillaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(diagMensajes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(diagMensajes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(diagMensajes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(diagMensajes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                diagMensajes dialog = new diagMensajes(new frPrincipal(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnBuscarInvestigador;
    private javax.swing.JButton btnCambiarEstadoMensaje;
    private javax.swing.JButton btnEliminarPlantilla;
    private javax.swing.JButton btnModificarPlantilla;
    private javax.swing.JButton btnNuevaPlantilla;
    private javax.swing.JButton btnNuevoMensaje;
    private javax.swing.JButton btnPapelera;
    private javax.swing.JButton btnUtilizarPlantilla;
    private javax.swing.JButton btnVerMensaje;
    private javax.swing.JButton btnVerMensajeEnviado;
    private javax.swing.JButton btnVerPapelera;
    private javax.swing.JComboBox cboAreas;
    private javax.swing.JComboBox cboEstadoMensaje;
    private javax.swing.JComboBox cboTipoMensaje;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel panelBusqueda;
    private javax.swing.JTable tblMensajes;
    private javax.swing.JTable tblMensajesEnviados;
    private javax.swing.JTable tblPlantillas;
    private javax.swing.JTextField tfInvestigador;
    // End of variables declaration//GEN-END:variables

    private void cambiarEstadoMensaje() throws Exception {
        if (tblMensajes.getSelectedRow() != -1) {

            Mensaje m = MensajeFacade.getInstance().buscar((Long) tblMensajes.getValueAt(tblMensajes.getSelectedRow(), 0));
            if (cboEstadoMensaje.getSelectedIndex() == 0) {
                m.setLeido(false);
            }
            if (cboEstadoMensaje.getSelectedIndex() == 1) {
                m.setLeido(true);
            }
            try {
                MensajeFacade.getInstance().modificar(m);
            } catch (Exception ex) {
                Logger.getLogger(diagMensajes.class.getName()).log(Level.SEVERE, null, ex);
            }
            //CARGAMOS LOS MENSAJES DEPENDIENDO DE SI LA VENTANA
            //ES DE INVESTIGADOR O DE AREASECYT O DE ADMINISTRADOR(TODOS)
            if (investigador != null) {
                cargarTablaMensajes(MensajeFacade.getInstance().listarTodos(investigador));
            } else {
                if (areaSecyt != null) {
                    cargarTablaMensajes(MensajeFacade.getInstance().listarTodos(areaSecyt));
                } else {
                    cargarTablaMensajes(MensajeFacade.getInstance().listar());
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "debe Seleccionar un mensaje de la tabla");
        }
    }

    private void cargarTablaMensajes(List<Mensaje> listaMensajes) {
        modeloTablaMensajes = new ModeloTablaNoEditable();
        cargarEncabezadosTablaMensajes(modeloTablaMensajes);
        configurarTabla(tblMensajes);
        try {
            cargar(listaMensajes);
        } catch (Exception ex) {
            Logger.getLogger(diagMensajes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void cargarTablaPlantillas(List<PlantillaMensaje> plantillaMensajes) {
        modeloTablaPlantillas = new ModeloTablaNoEditable();
        cargarEncabezadosTablaPlantillas(modeloTablaPlantillas);
        configurarTabla(tblPlantillas);
        try {
            cargarPlantillas(plantillaMensajes);
        } catch (Exception ex) {
            Logger.getLogger(diagMensajes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void inicializarComponentes() {

        try {
            cargarTablaPlantillas(PlantillaMensajeFacade.getInstance().listar());
            cargarTablaMensajes(MensajeFacade.getInstance().listarNoLeidos());
            cargarTablaMensajesEnviados(MensajeFacade.getInstance().listarEnviados());
        } catch (Exception ex) {
            Logger.getLogger(diagMensajes.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void mostrarFiltros() {
        panelBusqueda.setVisible(true);
        try {
            Comunes.cargarJComboConBlanco(cboAreas, AreaSecytFacade.getInstance().listar());
        } catch (Exception ex) {
            Logger.getLogger(diagMensajes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void ocultarFiltros() {
        panelBusqueda.setVisible(false);
    }

    private void inicializarComponentesPInvestigador() {
        try {
            cargarTablaMensajes(MensajeFacade.getInstance().listarNoLeidos(investigador));
            cargarTablaMensajesEnviados(MensajeFacade.getInstance().listarEnviados(investigador));
            cargarTablaPlantillas(PlantillaMensajeFacade.getInstance().listar());
        } catch (Exception ex) {
            Logger.getLogger(diagMensajes.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void inicializarComponentesPAreaSecyt() {
        try {
            cargarTablaMensajes(MensajeFacade.getInstance().listarNoLeidos(areaSecyt));
            cargarTablaMensajesEnviados(MensajeFacade.getInstance().listarEnviados(areaSecyt));
            cargarTablaPlantillas(PlantillaMensajeFacade.getInstance().listar());
        } catch (Exception ex) {
            Logger.getLogger(diagMensajes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void cargarEncabezadosTablaMensajes(ModeloTablaNoEditable modeloTablaMensajes) {
        modeloTablaMensajes.addColumn("Id");
        modeloTablaMensajes.addColumn("Area Secyt");
        modeloTablaMensajes.addColumn("Investigador");
        modeloTablaMensajes.addColumn("Fecha de Envio");
        modeloTablaMensajes.addColumn("Mensaje");
        modeloTablaMensajes.addColumn("Estado");
        tblMensajes.setModel(modeloTablaMensajes);
    }

    private void cargarEncabezadosTablaPlantillas(ModeloTablaNoEditable modeloTablaPlantillas) {
        modeloTablaPlantillas.addColumn("Id");
        modeloTablaPlantillas.addColumn("Nombre plantilla");
        modeloTablaPlantillas.addColumn("Mensaje");
        modeloTablaPlantillas.addColumn("Fecha creacion");
        tblPlantillas.setModel(modeloTablaPlantillas);
    }

    private void configurarTabla(JTable tbl) {
        JViewport scroll = (JViewport) tbl.getParent();
        int ancho = scroll.getWidth();
        int anchoColumna = 0;
        TableColumnModel modeloColumna = tbl.getColumnModel();
        TableColumn columnaTabla;
        for (int i = 0; i < tbl.getColumnCount(); i++) {
            columnaTabla = modeloColumna.getColumn(i);
            switch (i) {
                case 0:
                    anchoColumna = (1 * ancho) / 100;
                    break;
                case 1:
                    anchoColumna = (20 * ancho) / 100;
                    break;
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                    anchoColumna = (5 * ancho) / 100;
                    break;
            }
            columnaTabla.setPreferredWidth(anchoColumna);
            tbl.setColumnModel(modeloColumna);
        }
        tbl.getTableHeader().setFont(new java.awt.Font("Dialog",
                java.awt.Font.PLAIN, 10));
        tbl.getTableHeader().setBackground(java.awt.Color.WHITE);
        tbl.getTableHeader().setForeground(Color.BLACK);
        //Si le queremos cambiar el tamaño a la tablita
        tbl.setFont(new java.awt.Font("Dialog",
                java.awt.Font.PLAIN, 10));
    }

    private void cargar(List<Mensaje> lista) {
        try {
            modeloTablaMensajes = new ModeloTablaNoEditable();
            cargarEncabezadosTablaMensajes(modeloTablaMensajes);
            for (Mensaje m : lista) {
                cargarMensaje(m);

            }

            tblMensajes.setModel(modeloTablaMensajes);
        } catch (Exception ex) {
            Logger.getLogger(diagMensajes.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void cargarPlantillas(List<PlantillaMensaje> lista) {
        try {
            modeloTablaPlantillas = new ModeloTablaNoEditable();
            cargarEncabezadosTablaPlantillas(modeloTablaPlantillas);
            for (PlantillaMensaje p : lista) {
                cargarPlantilla(p);

            }

            tblPlantillas.setModel(modeloTablaPlantillas);
        } catch (Exception ex) {
            Logger.getLogger(diagMensajes.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void cargarEnviados(List<Mensaje> lista) {
        try {
            modeloTablaMensajesEnviados = new ModeloTablaNoEditable();
            cargarEncabezadosTablaMensajesEnviados(modeloTablaMensajesEnviados);
            for (Mensaje m : lista) {
                cargarMensajeEnviado(m);

            }

            tblMensajesEnviados.setModel(modeloTablaMensajesEnviados);
        } catch (Exception ex) {
            Logger.getLogger(diagMensajes.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void cargarMensaje(Mensaje m) {

        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        Object[] fila = new Object[6];
        fila[0] = m.getId();
        fila[1] = m.getAreaSecyt();
        fila[2] = m.getInvestigador();
        try {
            fila[3] = formato.format(m.getFechaEnvio());
        } catch (Exception ex) {
        }

        fila[4] = m.getDescripcion();
        try {
            if (m.getLeido()) {
                fila[5] = "Leído";
            } else {
                fila[5] = "No leído";
            }
        } catch (NoResultException ex) {
        }
        modeloTablaMensajes.addRow(fila);

    }

    private void cargarPlantilla(PlantillaMensaje p) {

        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        Object[] fila = new Object[4];
        fila[0] = p.getId();
        fila[1] = p.getDescripcion();
        fila[2] = p.getMensaje();
        try {
            fila[3] = formato.format(p.getFecha());
        } catch (Exception ex) {
        }
        modeloTablaPlantillas.addRow(fila);

    }

    private void cargarMensajeEnviado(Mensaje m) {

        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        Object[] fila = new Object[6];
        fila[0] = m.getId();
        fila[1] = m.getAreaSecyt();
        fila[2] = m.getInvestigador();
        try {
            fila[3] = formato.format(m.getFechaEnvio());
        } catch (Exception ex) {
        }

        fila[4] = m.getDescripcion();
        try {
            if (m.getLeido()) {
                fila[5] = "Leído";
            } else {
                fila[5] = "No leído";
            }
        } catch (NoResultException ex) {
        }
        modeloTablaMensajesEnviados.addRow(fila);

    }

    private void mostrarEstado() {
        try {
            Mensaje m = MensajeFacade.getInstance().buscar((Long) tblMensajes.getValueAt(tblMensajes.getSelectedRow(), 0));
            if (m.getLeido()) {
                cboEstadoMensaje.setSelectedIndex(1);
            } else {
                cboEstadoMensaje.setSelectedIndex(0);
            }
        } catch (NoResultException ex) {
        }

    }

    private void cerrar() {
        this.jframe.actualizarMensajes();
        this.dispose();

    }

    private void cambiarMensajesAMostrar() throws Exception {
        //CARGAMOS LOS MENSAJES DEPENDIENDO DE SI LA VENTANA
        //ES DE INVESTIGADOR O DE AREASECYT O DE ADMINISTRADOR(TODOS)
        //FILTRADO POR LEIDOS, NO LEIDOS O TODOS
        switch (cboTipoMensaje.getSelectedIndex()) {
            case 0:
                if (investigador != null) {
                    cargarTablaMensajes(MensajeFacade.getInstance().listarNoLeidos(investigador));
                    cargarTablaMensajesEnviados(MensajeFacade.getInstance().listarEnviados(investigador));
                } else {
                    if (areaSecyt != null) {
                        cargarTablaMensajes(MensajeFacade.getInstance().listarNoLeidos(areaSecyt));
                        cargarTablaMensajesEnviados(MensajeFacade.getInstance().listarEnviados(areaSecyt));
                    } else {
                        cargarTablaMensajes(MensajeFacade.getInstance().listarNoLeidos());
                        cargarTablaMensajesEnviados(MensajeFacade.getInstance().listarEnviados());
                    }
                }

                break;

            case 1:
                if (investigador != null) {
                    cargarTablaMensajes(MensajeFacade.getInstance().listarLeidos(investigador));
                } else {
                    if (areaSecyt != null) {
                        cargarTablaMensajes(MensajeFacade.getInstance().listarLeidos(areaSecyt));
                    } else {
                        cargarTablaMensajes(MensajeFacade.getInstance().listarLeidos());
                    }
                }
                break;
            case 2:
                if (investigador != null) {
                    cargarTablaMensajes(MensajeFacade.getInstance().listarTodos(investigador));
                } else {
                    if (areaSecyt != null) {
                        cargarTablaMensajes(MensajeFacade.getInstance().listarTodos(areaSecyt));
                    } else {
                        cargarTablaMensajes(MensajeFacade.getInstance().listar());
                    }
                }
                break;
        }

    }

    private void filtrarPorArea() throws Exception {
        if (cboAreas.getSelectedIndex() > 0) {
            switch (cboAreas.getSelectedItem().toString()) {
                case "Categorizaciones":
                    AreaSecyt area = AreaSecytFacade.getInstance().buscar("Categorizaciones");
                    cargarTablaMensajes(MensajeFacade.getInstance().listarTodos(area));
                    break;
                case "Becas":
                    area = AreaSecytFacade.getInstance().buscar("Becas");
                    cargarTablaMensajes(MensajeFacade.getInstance().listarTodos(area));
                    break;
                case "Incentivos":
                    area = AreaSecytFacade.getInstance().buscar("Incentivos");
                    cargarTablaMensajes(MensajeFacade.getInstance().listarTodos(area));
                    break;
                case "Proyectos":
                    area = AreaSecytFacade.getInstance().buscar("Proyectos");
                    cargarTablaMensajes(MensajeFacade.getInstance().listarTodos(area));
                    break;
                case "Economico":
                    area = AreaSecytFacade.getInstance().buscar("Economico");
                    cargarTablaMensajes(MensajeFacade.getInstance().listarTodos(area));
                    break;
                case "Vinculacion":
                    area = AreaSecytFacade.getInstance().buscar("Vinculacion");
                    cargarTablaMensajes(MensajeFacade.getInstance().listarTodos(area));
                    break;
            }

        } else {
            cargarTablaMensajes(MensajeFacade.getInstance().listar());
        }

    }

    private void filtrarPorInvestigador() throws Exception {

        if (!tfInvestigador.getText().isEmpty() && cboAreas.getSelectedIndex() == 0) {
            cargarTablaMensajes(MensajeFacade.getInstance().buscarPorNombre(tfInvestigador.getText()));
        } else {
            cargarTablaMensajes(MensajeFacade.getInstance().listar());
        }
        if (!tfInvestigador.getText().isEmpty() && cboAreas.getSelectedIndex() != 0) {
            AreaSecyt area = AreaSecytFacade.getInstance().buscar(cboAreas.getSelectedItem().toString());
            cargarTablaMensajes(MensajeFacade.getInstance().buscarPorNombreYArea(tfInvestigador.getText(), area));
        } else {
            cargarTablaMensajes(MensajeFacade.getInstance().listar());
        }
    }

    private void verMensaje() throws Exception {
        if (tblMensajes.getSelectedRow() != -1) {
            Mensaje mensaje = MensajeFacade.getInstance().buscar((Long) tblMensajes.getValueAt(tblMensajes.getSelectedRow(), 0));
            diagVistaMensaje diagVerMensaje = new diagVistaMensaje(null, true, mensaje);
            diagVerMensaje.setLocation(Comunes.centrarDialog(diagVerMensaje));
            diagVerMensaje.setVisible(true);
            mensaje.setLeido(true);
            MensajeFacade.getInstance().modificar(mensaje);
            if (areaSecyt != null) {
                inicializarComponentesPAreaSecyt();
            } else if (investigador != null) {
                inicializarComponentesPInvestigador();
            } else {
                inicializarComponentes();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fila!!");
        }
    }

    private void EscribirNuevoMje() {
        diagMensajeRespuesta nuevoMensaje = new diagMensajeRespuesta(null, true, "Nuevo");
        nuevoMensaje.setLocation(Comunes.centrarDialog(nuevoMensaje));
        nuevoMensaje.setVisible(true);
    }

    private void enviarAPapelera() {
        if (tblMensajes.getSelectedRow() != -1) {
            Mensaje mensaje = MensajeFacade.getInstance().buscar((Long) tblMensajes.getValueAt(tblMensajes.getSelectedRow(), 0));
            mensaje.setBorrado(true);
            try {
                MensajeFacade.getInstance().modificar(mensaje);
                cambiarMensajesAMostrar();

            } catch (Exception ex) {
                Logger.getLogger(diagMensajes.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un mensaje para \n"
                    + "enviar a la papelera!!");
        }
    }

    private void abrirPapelera() {

        if (areaSecyt != null) {
            diagPapelera papelera = new diagPapelera(null, true, areaSecyt);
            papelera.setLocation(Comunes.centrarDialog(papelera));
            papelera.setVisible(true);
        } else {
            diagPapelera papelera = new diagPapelera(null, true);
            papelera.setLocation(Comunes.centrarDialog(papelera));
            papelera.setVisible(true);
        }

    }

    private void cargarTablaMensajesEnviados(List<Mensaje> listarEnviados) {
        modeloTablaMensajesEnviados = new ModeloTablaNoEditable();
        cargarEncabezadosTablaMensajesEnviados(modeloTablaMensajesEnviados);
        configurarTabla(tblMensajesEnviados);
        try {
            cargarEnviados(listarEnviados);
        } catch (Exception ex) {
            Logger.getLogger(diagMensajes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void mostrarMensajeEnviado() {
        if (tblMensajesEnviados.getSelectedRow() != -1) {
            Mensaje mensaje = MensajeFacade.getInstance().buscar((Long) tblMensajesEnviados.getValueAt(tblMensajesEnviados.getSelectedRow(), 0));
            diagVistaMensaje diagVerMensaje = new diagVistaMensaje(null, true, mensaje, Boolean.TRUE);
            diagVerMensaje.setLocation(Comunes.centrarDialog(diagVerMensaje));
            diagVerMensaje.setVisible(true);

        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fila!!");
        }
    }

    private void cargarEncabezadosTablaMensajesEnviados(ModeloTablaNoEditable modeloTablaMensajesEnviados) {
        modeloTablaMensajesEnviados.addColumn("Id");
        modeloTablaMensajesEnviados.addColumn("Area Secyt");
        modeloTablaMensajesEnviados.addColumn("Investigador");
        modeloTablaMensajesEnviados.addColumn("Fecha de Envio");
        modeloTablaMensajesEnviados.addColumn("Mensaje");
        modeloTablaMensajesEnviados.addColumn("Estado");
        tblMensajesEnviados.setModel(modeloTablaMensajesEnviados);
    }

    private void cargarNuevaPlantilla() {
        diagPlantilla nuevaPlantilla = new diagPlantilla(null, true, "Alta");
        nuevaPlantilla.setLocation(Comunes.centrarDialog(nuevaPlantilla));
        nuevaPlantilla.setVisible(true);

    }

    private void modificarPlantilla() throws Exception {
        if (tblPlantillas.getSelectedRow() != -1) {
            PlantillaMensaje plantilla = PlantillaMensajeFacade.getInstance().buscar((Long) tblPlantillas.getValueAt(tblPlantillas.getSelectedRow(), 0));
            diagPlantilla nuevaPlantilla = new diagPlantilla(null, true, plantilla, "Modificación");
            nuevaPlantilla.setLocation(Comunes.centrarDialog(nuevaPlantilla));
            nuevaPlantilla.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una plantilla");
        }

    }

    private void eliminarPlantilla() throws Exception {
        if (tblPlantillas.getSelectedRow() != -1) {
            PlantillaMensaje plantilla = PlantillaMensajeFacade.getInstance().buscar((Long) tblPlantillas.getValueAt(tblPlantillas.getSelectedRow(), 0));
            PlantillaMensajeFacade.getInstance().eliminar(plantilla);
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una plantilla");
        }
    }

    private void utilizarPlantilla() throws Exception {
        if (tblPlantillas.getSelectedRow() != -1) {
            PlantillaMensaje plantilla = PlantillaMensajeFacade.getInstance().buscar((Long) tblPlantillas.getValueAt(tblPlantillas.getSelectedRow(), 0));
            diagMensajeRespuesta nuevoMensaje = new diagMensajeRespuesta(null, true, "Plantilla",plantilla);
            nuevoMensaje.setLocation(Comunes.centrarDialog(nuevoMensaje));
            nuevoMensaje.setVisible(true);
            
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una plantilla");
        }
    }
}
