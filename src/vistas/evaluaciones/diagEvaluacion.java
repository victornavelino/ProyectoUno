/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * diagEvaluacion.java
 *
 * Created on 20/08/2011, 10:20:28
 */
package vistas.evaluaciones;

import entidades.persona.Evaluador;
import entidades.proyecto.Evaluacion;
import entidades.proyecto.EvaluacionIndividual;
import entidades.proyecto.Nota;
import entidades.proyecto.Proyecto;
import entidades.usuario.Usuario;
import facade.EvaluacionFacade;
import facade.NotaFacade;
import facade.ProyectoFacade;
import includes.Comunes;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.zip.DataFormatException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import vista.diagEvaluadorBusqueda;
import vista.proyectos.diagNota;

/**
 *
 * @author carlos
 */
public class diagEvaluacion extends javax.swing.JDialog {

    private final static int EVALUADORES = 3;
    private Evaluador evaluador;
    private Evaluacion evaluacion;
    private Proyecto proyecto;
    private Nota nota;
    private Date fecha;
    private Usuario usuario;
    private List<EvaluacionIndividual> listaEvaluacionesIndividuales = new ArrayList<EvaluacionIndividual>();
    private String tipoOperacion;

    /**
     * Creates new form diagEvaluacion
     */
    public diagEvaluacion(java.awt.Frame parent, boolean modal, String tipoOperacion, Proyecto proyecto, Usuario usuario) {
        super(parent, modal);
        this.tipoOperacion = tipoOperacion;
        this.proyecto = proyecto;
        this.usuario = usuario;
        initComponents();
        iniciarComponentes();
    }

    public diagEvaluacion(java.awt.Frame parent, boolean modal, String tipoOperacion, Proyecto proyecto, Evaluacion evaluacion, Usuario usuario) {
        super(parent, modal);
        this.tipoOperacion = tipoOperacion;
        this.proyecto = proyecto;
        this.evaluacion = evaluacion;
        this.usuario = usuario;
        initComponents();
        iniciarComponentes();
    }

    public diagEvaluacion(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfEvaluador = new javax.swing.JTextField();
        btSeleccionarEvaluador = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cboNota = new javax.swing.JComboBox();
        btAgregarNuevaEvaluacion = new javax.swing.JButton();
        btAgregarEvaluacion = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListEvaluacionesIndividuales = new javax.swing.JList();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        dataPickerFecha = new org.jdesktop.swingx.JXDatePicker();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagEvaluacion.class, "diagEvaluacion.jPanel1.border.title_1"))); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(diagEvaluacion.class, "diagEvaluacion.jLabel1.text_1")); // NOI18N

        tfEvaluador.setText(org.openide.util.NbBundle.getMessage(diagEvaluacion.class, "diagEvaluacion.tfEvaluador.text_1")); // NOI18N

        btSeleccionarEvaluador.setText(org.openide.util.NbBundle.getMessage(diagEvaluacion.class, "diagEvaluacion.btSeleccionarEvaluador.text_1")); // NOI18N
        btSeleccionarEvaluador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSeleccionarEvaluadorActionPerformed(evt);
            }
        });

        jLabel2.setText(org.openide.util.NbBundle.getMessage(diagEvaluacion.class, "diagEvaluacion.jLabel2.text_1")); // NOI18N

        cboNota.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboNotaItemStateChanged(evt);
            }
        });

        btAgregarNuevaEvaluacion.setText(org.openide.util.NbBundle.getMessage(diagEvaluacion.class, "diagEvaluacion.btAgregarNuevaEvaluacion.text_1")); // NOI18N
        btAgregarNuevaEvaluacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAgregarNuevaEvaluacionActionPerformed(evt);
            }
        });

        btAgregarEvaluacion.setText(org.openide.util.NbBundle.getMessage(diagEvaluacion.class, "diagEvaluacion.btAgregarEvaluacion.text_1")); // NOI18N
        btAgregarEvaluacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAgregarEvaluacionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cboNota, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(tfEvaluador))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btSeleccionarEvaluador)
                                .addGap(16, 16, 16))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(btAgregarNuevaEvaluacion)
                                .addContainerGap())))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btAgregarEvaluacion, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(146, 146, 146))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jLabel1)
                    .addComponent(tfEvaluador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSeleccionarEvaluador))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cboNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAgregarNuevaEvaluacion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btAgregarEvaluacion)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagEvaluacion.class, "diagEvaluacion.jPanel4.border.title"))); // NOI18N

        jScrollPane1.setViewportView(jListEvaluacionesIndividuales);

        jButton2.setText(org.openide.util.NbBundle.getMessage(diagEvaluacion.class, "diagEvaluacion.jButton2.text")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText(org.openide.util.NbBundle.getMessage(diagEvaluacion.class, "diagEvaluacion.jButton3.text")); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setText(org.openide.util.NbBundle.getMessage(diagEvaluacion.class, "diagEvaluacion.jLabel3.text")); // NOI18N

        dataPickerFecha.setFormats("dd/MM/yyyy");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dataPickerFecha, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                .addGap(273, 273, 273))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dataPickerFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btAgregarEvaluacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAgregarEvaluacionActionPerformed
        agregarEvaluacion();       // TODO add your handling code here:
    }//GEN-LAST:event_btAgregarEvaluacionActionPerformed

    private void btSeleccionarEvaluadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSeleccionarEvaluadorActionPerformed
        seleccionarEvaluador();        // TODO add your handling code here:
    }//GEN-LAST:event_btSeleccionarEvaluadorActionPerformed

    private void btAgregarNuevaEvaluacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAgregarNuevaEvaluacionActionPerformed
        agregarNuevaNota();        // TODO add your handling code here:
    }//GEN-LAST:event_btAgregarNuevaEvaluacionActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    aceptar();
}//GEN-LAST:event_jButton2ActionPerformed

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    quitarEvaluacionIndividual();
}//GEN-LAST:event_jButton3ActionPerformed

private void cboNotaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboNotaItemStateChanged
    cambiarNotaSeleccionada();
}//GEN-LAST:event_cboNotaItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                diagEvaluacion dialog = new diagEvaluacion(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAgregarEvaluacion;
    private javax.swing.JButton btAgregarNuevaEvaluacion;
    private javax.swing.JButton btSeleccionarEvaluador;
    private javax.swing.JComboBox cboNota;
    private org.jdesktop.swingx.JXDatePicker dataPickerFecha;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList jListEvaluacionesIndividuales;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField tfEvaluador;
    // End of variables declaration//GEN-END:variables

    private void seleccionarEvaluador() {
        diagEvaluadorBusqueda evaluadorEleccion = new diagEvaluadorBusqueda(null, true, usuario);
        evaluadorEleccion.setLocation(Comunes.centrarDialog(evaluadorEleccion));
        evaluadorEleccion.setVisible(true);

        if (evaluadorEleccion.getEvaluador() != null) {
            evaluador = evaluadorEleccion.getEvaluador();


        }
        tfEvaluador.setText(evaluador.toString());
    }

    public Evaluacion getEvaluacionCreada() {
        return evaluacion;
    }

    private void cambiarNotaSeleccionada() {
        if (cboNota.getSelectedIndex() > 0) {
            nota = (Nota) cboNota.getSelectedItem();
        } else {
            nota = null;
        }
    }

    private void agregarEvaluacion() {
        if (validar()) {
            EvaluacionIndividual evaluacionIndividual = new EvaluacionIndividual();
            evaluacionIndividual.setEvaluador(evaluador);
            evaluacionIndividual.setNota(nota);


            listaEvaluacionesIndividuales.add(evaluacionIndividual);
            cargarEvaluacionesIndividuales();
        }
    }

    private void agregarNuevaNota() {
        diagNota diagNota = new diagNota(null, true, "Alta");
        diagNota.setTitle("Esto agregará un nuevo tipo de nota al sistema");
        diagNota.setLocation(Comunes.centrarDialog(diagNota));
        diagNota.setVisible(true);
        if (diagNota.getNotaCreada() != null) {
            nota = diagNota.getNotaCreada();
            cboNota.setSelectedItem(nota);
        }
        cargarNotas();
    }

    private boolean validar() {
        if (evaluador == null) {
            JOptionPane.showMessageDialog(null, "Debe elegir un evaluador");
            return false;
        }
        if (nota == null) {
            JOptionPane.showMessageDialog(null, "Debe elegir una nota");
            return false;
        }
        return true;
    }

    private void cargarEvaluacionesIndividuales() {
        Comunes.cargarJList(jListEvaluacionesIndividuales, listaEvaluacionesIndividuales);
    }

    private void aceptar() {
        if (validarCantidad()) {
            if (tipoOperacion.equals("Alta")) {
                evaluacion = new Evaluacion();
                evaluacion.setEvaluacionIndividual(listaEvaluacionesIndividuales);
                if(dataPickerFecha.getDate()!=null){
                    evaluacion.setFecha(dataPickerFecha.getDate());
                }else{
                    evaluacion.setFecha(null);
                }
                
                evaluacion.setProyecto(proyecto);
                EvaluacionFacade.getInstance().alta(evaluacion);
                this.dispose();
            }
            if (tipoOperacion.equals("Modificación")) {
                evaluacion.setEvaluacionIndividual(listaEvaluacionesIndividuales);
                if(dataPickerFecha.getDate()!=null){
                    evaluacion.setFecha(dataPickerFecha.getDate());
                }else{
                    evaluacion.setFecha(null);
                }
                evaluacion.setProyecto(proyecto);
                EvaluacionFacade.getInstance().modificar(evaluacion);
                this.dispose();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe cargar tres evaluaciones indivuales");
        }
    }

    private boolean validarCantidad() {
        if (listaEvaluacionesIndividuales.size() == EVALUADORES) {
            return true;

        }
        return false;
    }

    private void cargarNotas() {
        Comunes.cargarJComboConBlanco(cboNota, NotaFacade.getInstance().getTodos());

    }

    private void quitarEvaluacionIndividual() {
        if (jListEvaluacionesIndividuales.getSelectedIndex() != -1) {
            listaEvaluacionesIndividuales.remove(jListEvaluacionesIndividuales.getSelectedValue());
            cargarEvaluacionesIndividuales();
        }

    }

    private void iniciarComponentes() {
        cargarNotas();
        if (tipoOperacion.equals("Modificación")) {
            listaEvaluacionesIndividuales = evaluacion.getEvaluacionIndividual();
            Comunes.cargarJList(jListEvaluacionesIndividuales, listaEvaluacionesIndividuales);
            try{
               dataPickerFecha.setDate(evaluacion.getFecha()); 
            }catch(Exception ex){
               dataPickerFecha.setDate(null); 
            }
                
                        
        }
    }
}
