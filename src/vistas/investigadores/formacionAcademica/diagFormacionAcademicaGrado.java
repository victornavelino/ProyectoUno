/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * diagTituloGradoAlta.java
 *
 * Created on 03/07/2011, 11:07:21
 */
package vistas.investigadores.formacionAcademica;

import entidades.Universidad;
import entidades.investigador.formacionAcademica.FormacionAcademicaGrado;
import vista.panelControl.*;
import entidades.titulo.TituloGrado;
import facade.TituloGradoFacade;
import includes.Comunes;
import javax.swing.JOptionPane;
import org.apache.commons.validator.routines.IntegerValidator;
import vista.proyectos.diagTituloGradoEleccion;
import vista.proyectos.diagUniversidadEleccion;

/**
 *
 * @author carlos
 */
public class diagFormacionAcademicaGrado extends javax.swing.JDialog {

    private FormacionAcademicaGrado formacionAcademicaGrado;
    private String tipoOperacion;
    private TituloGrado tituloGrado;
    private Universidad universidad;
    private int anoIngreso;
    private int anoEgreso;

    /**
     * Creates new form diagTituloGradoAlta
     */
    public diagFormacionAcademicaGrado(java.awt.Frame parent, boolean modal, String tipoOperacion) {
        super(parent, modal);
        this.tipoOperacion = tipoOperacion;
        initComponents();
        inicializarComponentes();
    }

    public diagFormacionAcademicaGrado(java.awt.Frame parent, boolean modal, String tipoOperacion, FormacionAcademicaGrado formacionAcademicaGrado) {
        super(parent, modal);
        this.tipoOperacion = tipoOperacion;
        this.formacionAcademicaGrado = formacionAcademicaGrado;
        initComponents();
        inicializarComponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        tfCarrera = new javax.swing.JTextField();
        btCarreraSeleccionar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tfAnoIngreso = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfAnoEgreso = new javax.swing.JTextField();
        chkCursandoActualmente = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        tfUniversidad = new javax.swing.JTextField();
        btUniversidadSeleccionar = new javax.swing.JButton();
        chkSDatos = new javax.swing.JCheckBox();
        chkFinalizado = new javax.swing.JCheckBox();
        btAceptar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText("Carrera");

        tfCarrera.setEditable(false);

        btCarreraSeleccionar.setText("Seleccionar");
        btCarreraSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCarreraSeleccionarActionPerformed(evt);
            }
        });

        jLabel1.setText("Año de Ingreso");

        tfAnoIngreso.setText("0");

        jLabel2.setText("Año de Egreso");

        chkCursandoActualmente.setText("Cursando Actualmente");
        chkCursandoActualmente.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkCursandoActualmenteStateChanged(evt);
            }
        });

        jLabel4.setText("Universidad");

        tfUniversidad.setEditable(false);

        btUniversidadSeleccionar.setText("Seleccionar");
        btUniversidadSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUniversidadSeleccionarActionPerformed(evt);
            }
        });

        chkSDatos.setText("Sin Datos de Años");
        chkSDatos.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkSDatosStateChanged(evt);
            }
        });

        chkFinalizado.setText("Finalizado");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfUniversidad, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                            .addComponent(tfCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btCarreraSeleccionar)
                            .addComponent(btUniversidadSeleccionar))
                        .addGap(10, 10, 10))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(tfAnoEgreso, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfAnoIngreso, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkSDatos)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(chkCursandoActualmente)
                                .addGap(18, 18, 18)
                                .addComponent(chkFinalizado)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btCarreraSeleccionar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfUniversidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btUniversidadSeleccionar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfAnoIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfAnoEgreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkCursandoActualmente)
                    .addComponent(chkFinalizado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkSDatos)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btAceptar.setText("Aceptar");
        btAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(229, 229, 229)
                        .addComponent(btAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btAceptar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAceptarActionPerformed
        aceptar();
}//GEN-LAST:event_btAceptarActionPerformed

private void btCarreraSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCarreraSeleccionarActionPerformed
    seleccionarCarreraGrado();
}//GEN-LAST:event_btCarreraSeleccionarActionPerformed

private void btUniversidadSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUniversidadSeleccionarActionPerformed
    seleccionarUniversidad();// TODO add your handling code here:
}//GEN-LAST:event_btUniversidadSeleccionarActionPerformed

    private void chkCursandoActualmenteStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkCursandoActualmenteStateChanged
        cambiarEstadoFechaHasta();  // TODO add your handling code here:
    }//GEN-LAST:event_chkCursandoActualmenteStateChanged

    private void chkSDatosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkSDatosStateChanged
        anularFechas();
    }//GEN-LAST:event_chkSDatosStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                diagFormacionAcademicaGrado dialog = new diagFormacionAcademicaGrado(new javax.swing.JFrame(), true, new String());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAceptar;
    private javax.swing.JButton btCarreraSeleccionar;
    private javax.swing.JButton btUniversidadSeleccionar;
    private javax.swing.JCheckBox chkCursandoActualmente;
    private javax.swing.JCheckBox chkFinalizado;
    private javax.swing.JCheckBox chkSDatos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField tfAnoEgreso;
    private javax.swing.JTextField tfAnoIngreso;
    private javax.swing.JTextField tfCarrera;
    private javax.swing.JTextField tfUniversidad;
    // End of variables declaration//GEN-END:variables

    private void inicializarComponentes() {
        chkSDatos.setVisible(false);
        chkCursandoActualmente.setVisible(false);
        if (tipoOperacion.equals("Alta")) {
            tfCarrera.setText("");
            tfUniversidad.setText("");
            tfAnoEgreso.setText("");
            tfAnoIngreso.setText("");
            chkCursandoActualmente.setSelected(false);

        } else if (tipoOperacion.equals("Consulta")) {
            tfCarrera.setEditable(false);
            btCarreraSeleccionar.setEnabled(false);
            tfUniversidad.setEditable(false);
            btUniversidadSeleccionar.setEnabled(false);
            tfAnoIngreso.setEditable(false);
            tfAnoEgreso.setEditable(false);
            try {
                tituloGrado = formacionAcademicaGrado.getTituloGrado();
                tfCarrera.setText(formacionAcademicaGrado.getTituloGrado().toString());
            } catch (Exception ex) {
            }
            try {
                universidad = formacionAcademicaGrado.getUniversidad();
                tfUniversidad.setText(formacionAcademicaGrado.getUniversidad().toString());
            } catch (Exception ex) {
            }
            try {
                if (formacionAcademicaGrado.getAnoIngreso() > 0) {
                    anoIngreso = formacionAcademicaGrado.getAnoIngreso();
                    tfAnoIngreso.setText(String.valueOf(formacionAcademicaGrado.getAnoIngreso()));
                } else {
                    tfAnoIngreso.setText("");
                }
            } catch (Exception ex) {
            }
            try {
                if (formacionAcademicaGrado.getAnoEgreso() > 0) {
                    anoEgreso = formacionAcademicaGrado.getAnoEgreso();
                    tfAnoEgreso.setText(String.valueOf(formacionAcademicaGrado.getAnoEgreso()));
                } else {
                    tfAnoEgreso.setText("");
                }
            } catch (Exception ex) {
            }
        } else if (tipoOperacion.equals("Modificación")) {
            try {
                tituloGrado = formacionAcademicaGrado.getTituloGrado();
                tfCarrera.setText(formacionAcademicaGrado.getTituloGrado().toString());
            } catch (Exception ex) {
            }
            try {
                universidad = formacionAcademicaGrado.getUniversidad();
                tfUniversidad.setText(formacionAcademicaGrado.getUniversidad().toString());
            } catch (Exception ex) {
            }
            try {
                if (formacionAcademicaGrado.getAnoIngreso() > 0) {
                    anoIngreso = formacionAcademicaGrado.getAnoIngreso();
                    tfAnoIngreso.setText(String.valueOf(formacionAcademicaGrado.getAnoIngreso()));
                } else {
                    tfAnoIngreso.setText("");
                }
            } catch (Exception ex) {
            }
            try {
                if (formacionAcademicaGrado.getAnoEgreso() > 0) {
                    anoEgreso = formacionAcademicaGrado.getAnoEgreso();
                    tfAnoEgreso.setText(String.valueOf(formacionAcademicaGrado.getAnoEgreso()));
                } else {
                    tfAnoEgreso.setText("");
                }
            } catch (Exception ex) {
            }
        }
    }

    private void aceptar() {
        if (validar2()) {

            if (tipoOperacion.equals("Alta")) {
                formacionAcademicaGrado = new FormacionAcademicaGrado();
                formacionAcademicaGrado.setTituloGrado(tituloGrado);
                formacionAcademicaGrado.setUniversidad(universidad);
                if (!chkSDatos.isSelected()) {
                    anoIngreso = Integer.parseInt(tfAnoIngreso.getText());

                    if (chkCursandoActualmente.isSelected()) {
                        anoEgreso = 0;
                    } else {
                        anoEgreso = Integer.parseInt(tfAnoEgreso.getText());

                    }
                } else {
                    anoIngreso = 0;
                    anoEgreso = 0;

                }
                if (!chkFinalizado.isSelected()) {
                    formacionAcademicaGrado.setFinalizado(true);
                } else {
                    formacionAcademicaGrado.setFinalizado(false);
                }

                formacionAcademicaGrado.setAnoIngreso(anoIngreso);
                formacionAcademicaGrado.setAnoEgreso(anoEgreso);
                this.dispose();
            } else if (tipoOperacion.equals("Modificación")) {
                if (!chkFinalizado.isSelected()) {
                    formacionAcademicaGrado.setFinalizado(true);
                } else {
                    formacionAcademicaGrado.setFinalizado(false);
                }
                tituloGrado.setDescripcion(tfCarrera.getText());
                TituloGradoFacade.getInstance().modificar(tituloGrado);
            }
        }
    }

    private boolean validar2() {
        boolean flag = false;
        if (chkSDatos.isSelected()) {
            if (!tfCarrera.getText().isEmpty()) {
                if (!tfUniversidad.getText().isEmpty()) {
                    flag = true;
                } else {
                    JOptionPane.showMessageDialog(null, "Debe escoger una universidad",
                            "Error", JOptionPane.ERROR_MESSAGE);
                }

            } else {
                JOptionPane.showMessageDialog(null, "Debe escoger una carrera",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }

        } else if (IntegerValidator.getInstance().isValid(tfAnoIngreso.getText())) {
            if (!tfCarrera.getText().isEmpty()) {
                if (!tfUniversidad.getText().isEmpty()) {
                    if (chkCursandoActualmente.isSelected()) {
                        flag = true;
                    } else if (IntegerValidator.getInstance().isValid(tfAnoEgreso.getText())) {
                        flag = true;
                    } else {
                        JOptionPane.showMessageDialog(null, "Año de egreso incorrecto",
                                "Error", JOptionPane.ERROR_MESSAGE);
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "Debe escoger una universidad",
                            "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debe escoger una carrera",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Año de ingreso incorrecto",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }

        return flag;

    }

    private boolean validar() {
        boolean flag = false;
        if (formacionAcademicaGrado != null) {
            if (IntegerValidator.getInstance().isValid(tfAnoIngreso.getText())) {
                if (IntegerValidator.getInstance().isValid(tfAnoEgreso.getText())) {
                    flag = true;
                } else {
                    JOptionPane.showMessageDialog(null, "Año de egreso incorrecto",
                            "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Año de ingreso incorrecto",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe escoger una carrera",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
        return flag;
    }

    public FormacionAcademicaGrado getFormacionAcademicaGrado() {
        return formacionAcademicaGrado;
    }

    private void seleccionarCarreraGrado() {
        diagTituloGradoEleccion tituloGradoEleccion = new diagTituloGradoEleccion(null, true, tituloGrado);
        tituloGradoEleccion.setLocation(Comunes.centrarDialog(tituloGradoEleccion));
        tituloGradoEleccion.setVisible(true);
        if (tituloGradoEleccion.getTituloGradoEscogido() != null) {
            tituloGrado = tituloGradoEleccion.getTituloGradoEscogido();
            tfCarrera.setText(tituloGrado.toString());
        }
    }

    private void seleccionarUniversidad() {
        diagUniversidadEleccion univEleccion = new diagUniversidadEleccion(null, true, universidad);
        univEleccion.setLocation(Comunes.centrarDialog(univEleccion));
        univEleccion.setVisible(true);
        if (univEleccion.getUniversidadEscogido() != null) {
            universidad = univEleccion.getUniversidadEscogido();
            tfUniversidad.setText(universidad.toString());
        }

    }

    private void cambiarEstadoFechaHasta() {
        if (chkCursandoActualmente.isSelected()) {
            tfAnoEgreso.setEnabled(false);
            chkSDatos.setSelected(false);
        } else {
            tfAnoEgreso.setEnabled(true);

        }
    }

    private void anularFechas() {
        if (chkSDatos.isSelected()) {
            chkCursandoActualmente.setSelected(false);
            chkCursandoActualmente.setEnabled(false);
            tfAnoIngreso.setText("");
            tfAnoIngreso.setEnabled(false);
            tfAnoEgreso.setText("");
            tfAnoEgreso.setEnabled(false);
        } else {
            tfAnoIngreso.setEnabled(true);
            tfAnoEgreso.setEnabled(true);
            chkCursandoActualmente.setEnabled(true);
        }

    }
}
