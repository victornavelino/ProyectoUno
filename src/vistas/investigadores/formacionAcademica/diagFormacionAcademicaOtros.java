/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * diagFormacionAcademicaOtros.java
 *
 * Created on 07/11/2011, 12:27:01
 */
package vistas.investigadores.formacionAcademica;

import entidades.Institucion;

import entidades.investigador.formacionAcademica.FormacionAcademicaOtra;
import entidades.titulo.TituloOtro;
import facade.TituloOtroFacade;
import includes.Comunes;
import javax.swing.JOptionPane;
import org.apache.commons.validator.routines.IntegerValidator;
import vista.proyectos.diagTituloOtroEleccion;
import vista.proyectos.diagInstitucionEleccion;

/**
 *
 * @author Panchi
 */
public class diagFormacionAcademicaOtros extends javax.swing.JDialog {

    private FormacionAcademicaOtra formacionAcademicaOtra;
    private String tipoOperacion;
    private Institucion institucion;
    private int anoIngreso;
    private int anoEgreso;
    private TituloOtro tituloOtro;

    /**
     * Creates new form diagFormacionAcademicaOtra
     */
    public diagFormacionAcademicaOtros(java.awt.Frame parent, boolean modal, String tipoOperacion) {
        super(parent, modal);
        this.tipoOperacion = tipoOperacion;
        initComponents();
        inicializarComponentes();
    }

    public diagFormacionAcademicaOtros(java.awt.Frame parent, boolean modal, String tipoOperacion, FormacionAcademicaOtra formacionAcademicaOtra) {
        super(parent, modal);
        this.tipoOperacion = tipoOperacion;
        this.formacionAcademicaOtra = formacionAcademicaOtra;
        initComponents();
        inicializarComponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btAceptar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        tfCarrera = new javax.swing.JTextField();
        btCarreraSeleccionar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tfAnoIngreso = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfAnoEgreso = new javax.swing.JTextField();
        chkCursandoActualmente = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        tfInstitucion = new javax.swing.JTextField();
        btInstitucionSeleccionar = new javax.swing.JButton();
        chkSDatos = new javax.swing.JCheckBox();
        chkFinalizado = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btAceptar.setText(org.openide.util.NbBundle.getMessage(diagFormacionAcademicaOtros.class, "diagFormacionAcademicaOtros.btAceptar.text")); // NOI18N
        btAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAceptarActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText(org.openide.util.NbBundle.getMessage(diagFormacionAcademicaOtros.class, "diagFormacionAcademicaOtros.jLabel3.text")); // NOI18N

        tfCarrera.setEditable(false);
        tfCarrera.setBackground(new java.awt.Color(255, 255, 255));

        btCarreraSeleccionar.setText(org.openide.util.NbBundle.getMessage(diagFormacionAcademicaOtros.class, "diagFormacionAcademicaOtros.btCarreraSeleccionar.text")); // NOI18N
        btCarreraSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCarreraSeleccionarActionPerformed(evt);
            }
        });

        jLabel1.setText(org.openide.util.NbBundle.getMessage(diagFormacionAcademicaOtros.class, "diagFormacionAcademicaOtros.jLabel1.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(diagFormacionAcademicaOtros.class, "diagFormacionAcademicaOtros.jLabel2.text")); // NOI18N

        chkCursandoActualmente.setText(org.openide.util.NbBundle.getMessage(diagFormacionAcademicaOtros.class, "diagFormacionAcademicaOtros.chkCursandoActualmente.text")); // NOI18N
        chkCursandoActualmente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCursandoActualmenteActionPerformed(evt);
            }
        });

        jLabel4.setText(org.openide.util.NbBundle.getMessage(diagFormacionAcademicaOtros.class, "diagFormacionAcademicaOtros.jLabel4.text")); // NOI18N

        tfInstitucion.setEditable(false);
        tfInstitucion.setBackground(new java.awt.Color(255, 255, 255));

        btInstitucionSeleccionar.setText(org.openide.util.NbBundle.getMessage(diagFormacionAcademicaOtros.class, "diagFormacionAcademicaOtros.btInstitucionSeleccionar.text")); // NOI18N
        btInstitucionSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btInstitucionSeleccionarActionPerformed(evt);
            }
        });

        chkSDatos.setText(org.openide.util.NbBundle.getMessage(diagFormacionAcademicaOtros.class, "diagFormacionAcademicaOtros.chkSDatos.text")); // NOI18N
        chkSDatos.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkSDatosStateChanged(evt);
            }
        });

        chkFinalizado.setText(org.openide.util.NbBundle.getMessage(diagFormacionAcademicaOtros.class, "diagFormacionAcademicaOtros.chkFinalizado.text")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfInstitucion, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                            .addComponent(tfCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btCarreraSeleccionar)
                            .addComponent(btInstitucionSeleccionar))
                        .addGap(12, 12, 12))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(tfAnoEgreso, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfAnoIngreso, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(chkCursandoActualmente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chkFinalizado))
                            .addComponent(chkSDatos))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btCarreraSeleccionar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfInstitucion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btInstitucionSeleccionar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfAnoIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfAnoEgreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkCursandoActualmente)
                    .addComponent(chkFinalizado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(chkSDatos))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(221, 221, 221))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btAceptar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAceptarActionPerformed
    aceptar();
}//GEN-LAST:event_btAceptarActionPerformed

private void btCarreraSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCarreraSeleccionarActionPerformed
    seleccionarCarreraOtra();
}//GEN-LAST:event_btCarreraSeleccionarActionPerformed

private void chkCursandoActualmenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCursandoActualmenteActionPerformed
    cambiarEstadoFechaHasta();
}//GEN-LAST:event_chkCursandoActualmenteActionPerformed

private void btInstitucionSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInstitucionSeleccionarActionPerformed
    seleccionarInstitucion();
}//GEN-LAST:event_btInstitucionSeleccionarActionPerformed

    private void chkSDatosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkSDatosStateChanged
        anularFechas();
    }//GEN-LAST:event_chkSDatosStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(diagFormacionAcademicaOtros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(diagFormacionAcademicaOtros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(diagFormacionAcademicaOtros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(diagFormacionAcademicaOtros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                diagFormacionAcademicaOtros dialog = new diagFormacionAcademicaOtros(new javax.swing.JFrame(), true, new String());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAceptar;
    private javax.swing.JButton btCarreraSeleccionar;
    private javax.swing.JButton btInstitucionSeleccionar;
    private javax.swing.JCheckBox chkCursandoActualmente;
    private javax.swing.JCheckBox chkFinalizado;
    private javax.swing.JCheckBox chkSDatos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField tfAnoEgreso;
    private javax.swing.JTextField tfAnoIngreso;
    private javax.swing.JTextField tfCarrera;
    private javax.swing.JTextField tfInstitucion;
    // End of variables declaration//GEN-END:variables

    private void inicializarComponentes() {
        chkSDatos.setVisible(false);
        chkCursandoActualmente.setVisible(false);
        if (tipoOperacion.equals("Alta")) {
            tfCarrera.setText("");
            tfInstitucion.setText("");
            tfAnoEgreso.setText("");
            tfAnoIngreso.setText("");
            chkCursandoActualmente.setSelected(false);
        } else if (tipoOperacion.equals("Consulta")) {
            tfCarrera.setEditable(false);
            btCarreraSeleccionar.setEnabled(false);
            tfInstitucion.setEditable(false);
            btInstitucionSeleccionar.setEnabled(false);
            tfAnoIngreso.setEditable(false);
            tfAnoEgreso.setEditable(false);
            try {
                tituloOtro = formacionAcademicaOtra.getTituloOtro();
                tfCarrera.setText(formacionAcademicaOtra.getTituloOtro().toString());
            } catch (Exception ex) {
            }
            try {
                institucion = formacionAcademicaOtra.getInstitucion();
                tfInstitucion.setText(formacionAcademicaOtra.getInstitucion().toString());
            } catch (Exception ex) {
            }
            try {
                if (formacionAcademicaOtra.getAnoIngreso() > 0) {
                    anoIngreso = formacionAcademicaOtra.getAnoIngreso();
                    tfAnoIngreso.setText(String.valueOf(formacionAcademicaOtra.getAnoIngreso()));
                } else {
                    tfAnoIngreso.setText("");
                }
            } catch (Exception ex) {
            }
            try {
                if (formacionAcademicaOtra.getAnoEgreso() > 0) {
                    anoEgreso = formacionAcademicaOtra.getAnoEgreso();
                    tfAnoEgreso.setText(String.valueOf(formacionAcademicaOtra.getAnoEgreso()));
                } else {
                    tfAnoEgreso.setText("");
                }
            } catch (Exception ex) {
            }
        } else if (tipoOperacion.equals("Modificación")) {
            try {
                tituloOtro = formacionAcademicaOtra.getTituloOtro();
                tfCarrera.setText(formacionAcademicaOtra.getTituloOtro().toString());
            } catch (Exception ex) {
            }
            try {
                institucion = formacionAcademicaOtra.getInstitucion();
                tfInstitucion.setText(formacionAcademicaOtra.getInstitucion().toString());
            } catch (Exception ex) {
            }
            try {
                if (formacionAcademicaOtra.getAnoIngreso() > 0) {
                    anoIngreso = formacionAcademicaOtra.getAnoIngreso();
                    tfAnoIngreso.setText(String.valueOf(formacionAcademicaOtra.getAnoIngreso()));
                } else {
                    tfAnoIngreso.setText("");
                }
            } catch (Exception ex) {
            }
            try {
                if (formacionAcademicaOtra.getAnoEgreso() > 0) {
                    anoEgreso = formacionAcademicaOtra.getAnoEgreso();
                    tfAnoEgreso.setText(String.valueOf(formacionAcademicaOtra.getAnoEgreso()));
                } else {
                    tfAnoEgreso.setText("");
                }
            } catch (Exception ex) {
            }
        }
    }

    private void seleccionarCarreraOtra() {

        diagTituloOtroEleccion tituloOtroEleccion = new diagTituloOtroEleccion(null, true, tituloOtro);
        tituloOtroEleccion.setLocation(Comunes.centrarDialog(tituloOtroEleccion));
        tituloOtroEleccion.setVisible(true);
        if (tituloOtroEleccion.getTituloOtroEscogido() != null) {
            tituloOtro = tituloOtroEleccion.getTituloOtroEscogido();
            tfCarrera.setText(tituloOtro.toString());
        }

    }

    private void aceptar() {
        if (validar2()) {

            if (tipoOperacion.equals("Alta")) {
                formacionAcademicaOtra = new FormacionAcademicaOtra();
                formacionAcademicaOtra.setTituloOtro(tituloOtro);
                formacionAcademicaOtra.setInstitucion(institucion);
                if (!chkSDatos.isSelected()) {
                    anoIngreso = Integer.parseInt(tfAnoIngreso.getText());
                    if (chkCursandoActualmente.isSelected()) {
                        anoEgreso = 0;
                    } else {
                        anoEgreso = Integer.parseInt(tfAnoEgreso.getText());

                    }
                } else {
                    anoIngreso = 0;
                    anoEgreso = 0;
                }

                if (chkFinalizado.isSelected()) {
                    formacionAcademicaOtra.setFinalizado(true);
                } else {
                    formacionAcademicaOtra.setFinalizado(false);

                }
                formacionAcademicaOtra.setAnoIngreso(anoIngreso);
                formacionAcademicaOtra.setAnoEgreso(anoEgreso);
                this.dispose();
            } else if (tipoOperacion.equals("Modificación")) {
                if (chkFinalizado.isSelected()) {
                    formacionAcademicaOtra.setFinalizado(true);
                } else {
                    formacionAcademicaOtra.setFinalizado(false);

                }
                tituloOtro.setDescripcion(tfCarrera.getText());
                TituloOtroFacade.getInstance().modificar(tituloOtro);
            }
        }
    }

    private boolean validar2() {
        boolean flag = false;
        if (chkSDatos.isSelected()) {
            if (!tfCarrera.getText().isEmpty()) {
                if (!tfInstitucion.getText().isEmpty()) {
                    flag = true;
                } else {
                    JOptionPane.showMessageDialog(null, "Debe escoger una Institucion",
                            "Error", JOptionPane.ERROR_MESSAGE);
                }

            } else {
                JOptionPane.showMessageDialog(null, "Debe escoger una carrera",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }

        } else if (!tfCarrera.getText().isEmpty()) {
            if (!tfInstitucion.getText().isEmpty()) {
                if (IntegerValidator.getInstance().isValid(tfAnoIngreso.getText())) {
                    if (chkCursandoActualmente.isSelected()) {
                        flag = true;
                    } else if (IntegerValidator.getInstance().isValid(tfAnoEgreso.getText())) {
                        flag = true;
                    } else {
                        JOptionPane.showMessageDialog(null, "Año de egreso incorrecto",
                                "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Año de ingreso incorrecto",
                            "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debe escoger una Institucion",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe escoger una carrera",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }

        return flag;
    }

    public FormacionAcademicaOtra getFormacionAcademicaOtra() {
        return formacionAcademicaOtra;
    }

    private void seleccionarInstitucion() {
        diagInstitucionEleccion univEleccion = new diagInstitucionEleccion(null, true, institucion);
        univEleccion.setLocation(Comunes.centrarDialog(univEleccion));
        univEleccion.setVisible(true);
        if (univEleccion.getInstitucionEscogido() != null) {
            institucion = univEleccion.getInstitucionEscogido();
            tfInstitucion.setText(institucion.toString());
        }

    }

    private void cambiarEstadoFechaHasta() {
        if (chkCursandoActualmente.isSelected()) {
            tfAnoEgreso.setEnabled(false);
            chkSDatos.setSelected(false);
        } else {
            tfAnoEgreso.setEnabled(true);
        }
    }

    private void anularFechas() {
        if (chkSDatos.isSelected()) {
            chkCursandoActualmente.setSelected(false);
            chkCursandoActualmente.setEnabled(false);
            tfAnoIngreso.setText("");
            tfAnoIngreso.setEnabled(false);
            tfAnoEgreso.setText("");
            tfAnoEgreso.setEnabled(false);
        } else {
            tfAnoIngreso.setEnabled(true);
            tfAnoEgreso.setEnabled(true);
            chkCursandoActualmente.setEnabled(true);
        }
    }
}
