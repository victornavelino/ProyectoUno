/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * diagBecaConvocatoriaAlta.java
 *
 * Created on 20-sep-2011, 13:32:32
 */
package vistas.becas;

import entidades.Documento;
import entidades.Resolucion;
import entidades.becas.*;
import entidades.investigador.formacionAcademica.FormacionAcademicaGrado;
import entidades.operaciones.Operacion;
import entidades.persona.investigador.Docencia;
import entidades.persona.investigador.Investigador;
import entidades.proyecto.Participacion;
import entidades.proyecto.Proyecto;
import entidades.usuario.Usuario;
import facade.*;
import includes.Comunes;
import includes.ModeloTablaNoEditable;
import java.awt.Color;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.NoResultException;
import javax.swing.*;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import reportes.becas.ReportesBecas;
import vista.proyectos.diagProyecto;
import vista.proyectos.resultado.diagProyectoResultado;
import vista.resoluciones.diagResolucionEleccion;
import vistas.investigadores.diagInvestigador;

/**
 *
 * @author Administrador
 */
public class diagBecaConvocatoriaAlta extends javax.swing.JDialog {

    private Usuario usuario;
    private DefaultListModel Listmodelo;
    private List<Investigador> integrantesdentro = new ArrayList<Investigador>();
    private ProyectoFacade proyectofacade;
    private String tipoOperacion;
    private PostulacionBeca postulacion;
    private Investigador postulante;
    private Proyecto proyecto;
    private DocumentacionBeca docbeca;
    private List<Resolucion> resoluciones = new ArrayList<Resolucion>();
    private List<Participacion> participantes;
    private BecaPostulanteEstadoFacade becaPostulanteEstadoFacade;
    private List<PostulacionBeca> listadepostulantes = new ArrayList<PostulacionBeca>();
    List<Investigador> director;
    private Becas beca;
    private List<PostulacionBeca> listadepostulaciones;
    private List<Investigador> evaluadoresDentro = new ArrayList<Investigador>();
    private List<Evaluaciones> evaluaciones = new ArrayList<>();
    ModeloTablaNoEditable modeloTablaEvaluadores = new ModeloTablaNoEditable();
    ModeloTablaNoEditable modeloTablaPagos = new ModeloTablaNoEditable();
    private Evaluaciones evaluacion;
    private Pago pago;
    private NotaPago notaPago;
    private List<Observacion> observaciones = new ArrayList<>();
    ModeloTablaNoEditable modeloTablaObservaciones = new ModeloTablaNoEditable();
    private Observacion observacion;

    public Becas getBeca() {
        return beca;
    }

    /**
     * Creates new form diagBecaConvocatoriaAlta
     */
    public diagBecaConvocatoriaAlta(java.awt.Frame parent, boolean modal, String tipoOperacion, Usuario usuario) {
        super(parent, modal);
        initComponents();
        this.tipoOperacion = tipoOperacion;
        this.usuario = usuario;
        inicializarcomponentes();

    }

    public diagBecaConvocatoriaAlta(java.awt.Frame parent, boolean modal, String tipoOperacion, Usuario usuario, PostulacionBeca postulacion) {
        super(parent, modal);
        initComponents();
        this.postulacion = postulacion;
        this.tipoOperacion = tipoOperacion;
        this.usuario = usuario;
        inicializarcomponentes();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton6 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        tfBeca = new javax.swing.JTextField();
        btlimpiarbeca = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnQuitarPostulante = new javax.swing.JButton();
        tfPostulante = new javax.swing.JTextField();
        btnBuscarPostulante = new javax.swing.JButton();
        jsCarrera = new javax.swing.JScrollPane();
        jListCarrera = new javax.swing.JList();
        jsPosgrado = new javax.swing.JScrollPane();
        jListPosgrado = new javax.swing.JList();
        jLabelCarrera = new javax.swing.JLabel();
        jLabelPosgrado = new javax.swing.JLabel();
        jLabelDocencia = new javax.swing.JLabel();
        jsDocencia = new javax.swing.JScrollPane();
        taDocencia = new javax.swing.JTextArea();
        btnModificarPostulante = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        taFacultad = new javax.swing.JTextArea();
        jPanelProyecto = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaproyecto = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTextAreaPlanTrabajo = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        btnVerRRHH = new javax.swing.JButton();
        jPanelAsesores = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListAsesorAdentro = new javax.swing.JList();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jListAsesorAfuera = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        tfbuscarproyecto = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnAgregarInvestigador = new javax.swing.JButton();
        btnModificarInvestigador = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        tblEvaluadores = new javax.swing.JTable();
        btnAgregarEvaluacion = new javax.swing.JButton();
        btnModificarEvaluacion = new javax.swing.JButton();
        btnEliminarEvaluacion = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        lbPostulante = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        tblPagos = new javax.swing.JTable();
        btnAgregarPago = new javax.swing.JButton();
        btnModificarPago = new javax.swing.JButton();
        btnEliminarPago = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        lbPostulante1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListDocumentacion = new javax.swing.JList();
        jButton7 = new javax.swing.JButton();
        btVerDetallesResolucionSeleccionada = new javax.swing.JButton();
        btnQuitarDocumentacion = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanelSituacion = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        cbPostulanteEstado = new javax.swing.JComboBox();
        jxdpFechaAdjudicacion = new org.jdesktop.swingx.JXDatePicker();
        jlbFechaAdj = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        cbInformeFinal = new javax.swing.JComboBox();
        jxdpFechaInformeFinal = new org.jdesktop.swingx.JXDatePicker();
        jlbFechaInfFinal = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        cbInformeAvance = new javax.swing.JComboBox();
        jxdpFechaInformeAvance = new org.jdesktop.swingx.JXDatePicker();
        jlbFechaInfAvance = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblObservaciones = new javax.swing.JTable();
        btnAgregarObs = new javax.swing.JButton();
        btnModificarObs = new javax.swing.JButton();
        btnEliminarObs = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton6.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jButton6.text")); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel4.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jLabel4.text")); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jLabel1.text")); // NOI18N

        jButton8.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jButton8.text")); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        tfBeca.setEditable(false);
        tfBeca.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.tfBeca.text")); // NOI18N

        btlimpiarbeca.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.btlimpiarbeca.text")); // NOI18N
        btlimpiarbeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btlimpiarbecaActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jPanel3.border.title"))); // NOI18N
        jPanel3.setPreferredSize(new java.awt.Dimension(700, 113));

        btnQuitarPostulante.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.btnQuitarPostulante.text")); // NOI18N
        btnQuitarPostulante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarPostulanteActionPerformed(evt);
            }
        });

        tfPostulante.setEditable(false);
        tfPostulante.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.tfPostulante.text")); // NOI18N

        btnBuscarPostulante.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.btnBuscarPostulante.text")); // NOI18N
        btnBuscarPostulante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPostulanteActionPerformed(evt);
            }
        });

        jsCarrera.setViewportView(jListCarrera);

        jsPosgrado.setViewportView(jListPosgrado);

        jLabelCarrera.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jLabelCarrera.text")); // NOI18N

        jLabelPosgrado.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jLabelPosgrado.text")); // NOI18N

        jLabelDocencia.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jLabelDocencia.text")); // NOI18N

        taDocencia.setEditable(false);
        taDocencia.setColumns(20);
        taDocencia.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        taDocencia.setRows(5);
        jsDocencia.setViewportView(taDocencia);

        btnModificarPostulante.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.btnModificarPostulante.text")); // NOI18N
        btnModificarPostulante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarPostulanteActionPerformed(evt);
            }
        });

        jLabel10.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jLabel10.text")); // NOI18N

        taFacultad.setColumns(20);
        taFacultad.setEditable(false);
        taFacultad.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        taFacultad.setRows(5);
        jScrollPane5.setViewportView(taFacultad);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabelPosgrado)
                        .addGap(12, 12, 12)
                        .addComponent(jsPosgrado, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(tfPostulante, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(btnBuscarPostulante, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnQuitarPostulante)
                        .addGap(12, 12, 12)
                        .addComponent(btnModificarPostulante))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabelCarrera)
                        .addGap(12, 12, 12)
                        .addComponent(jsCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelDocencia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jsDocencia, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(tfPostulante, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnBuscarPostulante)
                    .addComponent(btnQuitarPostulante)
                    .addComponent(btnModificarPostulante))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelCarrera)
                            .addComponent(jsCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabelDocencia))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jsDocencia, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelPosgrado)
                    .addComponent(jsPosgrado, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelProyecto.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jPanelProyecto.border.title"))); // NOI18N

        jTextAreaproyecto.setColumns(20);
        jTextAreaproyecto.setEditable(false);
        jTextAreaproyecto.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jTextAreaproyecto.setRows(5);
        jScrollPane1.setViewportView(jTextAreaproyecto);

        jButton2.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jButton2.text")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton10.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jButton10.text")); // NOI18N
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jTextAreaPlanTrabajo.setColumns(20);
        jTextAreaPlanTrabajo.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jTextAreaPlanTrabajo.setRows(5);
        jScrollPane8.setViewportView(jTextAreaPlanTrabajo);

        jLabel6.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jLabel6.text")); // NOI18N

        btnVerRRHH.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.btnVerRRHH.text")); // NOI18N
        btnVerRRHH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerRRHHActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelProyectoLayout = new javax.swing.GroupLayout(jPanelProyecto);
        jPanelProyecto.setLayout(jPanelProyectoLayout);
        jPanelProyectoLayout.setHorizontalGroup(
            jPanelProyectoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProyectoLayout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(jPanelProyectoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelProyectoLayout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnVerRRHH, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelProyectoLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanelProyectoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelProyectoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52))
                    .addGroup(jPanelProyectoLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel6)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanelProyectoLayout.setVerticalGroup(
            jPanelProyectoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProyectoLayout.createSequentialGroup()
                .addGroup(jPanelProyectoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelProyectoLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelProyectoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jButton10)
                            .addComponent(btnVerRRHH)))
                    .addGroup(jPanelProyectoLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(8, 8, 8)
                        .addComponent(jScrollPane8, 0, 0, Short.MAX_VALUE)
                        .addGap(22, 22, 22)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelAsesores.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jPanelAsesores.border.title"))); // NOI18N

        jScrollPane2.setViewportView(jListAsesorAdentro);

        jButton3.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jButton3.text")); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jButton4.text")); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jScrollPane4.setViewportView(jListAsesorAfuera);

        jLabel3.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jLabel3.text")); // NOI18N

        tfbuscarproyecto.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.tfbuscarproyecto.text")); // NOI18N
        tfbuscarproyecto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfbuscarproyectoKeyPressed(evt);
            }
        });

        jLabel2.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jLabel2.text")); // NOI18N

        jLabel5.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jLabel5.text")); // NOI18N

        btnAgregarInvestigador.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.btnAgregarInvestigador.text")); // NOI18N
        btnAgregarInvestigador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarInvestigadorActionPerformed(evt);
            }
        });

        btnModificarInvestigador.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.btnModificarInvestigador.text")); // NOI18N
        btnModificarInvestigador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarInvestigadorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelAsesoresLayout = new javax.swing.GroupLayout(jPanelAsesores);
        jPanelAsesores.setLayout(jPanelAsesoresLayout);
        jPanelAsesoresLayout.setHorizontalGroup(
            jPanelAsesoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAsesoresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelAsesoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelAsesoresLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(19, 19, 19))
                    .addComponent(jLabel5))
                .addGap(6, 6, 6)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelAsesoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelAsesoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelAsesoresLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(29, 29, 29)
                        .addComponent(tfbuscarproyecto, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelAsesoresLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(btnAgregarInvestigador, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificarInvestigador, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        jPanelAsesoresLayout.setVerticalGroup(
            jPanelAsesoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAsesoresLayout.createSequentialGroup()
                .addGroup(jPanelAsesoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregarInvestigador)
                    .addComponent(btnModificarInvestigador))
                .addGap(3, 3, 3)
                .addGroup(jPanelAsesoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelAsesoresLayout.createSequentialGroup()
                        .addGroup(jPanelAsesoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelAsesoresLayout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4))
                            .addGroup(jPanelAsesoresLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelAsesoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tfbuscarproyecto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(tfBeca, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btlimpiarbeca)
                            .addGap(294, 294, 294))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(32, 32, 32)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 806, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(12, 12, 12)
                            .addComponent(jPanelAsesores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jPanelProyecto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(446, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfBeca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton8)
                            .addComponent(btlimpiarbeca)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel1)))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelProyecto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelAsesores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1164, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jPanel10.border.title"))); // NOI18N

        tblEvaluadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane10.setViewportView(tblEvaluadores);

        btnAgregarEvaluacion.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.btnAgregarEvaluacion.text")); // NOI18N
        btnAgregarEvaluacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarEvaluacionActionPerformed(evt);
            }
        });

        btnModificarEvaluacion.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.btnModificarEvaluacion.text")); // NOI18N
        btnModificarEvaluacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarEvaluacionActionPerformed(evt);
            }
        });

        btnEliminarEvaluacion.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.btnEliminarEvaluacion.text")); // NOI18N
        btnEliminarEvaluacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarEvaluacionActionPerformed(evt);
            }
        });

        jLabel12.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jLabel12.text")); // NOI18N

        lbPostulante.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.lbPostulante.text")); // NOI18N

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAgregarEvaluacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnModificarEvaluacion, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                            .addComponent(btnEliminarEvaluacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbPostulante, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(lbPostulante, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(btnAgregarEvaluacion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificarEvaluacion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarEvaluacion))
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(98, 98, 98))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(552, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1434, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jPanel8.TabConstraints.tabTitle"), jPanel8); // NOI18N

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jPanel11.border.title"))); // NOI18N

        tblPagos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane11.setViewportView(tblPagos);

        btnAgregarPago.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.btnAgregarPago.text")); // NOI18N
        btnAgregarPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarPagoActionPerformed(evt);
            }
        });

        btnModificarPago.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.btnModificarPago.text")); // NOI18N
        btnModificarPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarPagoActionPerformed(evt);
            }
        });

        btnEliminarPago.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.btnEliminarPago.text")); // NOI18N
        btnEliminarPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarPagoActionPerformed(evt);
            }
        });

        jLabel13.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jLabel13.text")); // NOI18N

        lbPostulante1.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.lbPostulante1.text")); // NOI18N

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAgregarPago, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnModificarPago, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                            .addComponent(btnEliminarPago, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbPostulante1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(lbPostulante1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(btnAgregarPago)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificarPago)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarPago))
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(98, 98, 98))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(552, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1434, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jPanel9.TabConstraints.tabTitle"), jPanel9); // NOI18N

        jScrollPane3.setViewportView(jListDocumentacion);

        jButton7.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jButton7.text")); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        btVerDetallesResolucionSeleccionada.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.btVerDetallesResolucionSeleccionada.text")); // NOI18N
        btVerDetallesResolucionSeleccionada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVerDetallesResolucionSeleccionadaActionPerformed(evt);
            }
        });

        btnQuitarDocumentacion.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.btnQuitarDocumentacion.text")); // NOI18N
        btnQuitarDocumentacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarDocumentacionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btVerDetallesResolucionSeleccionada)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnQuitarDocumentacion, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(738, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnQuitarDocumentacion)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btVerDetallesResolucionSeleccionada)
                .addGap(0, 1501, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        jPanelSituacion.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jPanel5.border.title"))); // NOI18N

        jLabel7.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jLabel7.text")); // NOI18N

        cbPostulanteEstado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbPostulanteEstado.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbPostulanteEstadoItemStateChanged(evt);
            }
        });

        jlbFechaAdj.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jlbFechaAdj.text")); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbFechaAdj))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jxdpFechaAdjudicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(cbPostulanteEstado, 0, 132, Short.MAX_VALUE))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cbPostulanteEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jxdpFechaAdjudicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbFechaAdj))
                .addGap(0, 22, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jPanel6.border.title"))); // NOI18N

        jLabel8.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jLabel8.text")); // NOI18N

        cbInformeFinal.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbInformeFinal.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbInformeFinalItemStateChanged(evt);
            }
        });

        jlbFechaInfFinal.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jlbFechaInfFinal.text")); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbFechaInfFinal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jxdpFechaInformeFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(cbInformeFinal, 0, 128, Short.MAX_VALUE))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cbInformeFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jxdpFechaInformeFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbFechaInfFinal))
                .addGap(0, 21, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jPanel7.border.title"))); // NOI18N

        jLabel9.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jLabel9.text")); // NOI18N

        cbInformeAvance.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbInformeAvance.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbInformeAvanceItemStateChanged(evt);
            }
        });

        jlbFechaInfAvance.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jlbFechaInfAvance.text")); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbFechaInfAvance))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jxdpFechaInformeAvance, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(cbInformeAvance, 0, 128, Short.MAX_VALUE))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cbInformeAvance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jxdpFechaInformeAvance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbFechaInfAvance))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelSituacionLayout = new javax.swing.GroupLayout(jPanelSituacion);
        jPanelSituacion.setLayout(jPanelSituacionLayout);
        jPanelSituacionLayout.setHorizontalGroup(
            jPanelSituacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSituacionLayout.createSequentialGroup()
                .addGroup(jPanelSituacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSituacionLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelSituacionLayout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(297, Short.MAX_VALUE))
        );
        jPanelSituacionLayout.setVerticalGroup(
            jPanelSituacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSituacionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSituacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jPanel12.border.title"))); // NOI18N

        tblObservaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Codigo", "Fecha", "Observacion"
            }
        ));
        jScrollPane7.setViewportView(tblObservaciones);

        btnAgregarObs.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.btnAgregarObs.text")); // NOI18N
        btnAgregarObs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarObsActionPerformed(evt);
            }
        });

        btnModificarObs.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.btnModificarObs.text")); // NOI18N
        btnModificarObs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarObsActionPerformed(evt);
            }
        });

        btnEliminarObs.setText(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.btnEliminarObs.text")); // NOI18N
        btnEliminarObs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarObsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAgregarObs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnModificarObs, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnEliminarObs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(327, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(btnAgregarObs)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificarObs)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarObs)))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelSituacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(275, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jPanelSituacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1299, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(diagBecaConvocatoriaAlta.class, "diagBecaConvocatoriaAlta.jPanel4.TabConstraints.tabTitle"), jPanel4); // NOI18N

        jScrollPane6.setViewportView(jTabbedPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel4)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(395, Short.MAX_VALUE)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(345, 345, 345))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 674, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton6)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        ocultarcomponentes();
        seleccionarBeca();
        mostrarcomponentes();

    }//GEN-LAST:event_jButton8ActionPerformed

    private void btnBuscarPostulanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPostulanteActionPerformed
        seleccionarPostulante();
    }//GEN-LAST:event_btnBuscarPostulanteActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        seleccionarProyecto();


    }//GEN-LAST:event_jButton2ActionPerformed

    private void btlimpiarbecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btlimpiarbecaActionPerformed
        tfBeca.setText(null);
    }//GEN-LAST:event_btlimpiarbecaActionPerformed

    private void btnQuitarPostulanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarPostulanteActionPerformed
        tfPostulante.setText(null);
        limpiarlListPostulantes();
    }//GEN-LAST:event_btnQuitarPostulanteActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        quitarProyecto();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        agregarasesor();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        quitarasesor();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void tfbuscarproyectoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfbuscarproyectoKeyPressed
        buscarasesor();
    }//GEN-LAST:event_tfbuscarproyectoKeyPressed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        agregardocumentacion();

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        guardarPostulante();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void btnModificarPostulanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarPostulanteActionPerformed
        if (postulante != null) {
            vistas.investigadores.diagInvestigador investigadorModificacion = new vistas.investigadores.diagInvestigador(null, true, "Modificación", (Investigador) postulante, usuario);
            investigadorModificacion.setLocation(Comunes.centrarDialog(investigadorModificacion));
            investigadorModificacion.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Debe escoger un postulante", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnModificarPostulanteActionPerformed

    private void btnAgregarEvaluacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarEvaluacionActionPerformed
        agregarEvaluacion();
    }//GEN-LAST:event_btnAgregarEvaluacionActionPerformed

    private void btnModificarEvaluacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarEvaluacionActionPerformed
        modificarEvaluacion();
    }//GEN-LAST:event_btnModificarEvaluacionActionPerformed

    private void btnEliminarEvaluacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarEvaluacionActionPerformed
        eliminarEvaluacion();
    }//GEN-LAST:event_btnEliminarEvaluacionActionPerformed

    private void btnAgregarPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarPagoActionPerformed
        agregarNotaPago();
    }//GEN-LAST:event_btnAgregarPagoActionPerformed

    private void btnModificarPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarPagoActionPerformed
        modificarPago();
    }//GEN-LAST:event_btnModificarPagoActionPerformed

    private void btnEliminarPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarPagoActionPerformed
        eliminarPago();
    }//GEN-LAST:event_btnEliminarPagoActionPerformed

    private void btVerDetallesResolucionSeleccionadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVerDetallesResolucionSeleccionadaActionPerformed
        abrirDocumentos();
    }//GEN-LAST:event_btVerDetallesResolucionSeleccionadaActionPerformed

    private void btnQuitarDocumentacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarDocumentacionActionPerformed
        quitarDocumentacion();
    }//GEN-LAST:event_btnQuitarDocumentacionActionPerformed

    private void btnVerRRHHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerRRHHActionPerformed
        mostrarRRHH();
    }//GEN-LAST:event_btnVerRRHHActionPerformed

    private void cbPostulanteEstadoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbPostulanteEstadoItemStateChanged
        verificarPostulanteEstado();
    }//GEN-LAST:event_cbPostulanteEstadoItemStateChanged

    private void cbInformeAvanceItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbInformeAvanceItemStateChanged
        verificarCbInformeAvance();
    }//GEN-LAST:event_cbInformeAvanceItemStateChanged

    private void cbInformeFinalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbInformeFinalItemStateChanged
        verificarCbInformeFinal();
    }//GEN-LAST:event_cbInformeFinalItemStateChanged

    private void btnAgregarObsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarObsActionPerformed

        agregarObservacion();

    }//GEN-LAST:event_btnAgregarObsActionPerformed

    private void btnModificarObsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarObsActionPerformed
        modificarObservacion();
    }//GEN-LAST:event_btnModificarObsActionPerformed

    private void btnEliminarObsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarObsActionPerformed
        eliminarObservacion();
    }//GEN-LAST:event_btnEliminarObsActionPerformed

    private void btnAgregarInvestigadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarInvestigadorActionPerformed
        agregarInvestigador();
    }//GEN-LAST:event_btnAgregarInvestigadorActionPerformed

    private void btnModificarInvestigadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarInvestigadorActionPerformed
        modificarInvestigador();
    }//GEN-LAST:event_btnModificarInvestigadorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(diagBecaConvocatoriaAlta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(diagBecaConvocatoriaAlta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(diagBecaConvocatoriaAlta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(diagBecaConvocatoriaAlta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                diagBecaConvocatoriaAlta dialog = new diagBecaConvocatoriaAlta(new javax.swing.JFrame(), true, new String(), new Usuario());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btVerDetallesResolucionSeleccionada;
    private javax.swing.JButton btlimpiarbeca;
    private javax.swing.JButton btnAgregarEvaluacion;
    private javax.swing.JButton btnAgregarInvestigador;
    private javax.swing.JButton btnAgregarObs;
    private javax.swing.JButton btnAgregarPago;
    private javax.swing.JButton btnBuscarPostulante;
    private javax.swing.JButton btnEliminarEvaluacion;
    private javax.swing.JButton btnEliminarObs;
    private javax.swing.JButton btnEliminarPago;
    private javax.swing.JButton btnModificarEvaluacion;
    private javax.swing.JButton btnModificarInvestigador;
    private javax.swing.JButton btnModificarObs;
    private javax.swing.JButton btnModificarPago;
    private javax.swing.JButton btnModificarPostulante;
    private javax.swing.JButton btnQuitarDocumentacion;
    private javax.swing.JButton btnQuitarPostulante;
    private javax.swing.JButton btnVerRRHH;
    private javax.swing.JComboBox cbInformeAvance;
    private javax.swing.JComboBox cbInformeFinal;
    private javax.swing.JComboBox cbPostulanteEstado;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelCarrera;
    private javax.swing.JLabel jLabelDocencia;
    private javax.swing.JLabel jLabelPosgrado;
    private javax.swing.JList jListAsesorAdentro;
    private javax.swing.JList jListAsesorAfuera;
    private javax.swing.JList jListCarrera;
    private javax.swing.JList jListDocumentacion;
    private javax.swing.JList jListPosgrado;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanelAsesores;
    private javax.swing.JPanel jPanelProyecto;
    private javax.swing.JPanel jPanelSituacion;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextAreaPlanTrabajo;
    private javax.swing.JTextArea jTextAreaproyecto;
    private javax.swing.JLabel jlbFechaAdj;
    private javax.swing.JLabel jlbFechaInfAvance;
    private javax.swing.JLabel jlbFechaInfFinal;
    private javax.swing.JScrollPane jsCarrera;
    private javax.swing.JScrollPane jsDocencia;
    private javax.swing.JScrollPane jsPosgrado;
    private org.jdesktop.swingx.JXDatePicker jxdpFechaAdjudicacion;
    private org.jdesktop.swingx.JXDatePicker jxdpFechaInformeAvance;
    private org.jdesktop.swingx.JXDatePicker jxdpFechaInformeFinal;
    private javax.swing.JLabel lbPostulante;
    private javax.swing.JLabel lbPostulante1;
    private javax.swing.JTextArea taDocencia;
    private javax.swing.JTextArea taFacultad;
    private javax.swing.JTable tblEvaluadores;
    private javax.swing.JTable tblObservaciones;
    private javax.swing.JTable tblPagos;
    private javax.swing.JTextField tfBeca;
    private javax.swing.JTextField tfPostulante;
    private javax.swing.JTextField tfbuscarproyecto;
    // End of variables declaration//GEN-END:variables

    private void agregarasesor() {
        if (jListAsesorAfuera.getSelectedIndex() != -1) {

            if (integrantesdentro.size() < 2) {
                integrantesdentro.add((Investigador) jListAsesorAfuera.getSelectedValue());
                List<Investigador> integrantesFuera = InvestigadorFacade.getInstance().getTodosInvestigador();
                integrantesFuera.removeAll(integrantesdentro);
                Comunes.cargarJList(jListAsesorAfuera, integrantesFuera);

                Comunes.cargarJList(jListAsesorAdentro, integrantesdentro);
            }

        } else {
            JOptionPane.showMessageDialog(rootPane, "Debe escoger un Asesor", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void quitarasesor() {
        if (jListAsesorAdentro.getSelectedIndex() != -1) {

            integrantesdentro.remove((Investigador) jListAsesorAdentro.getSelectedValue());
            List<Investigador> integrantesFuera = InvestigadorFacade.getInstance().getTodosInvestigador();
            integrantesFuera.removeAll(integrantesdentro);
            Comunes.cargarJList(jListAsesorAfuera, integrantesFuera);

            Comunes.cargarJList(jListAsesorAdentro, integrantesdentro);

        }
    }

    private void buscarasesor() {
        if (!tfbuscarproyecto.getText().equals("")) {
            Comunes.cargarJList(jListAsesorAfuera, InvestigadorFacade.getInstance().buscarPorApellidoNombre(tfbuscarproyecto.getText()));
        } else {
            Comunes.cargarJList(jListAsesorAfuera, InvestigadorFacade.getInstance().getCienPrimerosInvestigadores());
        }
    }

    private void agregardocumentacion() {
        diagResolucionEleccion documentacioncarga = new diagResolucionEleccion(null, true);
        documentacioncarga.setLocation(Comunes.centrarDialog(documentacioncarga));
        documentacioncarga.setVisible(true);
        if (documentacioncarga.getResolucion() != null) {
            resoluciones.add(documentacioncarga.getResolucion());
        }
        Comunes.cargarJList(jListDocumentacion, resoluciones);

    }

    private void guardarPostulante() {

        if (tipoOperacion.equals("Alta")) {

            if (!validarPostulante()) {
                int i = JOptionPane.showConfirmDialog(this, "El postulante ya fue adjudicado en una convocatoria anterior o inscripto en la beca actual ¿Desea inscribirlo igualmente? ", "confirmar", JOptionPane.YES_NO_OPTION);
                if (i == 0) {
                    inscribirPostulante();
                }
            } else {
                inscribirPostulante();
            }
        }

        if (tipoOperacion.equals("Modificación")) {
            if (validarDatos()) {
                //postulacion = new PostulacionBeca();
                docbeca = new DocumentacionBeca();
                postulacion.setBeca(BecasFacade.getInstance().getBeca(tfBeca.getText()));
                //postulacion.setFechaalta(Comunes.obtenerFechaActualDesdeDB());
                //postulacion.setPostulante(postulante);

                if (!jTextAreaPlanTrabajo.getText().equals("")) {
                    postulacion.setPlandetrabajo(jTextAreaPlanTrabajo.getText());
                } else {
                    postulacion.setPlandetrabajo(null);
                }
                if(proyecto!=null){
                  postulacion.setProyecto(proyecto);  
                }else{
                    postulacion.setProyecto(null);
                }
                
                postulacion.setPostulanteestado((BecaPostulanteEstado) cbPostulanteEstado.getSelectedItem());
                postulacion.setFechaAdjudicacionPostulante(jxdpFechaAdjudicacion.getDate());
                System.out.println("fecha adjudic" + postulacion.getFechaAdjudicacionPostulante());
                postulacion.setInformeavance((BecaInforme) cbInformeAvance.getSelectedItem());
                postulacion.setFechaBecaInformeAvance(jxdpFechaInformeAvance.getDate());
                System.out.println("fecha beca inf avance" + postulacion.getFechaBecaInformeAvance());
                postulacion.setInformefinal((BecaInforme) cbInformeFinal.getSelectedItem());
                postulacion.setFechaBecaInformeFinal(jxdpFechaInformeFinal.getDate());
                System.out.println("fecha beca inf final" + postulacion.getFechaBecaInformeFinal());
                postulacion.setDocumentacion(resoluciones);
                postulacion.setUsuario(usuario);
                if (integrantesdentro != null) {
                    postulacion.setAsesores(integrantesdentro);
                } else {
                    postulacion.setAsesores(new ArrayList<Investigador>());
                }

                PostulacionBecaFacade.getInstance().modificar(postulacion);
                JOptionPane.showMessageDialog(null, "POSTULANTE: " + postulacion.getPostulante().getPersona().toString() + " MODIFICADO!");
                this.dispose();
            }
        }
        if (tipoOperacion.equals("Consulta")) {
            this.dispose();
        }
    }

    private void inscribirPostulante() {
        if (validarDatos()) {
            postulacion = new PostulacionBeca();
            docbeca = new DocumentacionBeca();
            postulacion.setBeca(BecasFacade.getInstance().getBeca(tfBeca.getText()));
            postulacion.setFechaalta(Comunes.obtenerFechaActualDesdeDB());
            postulacion.setPostulante(postulante);
            if (beca.getTieneproyecto()) {
                if (proyecto != null) {
                    postulacion.setProyecto(proyecto);
                } else {
                    postulacion.setProyecto(null);
                }
            }
            if (!jTextAreaPlanTrabajo.getText().equals("")) {
                postulacion.setPlandetrabajo(jTextAreaPlanTrabajo.getText());
            } else {
                postulacion.setPlandetrabajo("");
            }
            postulacion.setPostulanteestado((BecaPostulanteEstado) cbPostulanteEstado.getSelectedItem());
            postulacion.setFechaAdjudicacionPostulante(jxdpFechaAdjudicacion.getDate());
            postulacion.setInformeavance((BecaInforme) cbInformeAvance.getSelectedItem());
            postulacion.setFechaBecaInformeAvance(jxdpFechaInformeAvance.getDate());
            postulacion.setInformefinal((BecaInforme) cbInformeFinal.getSelectedItem());
            postulacion.setFechaBecaInformeFinal(jxdpFechaInformeFinal.getDate());
            postulacion.setDocumentacion(resoluciones);
            postulacion.setUsuario(usuario);
            if (integrantesdentro != null) {
                postulacion.setAsesores(integrantesdentro);
            } else {
                postulacion.setAsesores(null);
            }
            //if(diagEvaluaciones.gete)
            postulacion.setEvaluaciones(null);
            PostulacionBecaFacade.getInstance().alta(postulacion);
            Operacion operacion = new Operacion();
            operacion.setFecha(Comunes.obtenerFechaActualDesdeDB());
            operacion.setOperacion("Alta de Postulante de Beca");
            operacion.setUsuario(usuario);
            OperacionFacade.getInstance().alta(operacion);
            JOptionPane.showMessageDialog(null, "POSTULANTE: " + postulacion.getPostulante().getPersona().toString() + " AGREGADO!");
            this.dispose();
            imprimirReporte();
        }
    }

    private boolean validarDatos() {
        boolean flag = false;
        if (!tfBeca.getText().equals("")) {
            if (!tfPostulante.getText().equals("")) {
                return flag = true;

            } else {
                JOptionPane.showMessageDialog(null, "Seleccione un postulante", "Error", JOptionPane.ERROR_MESSAGE);
            }
            return flag;

        } else {
            JOptionPane.showMessageDialog(null, "Seleccione una Beca", "Error", JOptionPane.ERROR_MESSAGE);
        }
        return flag;
    }

    private void seleccionarProyecto() {
        diagAgregarProyecto selecproyecto = new diagAgregarProyecto(null, true, proyecto, postulante);
        selecproyecto.setLocation(Comunes.centrarDialog(selecproyecto));
        selecproyecto.setVisible(true);
        if (selecproyecto.getProyecto() != null) {
            proyecto = selecproyecto.getProyecto();
            jTextAreaproyecto.setText(proyecto.toString());
            if (tipoOperacion.equals("Alta")) {
                integrantesdentro = new ArrayList<>();
                participantes = selecproyecto.getProyecto().getParticipaciones();
                for (Participacion par : participantes) {
                    if (par.getRol().getDescripcion().equals("Director")) {
                        integrantesdentro.add(par.getInvestigador());
                    }
                }
                Comunes.cargarJList(jListAsesorAdentro, integrantesdentro);
            }


        }
    }

    private void quitarProyecto() {
        proyecto = null;
        jTextAreaproyecto.setText(null);
        participantes = null;
        //integrantesdentro = null;
        
    }

    private void seleccionarPostulante() {

        if (beca != null) {
            diagpostulante selecpostulante = new diagpostulante(null, true, usuario);
            selecpostulante.setLocation(Comunes.centrarDialog(selecpostulante));
            selecpostulante.setVisible(true);
            if (selecpostulante.getPostulante() != null) {
                postulante = selecpostulante.getPostulante();
                tfPostulante.setText(postulante.getPersona().toString());
                lbPostulante.setText(postulante.getPersona().toString());
                if (!postulante.getDocencias().isEmpty()) {
                    taFacultad.setText(postulante.getDocencias().get(postulante.getDocencias().size()-1).getUnidadAcademica().getDescripcion());
                }

            }

            if (beca.getParaalumnos()) {
                Boolean flag = false;
                try {
                    List<FormacionAcademicaGrado> formacionacademicagrado = postulante.getFormacionesAcademicasGrado();
                    for (FormacionAcademicaGrado fag : formacionacademicagrado) {
                        if (flag == false) {
                            if (fag.getAnoEgreso() == 0) {
                                flag = true;
                            }
                        }
                    }
                } catch (Exception ex) {
                }
                if (flag == false) {
                    JOptionPane.showMessageDialog(null, "El postulante seleccionado no posee estudios en curso", "Advertencia", JOptionPane.WARNING_MESSAGE);
                }
            }


            if (beca.getParadocentes()) {
                    try{
                    List<Docencia> docencias = selecpostulante.getPostulante().getDocencias();
                    
                if (docencias == null) {
                    JOptionPane.showMessageDialog(null, "El postulante seleccionado no posee actividad docente", "Advertencia", JOptionPane.WARNING_MESSAGE);
                }
                
                  taDocencia.setText("Universidad: " + docencias.get(docencias.size()-1).getUniversidad().getDescripcion() + " - Categoria Docente: " + docencias.get(docencias.size()-1).getCategoriaDocente().getDescripcion());
                } catch (Exception ex) {
                }
                //Comunes.cargarJList(jListDocencia, (List)selecpostulante.getPostulante().getUnidadAcademica());
            }
            if (beca.getTieneposgrado()) {
                if (selecpostulante.getPostulante().getFormacionesAcademicasPosgrado().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "El postulante seleccionado no posee posgrado", "Advertencia", JOptionPane.WARNING_MESSAGE);
                }
                Comunes.cargarJList(jListPosgrado, selecpostulante.getPostulante().getFormacionesAcademicasPosgrado());
            }
            if (beca.getTienecarrera()) {
                Comunes.cargarJList(jListCarrera, selecpostulante.getPostulante().getFormacionesAcademicasGrado());
            }

        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar primero una Beca!");
        }
    }

    private void seleccionarBeca() {
        diagSeleccionarBeca seleccbeca = new diagSeleccionarBeca(null, true);
        seleccbeca.setLocation(Comunes.centrarDialog(seleccbeca));
        seleccbeca.setVisible(true);
        if (seleccbeca.getBeca() != null) {
            tfBeca.setText(seleccbeca.getBeca().getDescripcion());
            beca = seleccbeca.getBeca();
        }

    }

    private void inicializarcomponentes() {
        //
        modeloTablaObservaciones = new ModeloTablaNoEditable();
        Comunes.formatearJXdatePicker(jxdpFechaAdjudicacion);
        Comunes.formatearJXdatePicker(jxdpFechaInformeAvance);
        Comunes.formatearJXdatePicker(jxdpFechaInformeFinal);
        cargarEncabezadosTablaEvaluadores(modeloTablaEvaluadores);
        cargarEncabezadosTablaPagos(modeloTablaPagos);
        cargarEncabezadosTablaObservaciones(modeloTablaObservaciones);
        configurarTabla(tblObservaciones);
        configurarTabla(tblEvaluadores);
        configurarTabla(tblPagos);
        Comunes.autoAjusteTextArea(taDocencia);
        Comunes.autoAjusteTextArea(jTextAreaPlanTrabajo);
        Comunes.autoAjusteTextArea(jTextAreaproyecto);
        Comunes.autoAjusteTextArea(taFacultad);
        Comunes.cargarJCombo(cbPostulanteEstado, BecaPostulanteEstadoFacade.getInstance().getTodosBecasPostulanteEstado());
        Comunes.cargarJCombo(cbInformeAvance, BecaInformeFacade.getInstance().getTodosBecasInforme());
        Comunes.cargarJCombo(cbInformeFinal, BecaInformeFacade.getInstance().getTodosBecasInforme());
        if (tipoOperacion.equals("Alta")) {
            ocultarcomponentes();
            Comunes.cargarJList(jListAsesorAfuera, InvestigadorFacade.getInstance().getCienPrimerosInvestigadores());
            beca = postulacion.getBeca();
            tfBeca.setText(beca.getDescripcion());
            mostrarcomponentes();

        }

        if (tipoOperacion.equals("Modificación") || tipoOperacion.equals("Consulta")) {

            btnBuscarPostulante.setVisible(false);
            btnQuitarPostulante.setVisible(false);
            btnModificarPostulante.setVisible(true);
            tfBeca.setText(postulacion.getBeca().getDescripcion());
            beca = postulacion.getBeca();
            tfBeca.setText(beca.getDescripcion());
            postulante = postulacion.getPostulante();
            tfPostulante.setText(postulacion.getPostulante().toString());
            lbPostulante.setText(postulacion.getPostulante().toString());
            lbPostulante1.setText(postulacion.getPostulante().toString());
            if (postulacion.getEvaluaciones() != null) {
                cargarTablaEvaluadores();
            }
            if (postulacion.getNotaPago() != null) {
                cargarTablaPagos();
            }

            mostrarcomponentes();
            if (postulacion.getBeca().getTienecarrera()) {
                if (!postulante.getFormacionesAcademicasGrado().isEmpty()) {
                    Comunes.cargarJList(jListCarrera, postulante.getFormacionesAcademicasGrado());
                }
            }
            if (postulacion.getBeca().getTieneposgrado()) {
                if (!postulante.getFormacionesAcademicasPosgrado().isEmpty()) {
                    Comunes.cargarJList(jListPosgrado, postulante.getFormacionesAcademicasPosgrado());
                }
            }
            try {
                //agregado por franco para que cargue al inicio
                List<Docencia> docencias = postulante.getDocencias();
                if (postulante.getDocencias().get(docencias.size()-1).getUniversidad() != null && postulante.getDocencias().get(docencias.size()-1).getUnidadAcademica() != null) {
                    taDocencia.setText("Universidad: " + postulante.getDocencias().get(docencias.size()-1).getUniversidad().getDescripcion() + " - Categoria Docente: " + postulante.getDocencias().get(docencias.size()-1).getCategoriaDocente().getDescripcion());
                    taFacultad.setText(postulante.getDocencias().get(docencias.size()-1).getUnidadAcademica().getDescripcion());
                }
            } catch (Exception ex) {
            }
            //agregado por franco para que cargue al inicio

            /*
             * if (postulacion.getBeca().getTieneproyecto()) { if
             * (!postulacion.getProyecto().toString().isEmpty()) {
             *
             * }
             * }
             */
            if (postulacion.getProyecto() != null) {
                jTextAreaproyecto.setText(postulacion.getProyecto().toString());
                proyecto = postulacion.getProyecto();
            } else {
                jTextAreaproyecto.setText(null);
                proyecto = null;
            }

            cbPostulanteEstado.setSelectedItem(postulacion.getPostulanteestado());
            cbInformeAvance.setSelectedItem(postulacion.getInformeavance());
            cbInformeFinal.setSelectedItem(postulacion.getInformefinal());
            jTextAreaPlanTrabajo.setText(postulacion.getPlandetrabajo());
            resoluciones = postulacion.getDocumentacion();
            Comunes.cargarJList(jListDocumentacion, postulacion.getDocumentacion());
            Comunes.cargarJList(jListAsesorAdentro, postulacion.getAsesores());
            integrantesdentro = postulacion.getAsesores();
            List<Investigador> integrantesFuera = InvestigadorFacade.getInstance().getCienPrimerosInvestigadores();
            integrantesFuera.removeAll(postulacion.getAsesores());
            Comunes.cargarJList(jListAsesorAfuera, integrantesFuera);
            cargarTablaObservaciones();
            try {
                jxdpFechaAdjudicacion.setDate(postulacion.getFechaAdjudicacionPostulante());
            } catch (NoResultException ex) {
            }
            try {
                jxdpFechaInformeAvance.setDate(postulacion.getFechaBecaInformeAvance());
            } catch (NoResultException ex) {
            }
            try {
                jxdpFechaInformeFinal.setDate(postulacion.getFechaBecaInformeFinal());
            } catch (NoResultException ex) {
            }


        }
        mostrarFechasEstadoPostulacion();
    }

    private void ocultarcomponentes() {
//        jLabelDocencia.setVisible(false);
//        taDocencia.setVisible(false);
//        jLabelPosgrado.setVisible(false);
//        jListPosgrado.setVisible(false);
//        jLabelCarrera.setVisible(false);
//        jListCarrera.setVisible(false);
//        jPanelProyecto.setVisible(false);
//        jPanelAsesores.setVisible(false);
        jPanelSituacion.setVisible(true);
        btnModificarPostulante.setVisible(false);
    }

    private void mostrarcomponentes() {
        jLabelCarrera.setVisible(false);
        jListCarrera.setVisible(false);
        jsCarrera.setVisible(false);
        jLabelPosgrado.setVisible(false);
        jListPosgrado.setVisible(false);
        jsPosgrado.setVisible(false);
        jLabelDocencia.setVisible(false);
        taDocencia.setVisible(false);
        jsDocencia.setVisible(false);
        taFacultad.setVisible(false);
        jPanelAsesores.setVisible(false);
        jPanelProyecto.setVisible(false);
        if (beca != null) {
            if (beca.getTienecarrera()) {
                jLabelCarrera.setVisible(true);
                jListCarrera.setVisible(true);
                jsCarrera.setVisible(true);
                taFacultad.setVisible(true);

            }
            if (beca.getTieneposgrado()) {
                jLabelPosgrado.setVisible(true);
                jListPosgrado.setVisible(true);
                jsPosgrado.setVisible(true);

            }
            if (beca.getParadocentes()) {
                jLabelDocencia.setVisible(true);
                taDocencia.setVisible(true);
                jsDocencia.setVisible(true);
                taFacultad.setVisible(true);

            }
            if (beca.getTienedirector()) {
                jPanelAsesores.setVisible(true);
            }
            if (beca.getTieneproyecto()) {
                jPanelProyecto.setVisible(true);
            }
        }
    }

    private void limpiarlListPostulantes() {
        DefaultListModel listModel = new DefaultListModel();
        jListCarrera.setModel(listModel);
        taDocencia.setText(null);
        jListPosgrado.setModel(listModel);
        jListAsesorAdentro.setModel(listModel);
        jTextAreaproyecto.setText(null);
        taFacultad.setText(null);
    }

    private boolean validarPostulante() {
        //verifica si el postulante esta inscripto en convocatorias anteriores
        boolean flag = true;

        Becas bec = BecasFacade.getInstance().getBeca(tfBeca.getText());
        //JOptionPane.showMessageDialog(null, bec.getParaalumnos()+bec.getDescripcion());
        listadepostulaciones = PostulacionBecaFacade.getInstance().getPostulantes(postulante);
        for (PostulacionBeca postulantes : listadepostulaciones) {

            if (flag) {

                if (postulantes.getBeca().equals(bec)) {
                    flag = false;
                }
                if ((postulantes.getPostulanteestado().getDescripcion().equals("Adjudicado")) && (postulantes.getBeca().getParaalumnos() && bec.getParaalumnos())) {
                    flag = false;
                }
                if ((postulantes.getPostulanteestado().getDescripcion().equals("Adjudicado")) && (postulantes.getBeca().getParadocentes() && bec.getParadocentes())) {
                    flag = false;
                }
                if ((postulantes.getPostulanteestado().getDescripcion().equals("Adjudicado")) && (postulantes.getBeca().getTieneposgrado() && bec.getTieneposgrado())) {
                    flag = false;
                }

            }



        }


        return flag;
    }

    private void imprimirReporte() {

        new ReportesBecas().reporteBecas(postulacion.getId());

    }

    private void cargarEncabezadosTablaEvaluadores(ModeloTablaNoEditable modeloTabla) {
        modeloTabla.addColumn("ID");
        modeloTabla.addColumn("Estado de Beca");
        modeloTabla.addColumn("Fecha");
        modeloTabla.addColumn("Evaluador");
        modeloTabla.addColumn("Institucion");
        modeloTabla.addColumn("Calificacion letras");
        modeloTabla.addColumn("Calificacion numero");
        modeloTabla.addColumn("Observaciones");
        tblEvaluadores.setModel(modeloTabla);
    }

    private void configurarTabla(JTable jtable) {

        JViewport scroll = (JViewport) tblEvaluadores.getParent();
        int ancho = scroll.getWidth();
        int anchoColumna = 0;
        TableColumnModel modeloColumna = jtable.getColumnModel();
        TableColumn columnaTabla;
        for (int i = 0; i < jtable.getColumnCount(); i++) {
            columnaTabla = modeloColumna.getColumn(i);
            switch (i) {
                case 0:
                    anchoColumna = (1 * ancho) / 100;
                    break;
                case 1:
                    anchoColumna = (20 * ancho) / 100;
                    break;
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                    anchoColumna = (5 * ancho) / 100;
                    break;
            }
            columnaTabla.setPreferredWidth(anchoColumna);
            jtable.setColumnModel(modeloColumna);
        }
        jtable.getTableHeader().setFont(new java.awt.Font("Dialog",
                java.awt.Font.PLAIN, 10));
        jtable.getTableHeader().setBackground(java.awt.Color.WHITE);
        jtable.getTableHeader().setForeground(Color.BLACK);
        //Si le queremos cambiar el tamaño a la tablita
        jtable.setFont(new java.awt.Font("Dialog",
                java.awt.Font.PLAIN, 10));
    }

    private void cargarTabla(Evaluaciones eva) {
        //for (Evaluaciones eva : EvaluacionesFacade.getInstance().getEvaluacionesPostulacion(postulacion)) {
        Object[] fila = new Object[8];
        fila[0] = eva.getId();
        fila[1] = eva.getEvaluacionEstado();
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        try {
            fila[2] = formato.format(eva.getFecha());
        } catch (Exception ex) {
        }
        fila[3] = eva.getEvaluador();
        fila[4] = eva.getInstitucion();
        fila[5] = eva.getCalificacionEnLetras();
        fila[6] = eva.getCalificacionEnNumeros();
        fila[7] = eva.getObservaciones();
        modeloTablaEvaluadores.addRow(fila);
        // }
        tblEvaluadores.setModel(modeloTablaEvaluadores);
    }

    private void agregarEvaluacion() {
        //if (PostulacionBecaFacade.getInstance().existePostulante(postulacion.getPostulante())) {
        if (tipoOperacion.equals("Modificación")) {
            diagEvaluaciones diagEvaluaciones = new diagEvaluaciones(null, true, "Alta", postulacion, usuario);
            diagEvaluaciones.setLocation(Comunes.centrarDialog(diagEvaluaciones));
            diagEvaluaciones.setVisible(true);
            if (diagEvaluaciones.getEvaluacion() != null) {
                cargarTabla(diagEvaluaciones.getEvaluacion());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe dar de alta el Becario \n"
                    + "para realizar esta operacion");

        }
    }

    private void modificarEvaluacion() {
        //if (PostulacionBecaFacade.getInstance().existePostulante(postulacion.getPostulante())) {
        if (tipoOperacion.equals("Modificación")) {
            if (tblEvaluadores.getSelectedRow() != -1) {
                evaluacion = new Evaluaciones();
                evaluacion = EvaluacionesFacade.getInstance().buscar((Long) tblEvaluadores.getValueAt(tblEvaluadores.getSelectedRow(), 0));
                diagEvaluaciones diagEvaluaciones = new diagEvaluaciones(null, true, "Modificación", postulacion, evaluacion, usuario);
                diagEvaluaciones.setLocation(Comunes.centrarDialog(diagEvaluaciones));
                diagEvaluaciones.setVisible(true);
                if (diagEvaluaciones.getEvaluacion() != null) {

                    modeloTablaEvaluadores = new ModeloTablaNoEditable();
                    cargarEncabezadosTablaEvaluadores(modeloTablaEvaluadores);
                    configurarTabla(tblEvaluadores);
                    cargarTablaEvaluadores();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debe seleccionar una fila para "
                        + "\nrealizar la modificación");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Debe dar de alta el Becario con sus \n"
                    + "evaluadores para realizar esta operacion");

        }
    }

    private void eliminarEvaluacion() {
        //if (PostulacionBecaFacade.getInstance().existePostulante(postulacion.getPostulante())) {
        if (tipoOperacion.equals("Modificación")) {
            if (tblEvaluadores.getSelectedRow() != -1) {
                int i = JOptionPane.showConfirmDialog(null, "Confirmar la eliminacion", "Confirmar", JOptionPane.YES_NO_OPTION);
                if (i == 0) {
                    EvaluacionesFacade.getInstance().eliminar((Long) tblEvaluadores.getValueAt(tblEvaluadores.getSelectedRow(), 0));
                    modeloTablaEvaluadores = new ModeloTablaNoEditable();
                    cargarEncabezadosTablaEvaluadores(modeloTablaEvaluadores);
                    configurarTabla(tblEvaluadores);
                    cargarTablaEvaluadores();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debe seleccionar una fila para "
                        + "\nrealizar la eliminacion");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Debe dar de alta el Becario \n"
                    + "para realizar esta operacion");

        }
    }

    private void cargarTablaPagos() {
        for (NotaPago npago : NotaPagoFacade.getInstance().getPagosPostulante(postulacion)) {
            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
            Object[] fila = new Object[6];
            fila[0] = npago.getId();
            try {
                fila[1] = formato.format(npago.getFecha());
            } catch (Exception e) {
            }
            fila[2] = npago.getNroNota();
            fila[3] = npago.getMotivo();
            try {
                fila[4] = formato.format(npago.getFechaDeRecibidoMesaDeEntrada());
            } catch (Exception e) {
            }
            try {
                fila[5] = formato.format(npago.getFechaDesembolso());
            } catch (Exception ex) {
            }
            modeloTablaPagos.addRow(fila);
        }
        tblPagos.setModel(modeloTablaPagos);
    }

    private void cargarEncabezadosTablaPagos(ModeloTablaNoEditable modeloTabla) {
        modeloTabla.addColumn("ID");
        modeloTabla.addColumn("Fecha");
        modeloTabla.addColumn("Nro Nota");
        modeloTabla.addColumn("Motivo");
        modeloTabla.addColumn("Recibido MMEE");
        modeloTabla.addColumn("Fecha Desembolso");
        tblPagos.setModel(modeloTabla);
    }

    private void agregarNotaPago() {
        if (tipoOperacion.equals("Modificación")) {
            diagNotaExterna nuevoPago = new diagNotaExterna(null, true, "Alta", postulacion, usuario);
            nuevoPago.setLocation(Comunes.centrarDialog(nuevoPago));
            nuevoPago.setVisible(true);
            if (nuevoPago.getNotaPago() != null) {
                cargarPago(nuevoPago.getNotaPago());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe dar de alta el Becario \n"
                    + "para realizar esta operacion");

        }
    }

    private void modificarPago() {
        if (tipoOperacion.equals("Modificación")) {
            if (tblPagos.getSelectedRow() != -1) {
                notaPago = new NotaPago();
                notaPago = NotaPagoFacade.getInstance().buscar((Long) tblPagos.getValueAt(tblPagos.getSelectedRow(), 0));
                diagNotaExterna modificarPago = new diagNotaExterna(null, true, "Modificación", postulacion, notaPago, usuario);
                modificarPago.setLocation(Comunes.centrarDialog(modificarPago));
                modificarPago.setVisible(true);
                if (modificarPago.getNotaPago() != null) {
                    modeloTablaPagos = new ModeloTablaNoEditable();
                    cargarEncabezadosTablaPagos(modeloTablaPagos);
                    configurarTabla(tblPagos);
                    cargarTablaPagos();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debe seleccionar una fila para "
                        + "\nrealizar la modificación");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Debe dar de alta el Becario \n"
                    + "para realizar esta operacion");

        }
    }

    private void eliminarPago() {
        if (tipoOperacion.equals("Modificación")) {
            if (tblPagos.getSelectedRow() != -1) {
                int i = JOptionPane.showConfirmDialog(null, "Confirmar la eliminacion", "Confirmar", JOptionPane.YES_NO_OPTION);
                if (i == 0) {
                    NotaPagoFacade.getInstance().eliminar((Long) tblPagos.getValueAt(tblPagos.getSelectedRow(), 0));
                    modeloTablaPagos = new ModeloTablaNoEditable();
                    cargarEncabezadosTablaPagos(modeloTablaPagos);
                    configurarTabla(tblPagos);
                    cargarTablaPagos();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debe seleccionar una fila para "
                        + "\nrealizar la eliminacion");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Debe dar de alta el Becario con sus \n"
                    + "evaluadores para realizar esta operacion");

        }
    }

    private void abrirDocumentos() {
        if (jListDocumentacion.getSelectedIndex() != -1) //deberás hacer 
        {
            try {
                Resolucion resolucion = (Resolucion) jListDocumentacion.getSelectedValue();
                Documento documento = resolucion.getDocumento();
                byte[] archivoInterno = documento.getContenidoArchivo();
                File archivo = File.createTempFile("tmp", documento.getNombreArchivo());
                archivo.deleteOnExit();
                try (FileOutputStream fos = new FileOutputStream(archivo)) {
                    fos.write(archivoInterno);
                }
                if (Desktop.isDesktopSupported() == true) {
                    Desktop desktop = Desktop.getDesktop();
                    try {
                        if (archivo.exists() == true) {
                            desktop.open(archivo);
                        } else {
                            JOptionPane.showMessageDialog(null, "No se encontrar el archivo: " + archivo.getAbsolutePath(), "Aviso", JOptionPane.WARNING_MESSAGE);
                        }
                    } catch (IOException e) {
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "No se puede ejecutar el comando de apertura en este sistema operativo", "Aviso", JOptionPane.WARNING_MESSAGE);
                }
            } catch (IOException ex) {
                Logger.getLogger(diagProyecto.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un documento", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void quitarDocumentacion() {
        if (jListDocumentacion.getSelectedIndex() != -1) {
            resoluciones.remove((Resolucion) jListDocumentacion.getSelectedValue());
            Comunes.cargarJList(jListDocumentacion, resoluciones);
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un elemento de la lista \n"
                    + "para poder eliminarlo");
        }
    }

    private void cargarTablaEvaluadores() {

        for (Evaluaciones eva : EvaluacionesFacade.getInstance().getEvaluacionesPostulacion(postulacion)) {
            Object[] fila = new Object[8];
            fila[0] = eva.getId();
            fila[1] = eva.getEvaluacionEstado();
            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
            try {
                fila[2] = formato.format(eva.getFecha());
            } catch (Exception ex) {
            }

            fila[3] = eva.getEvaluador();
            fila[4] = eva.getInstitucion();
            fila[5] = eva.getCalificacionEnLetras();
            fila[6] = eva.getCalificacionEnNumeros();
            fila[7] = eva.getObservaciones();
            modeloTablaEvaluadores.addRow(fila);
        }
        tblEvaluadores.setModel(modeloTablaEvaluadores);

    }

    private void cargarPago(NotaPago pago) {
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        Object[] fila = new Object[6];
        fila[0] = pago.getId();
        try {
            fila[1] = formato.format(pago.getFecha());
        } catch (Exception e) {
        }
        fila[2] = pago.getNroNota();
        fila[3] = pago.getMotivo();
        try {
            fila[4] = formato.format(pago.getFechaDeRecibidoMesaDeEntrada());
        } catch (Exception e) {
        }
        try {
            fila[5] = formato.format(pago.getFechaDesembolso());
        } catch (Exception ex) {
        }

        modeloTablaPagos.addRow(fila);

        tblPagos.setModel(modeloTablaPagos);
    }

    private void mostrarRRHH() {
        if (proyecto != null) {
            diagProyectoResultado rrhh = new diagProyectoResultado(null, true, usuario, proyecto);
            rrhh.setLocation(Comunes.centrarDialog(rrhh));
            rrhh.setVisible(true);

        } else {
            JOptionPane.showMessageDialog(null, "Debe Seleccionar un proyecto primero!!");
        }
    }

    private void mostrarFechasEstadoPostulacion() {

        verificarPostulanteEstado();
        verificarCbInformeAvance();
        verificarCbInformeFinal();

    }

    private void verificarPostulanteEstado() {

        jlbFechaAdj.setVisible(false);
        jxdpFechaAdjudicacion.setVisible(false);
        if (cbPostulanteEstado.getSelectedItem().toString().equals("Adjudicado")) {
            jlbFechaAdj.setVisible(true);
            jxdpFechaAdjudicacion.setVisible(true);
        }

    }

    private void verificarCbInformeAvance() {

        jlbFechaInfAvance.setVisible(false);
        jxdpFechaInformeAvance.setVisible(false);
        if (cbInformeAvance.getSelectedItem().toString().equals("Aprobado") || cbInformeAvance.getSelectedItem().toString().equals("Desaprobado")) {
            jlbFechaInfAvance.setVisible(true);
            jxdpFechaInformeAvance.setVisible(true);
        }
    }

    private void verificarCbInformeFinal() {
        jlbFechaInfFinal.setVisible(false);
        jxdpFechaInformeFinal.setVisible(false);
        if (cbInformeFinal.getSelectedItem().toString().equals("Aprobado") || cbInformeFinal.getSelectedItem().toString().equals("Desaprobado")) {
            jlbFechaInfFinal.setVisible(true);
            jxdpFechaInformeFinal.setVisible(true);
        }
    }

    private void agregarObservacion() {
        if (tipoOperacion.equals("Modificación")) {
            diagBecaObservacion diagObservacion = new diagBecaObservacion(null, rootPaneCheckingEnabled, "Alta", postulacion);
            diagObservacion.setLocation(Comunes.centrarDialog(diagObservacion));
            diagObservacion.setVisible(true);
            if (diagObservacion.getObservacion() != null) {
                observacion = diagObservacion.getObservacion();
                cargarObservacion();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe dar de alta el Becario \n"
                    + "para realizar esta operacion");

        }

    }

    private void cargarEncabezadosTablaObservaciones(ModeloTablaNoEditable modeloTablaObservaciones) {
        modeloTablaObservaciones.addColumn("Codigo");
        modeloTablaObservaciones.addColumn("Fecha");
        modeloTablaObservaciones.addColumn("Observacion");
        tblObservaciones.setModel(modeloTablaObservaciones);
    }

    private void cargarObservacion() {
        Object[] fila = new Object[3];
        fila[0] = observacion.getId();
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        try {
            fila[1] = formato.format(observacion.getFecha());
        } catch (Exception ex) {
        }
        fila[2] = observacion.getObservacion();
        modeloTablaObservaciones.addRow(fila);
    }

    private void modificarObservacion() {
        if (tblObservaciones.getSelectedRow() != -1) {
            observacion = new Observacion();
            observacion = ObservacionFacade.getInstance().buscar((Long) tblObservaciones.getValueAt(tblObservaciones.getSelectedRow(), 0));
            diagBecaObservacion modObservacion = new diagBecaObservacion(null, true, "Modificación", postulacion, observacion);
            modObservacion.setLocation(Comunes.centrarDialog(modObservacion));
            modObservacion.setVisible(true);
            if (modObservacion.getObservacion() != null) {
                observacion = modObservacion.getObservacion();
                modeloTablaObservaciones = new ModeloTablaNoEditable();
                cargarEncabezadosTablaObservaciones(modeloTablaObservaciones);
                configurarTabla(tblObservaciones);
                cargarTablaObservaciones();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe Seleccionar una fila!!");

        }

    }

    private void eliminarObservacion() {
        if (tblObservaciones.getSelectedRow() != -1) {
            int i = JOptionPane.showConfirmDialog(null, "Confirmar la eliminacion", "Confirmar", JOptionPane.YES_NO_OPTION);
            if (i == 0) {
                ObservacionFacade.getInstance().eliminar((Long) tblObservaciones.getValueAt(tblObservaciones.getSelectedRow(), 0));
                modeloTablaObservaciones = new ModeloTablaNoEditable();
                cargarEncabezadosTablaObservaciones(modeloTablaObservaciones);
                configurarTabla(tblObservaciones);
                cargarTablaObservaciones();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe Seleccionar una Fila!");
        }
    }

    private void cargarTablaObservaciones() {

        for (Observacion obs : ObservacionFacade.getInstance().getObservacionesPostulacion(postulacion)) {
            Object[] fila = new Object[3];
            fila[0] = obs.getId();
            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
            try {
                fila[1] = formato.format(obs.getFecha());
            } catch (Exception ex) {
            }

            fila[2] = obs.getObservacion();
            modeloTablaObservaciones.addRow(fila);
        }


    }

    private void agregarInvestigador() {
        diagInvestigador diagInvestigador = new diagInvestigador(null, true, "Alta", usuario);
        diagInvestigador.setLocation(Comunes.centrarDialog(diagInvestigador));
        diagInvestigador.setVisible(true);
        Comunes.cargarJList(jListAsesorAfuera, InvestigadorFacade.getInstance().getTodosInvestigador());
    }

    private void modificarInvestigador() {
        if (jListAsesorAfuera.getSelectedIndex() != -1) {
            diagInvestigador diagInvestigador = new diagInvestigador(null, true, "Modificación", (Investigador) jListAsesorAfuera.getSelectedValue(), usuario);
            diagInvestigador.setLocation(Comunes.centrarDialog(diagInvestigador));
            diagInvestigador.setVisible(true);
            Comunes.cargarJList(jListAsesorAfuera, InvestigadorFacade.getInstance().getTodosInvestigador());
        }else{
            JOptionPane.showMessageDialog(null, "Debe seleccionar un investigador!!");
        }

    }
}
