/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * diagDocumentacionBeca.java
 *
 * Created on 22/11/2011, 10:00:47
 */
package vistas.becas;

import entidades.becas.DocumentacionBeca;
import facade.DocumentacionBecaFacade;
import includes.Comunes;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.channels.FileChannel;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JOptionPane;

/**
 *
 * @author huguito
 */
public class diagDocumentacionBeca extends javax.swing.JDialog {
    
    private DocumentacionBeca documentacion;
    private String tipoOperacion;
    private DocumentacionBecaFacade documentacionbecafac;
    private List doc;
    private JList documentos;
    private List<DocumentacionBeca> docum;
    
    
    /** Creates new form diagDocumentacionBeca */
    public diagDocumentacionBeca(java.awt.Frame parent, boolean modal, String tipoOperacion, JList documentos, DocumentacionBeca documentacion) {
        super(parent, modal);
        initComponents();
        this.documentos=documentos;
        this.documentacion=documentacion;
        this.tipoOperacion=tipoOperacion;
        inicializarcomponentes();
        docum=new ArrayList<DocumentacionBeca>();
    }
   
    public diagDocumentacionBeca(java.awt.Frame parent, boolean modal, String tipoOperacion) {
        super(parent, modal);
        this.tipoOperacion = tipoOperacion;
        
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pnCargar = new javax.swing.JPanel();
        tfRutaCargaDocumento = new javax.swing.JTextField();
        btnEscogerArchivo = new javax.swing.JButton();
        pnGuardar = new javax.swing.JPanel();
        tfRutaDirectorioDestino = new javax.swing.JTextField();
        btnEscogerCarpeta = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taDescripcion = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnCargar.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagDocumentacionBeca.class, "diagDocumentacionBeca.pnCargar.border.title"))); // NOI18N

        tfRutaCargaDocumento.setEditable(false);
        tfRutaCargaDocumento.setText(org.openide.util.NbBundle.getMessage(diagDocumentacionBeca.class, "diagDocumentacionBeca.tfRutaCargaDocumento.text")); // NOI18N

        btnEscogerArchivo.setText(org.openide.util.NbBundle.getMessage(diagDocumentacionBeca.class, "diagDocumentacionBeca.btnEscogerArchivo.text")); // NOI18N
        btnEscogerArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEscogerArchivoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnCargarLayout = new javax.swing.GroupLayout(pnCargar);
        pnCargar.setLayout(pnCargarLayout);
        pnCargarLayout.setHorizontalGroup(
            pnCargarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCargarLayout.createSequentialGroup()
                .addComponent(tfRutaCargaDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEscogerArchivo, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnCargarLayout.setVerticalGroup(
            pnCargarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCargarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(tfRutaCargaDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnEscogerArchivo))
        );

        pnGuardar.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagDocumentacionBeca.class, "diagDocumentacionBeca.pnGuardar.border.title"))); // NOI18N

        tfRutaDirectorioDestino.setEditable(false);
        tfRutaDirectorioDestino.setText(org.openide.util.NbBundle.getMessage(diagDocumentacionBeca.class, "diagDocumentacionBeca.tfRutaDirectorioDestino.text")); // NOI18N

        btnEscogerCarpeta.setText(org.openide.util.NbBundle.getMessage(diagDocumentacionBeca.class, "diagDocumentacionBeca.btnEscogerCarpeta.text")); // NOI18N
        btnEscogerCarpeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEscogerCarpetaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnGuardarLayout = new javax.swing.GroupLayout(pnGuardar);
        pnGuardar.setLayout(pnGuardarLayout);
        pnGuardarLayout.setHorizontalGroup(
            pnGuardarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnGuardarLayout.createSequentialGroup()
                .addComponent(tfRutaDirectorioDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEscogerCarpeta)
                .addContainerGap(51, Short.MAX_VALUE))
        );
        pnGuardarLayout.setVerticalGroup(
            pnGuardarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnGuardarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(tfRutaDirectorioDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnEscogerCarpeta))
        );

        btnGuardar.setText(org.openide.util.NbBundle.getMessage(diagDocumentacionBeca.class, "diagDocumentacionBeca.btnGuardar.text")); // NOI18N
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        jLabel3.setText(org.openide.util.NbBundle.getMessage(diagDocumentacionBeca.class, "diagDocumentacionBeca.jLabel3.text")); // NOI18N

        taDescripcion.setColumns(20);
        taDescripcion.setRows(5);
        jScrollPane1.setViewportView(taDescripcion);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE))
                            .addComponent(pnCargar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnCargar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

        guardarArchivo();     }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEscogerArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEscogerArchivoActionPerformed
     cargarDocumento();
    }//GEN-LAST:event_btnEscogerArchivoActionPerformed

    private void btnEscogerCarpetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEscogerCarpetaActionPerformed
     escogerCarpetaDestino();
    }//GEN-LAST:event_btnEscogerCarpetaActionPerformed

    /**
     * @param args the command line arguments
     */
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEscogerArchivo;
    private javax.swing.JButton btnEscogerCarpeta;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnCargar;
    private javax.swing.JPanel pnGuardar;
    private javax.swing.JTextArea taDescripcion;
    private javax.swing.JTextField tfRutaCargaDocumento;
    private javax.swing.JTextField tfRutaDirectorioDestino;
    // End of variables declaration//GEN-END:variables

    private void cargarDocumento() {
        JFileChooser fileChooser = new JFileChooser();
        int seleccion = fileChooser.showOpenDialog(null);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File fichero = fileChooser.getSelectedFile();
            tfRutaCargaDocumento.setText(fichero.getAbsolutePath());
        }
    }

    private void escogerCarpetaDestino() {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            tfRutaDirectorioDestino.setText(fileChooser.getSelectedFile().getPath());
        }
    }

    private void guardarArchivo() {
        if (validarDatos()) {
            try {
                if (tipoOperacion.equals("Alta")) {

                    File archivoEntrada = new File(tfRutaCargaDocumento.getText());
                    File archivoSalida = new File(tfRutaDirectorioDestino.getText()
                            + File.separator +taDescripcion.getText()+ Comunes.getExtension(archivoEntrada));
                    FileInputStream fileInput = new FileInputStream(archivoEntrada);
                    FileOutputStream fileOutputStream = new FileOutputStream(archivoSalida);
                    FileChannel in = fileInput.getChannel();
                    FileChannel out = fileOutputStream.getChannel();
                    in.transferTo(0, archivoEntrada.length(), out);
                    in.close();
                    out.close();
                    documentacion=new DocumentacionBeca();
                    documentacion.setDescripcion(taDescripcion.getText());
                    documentacion.setFecha(Comunes.obtenerFechaActualDesdeDB());
                    documentacion.setUbicacion(archivoSalida.getAbsolutePath());
                    
                    
                    DocumentacionBecaFacade.getInstance().alta(documentacion);
                    //documentacionbecafac.alta(documentacion);
                    JOptionPane.showMessageDialog(null, "Documentacion archivada "
                                + "correctamente");
                    
                    //Comunes.cargarJList(documentos, (List)documentacion);
                    this.dispose();
                    
                                      
                } else if (tipoOperacion.equals("Modificación")) {
                    File archivoEntrada = new File(tfRutaCargaDocumento.getText());
                    File archivoSalida = new File(tfRutaDirectorioDestino.getText()
                            + File.separator + Comunes.getExtension(archivoEntrada));
                    FileInputStream fileInput = new FileInputStream(archivoEntrada);
                    FileOutputStream fileOutputStream = new FileOutputStream(archivoSalida);
                    FileChannel in = fileInput.getChannel();
                    FileChannel out = fileOutputStream.getChannel();
                    in.transferTo(0, archivoEntrada.length(), out);
                    in.close();
                    out.close();
                    documentacion=new DocumentacionBeca();
                    documentacion.setDescripcion(taDescripcion.getText());
                    documentacion.setFecha(Comunes.obtenerFechaActualDesdeDB());
                    documentacion.setUbicacion(archivoSalida.getAbsolutePath());
                    documentacionbecafac.modificar(documentacion);
                    JOptionPane.showMessageDialog(null, "La modificación de la Documentacion "
                            + "se ha realizado correctamente");
                    this.dispose();

                } else if (tipoOperacion.equals("Consulta")) {
                    this.dispose();
                }


            } catch (FileNotFoundException ex) {
                
            } catch (IOException ex) {
                

            }
        }
    }

    private boolean validarDatos() {
        boolean flag = false;
        if (!tfRutaCargaDocumento.getText().equals("")) {
            if (!tfRutaDirectorioDestino.getText().equals("")) {
                if (!taDescripcion.getText().equals("")) {
                    flag=true;
                } else {
                    JOptionPane.showMessageDialog(null, "Debe escribir una descripcion del documento",
                            "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debe escoger una carpeta destino",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe escoger un archivo de entrada",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
        return flag;
    }

    private void inicializarcomponentes() {
        if (tipoOperacion.equals("modificacion")){
            tfRutaCargaDocumento.setText(documentacion.getUbicacion());
            tfRutaDirectorioDestino.setText(documentacion.getUbicacion());
            taDescripcion.setText(documentacion.getDescripcion());
        }else if (tipoOperacion.equals("consulta")){
            tfRutaCargaDocumento.setText(documentacion.getUbicacion());
            tfRutaDirectorioDestino.setText(documentacion.getUbicacion());
            taDescripcion.setText(documentacion.getDescripcion());
            tfRutaCargaDocumento.setEditable(false);
            tfRutaDirectorioDestino.setEditable(false);
            taDescripcion.setEditable(false);
        }else if (tipoOperacion.equals("Alta")){}
    }

    
}
