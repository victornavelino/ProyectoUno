/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas.becas;

import entidades.becas.NotaPago;
import entidades.becas.Pago;
import entidades.becas.PostulacionBeca;
import entidades.operaciones.Operacion;
import vista.proyectos.vinculacion.seguimiento.*;
import entidades.proyecto.vinculacion.NotaExterna;
import entidades.usuario.Usuario;
import facade.NotaPagoFacade;
import facade.OperacionFacade;
import includes.Comunes;
import java.text.SimpleDateFormat;
import javax.persistence.NoResultException;
import javax.swing.JOptionPane;
import org.apache.commons.validator.routines.FloatValidator;
import org.apache.commons.validator.routines.LongValidator;

/**
 *
 * @author Panchi
 */
public class diagNotaExterna extends javax.swing.JDialog {

    private NotaExterna notaExterna;
    private String tipoOperacion;
    private PostulacionBeca postulacion;
    private Usuario usuario;
    private NotaPago notaPago;

    public NotaPago getNotaPago() {
        return notaPago;
    }

    public void setNotaPago(NotaPago notaPago) {
        this.notaPago = notaPago;
    }

    /**
     * Creates new form diagNotaExterna
     */
    public diagNotaExterna(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    diagNotaExterna(java.awt.Frame parent, boolean modal, String TipoOperacion, PostulacionBeca postulacion, Usuario usuario) {
        super(parent, modal);
        this.tipoOperacion = TipoOperacion;
        this.postulacion = postulacion;
        this.usuario = usuario;
        initComponents();
        inicializarComponentes();
    }

    diagNotaExterna(java.awt.Frame parent, boolean modal, String TipoOperacion, PostulacionBeca postulacion, NotaPago notaPago, Usuario usuario) {
        super(parent, modal);
        this.tipoOperacion = TipoOperacion;
        this.postulacion = postulacion;
        this.usuario = usuario;
        this.notaPago = notaPago;
        initComponents();
        inicializarComponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        dateFecha = new org.jdesktop.swingx.JXDatePicker();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtfNroNota = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtaMotivo = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        dateMesaEntrada = new org.jdesktop.swingx.JXDatePicker();
        jLabel6 = new javax.swing.JLabel();
        dateDesembolso = new org.jdesktop.swingx.JXDatePicker();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagNotaExterna.class, "diagNotaExterna.jPanel1.border.title"))); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(diagNotaExterna.class, "diagNotaExterna.jLabel1.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(diagNotaExterna.class, "diagNotaExterna.jLabel2.text")); // NOI18N

        jLabel3.setText(org.openide.util.NbBundle.getMessage(diagNotaExterna.class, "diagNotaExterna.jLabel3.text")); // NOI18N

        jtfNroNota.setText(org.openide.util.NbBundle.getMessage(diagNotaExterna.class, "diagNotaExterna.jtfNroNota.text")); // NOI18N
        jtfNroNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfNroNotaActionPerformed(evt);
            }
        });

        jtaMotivo.setColumns(20);
        jtaMotivo.setLineWrap(true);
        jtaMotivo.setRows(5);
        jScrollPane1.setViewportView(jtaMotivo);

        jLabel4.setText(org.openide.util.NbBundle.getMessage(diagNotaExterna.class, "diagNotaExterna.jLabel4.text")); // NOI18N

        jLabel6.setText(org.openide.util.NbBundle.getMessage(diagNotaExterna.class, "diagNotaExterna.jLabel6.text")); // NOI18N

        jButton1.setText(org.openide.util.NbBundle.getMessage(diagNotaExterna.class, "diagNotaExterna.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText(org.openide.util.NbBundle.getMessage(diagNotaExterna.class, "diagNotaExterna.jButton2.text")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dateDesembolso, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dateMesaEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfNroNota)
                            .addComponent(dateFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(89, 89, 89)))
                .addGap(34, 34, 34))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfNroNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(dateMesaEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(dateDesembolso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfNroNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfNroNotaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfNroNotaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        aceptar();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(diagNotaExterna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(diagNotaExterna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(diagNotaExterna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(diagNotaExterna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                diagNotaExterna dialog = new diagNotaExterna(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXDatePicker dateDesembolso;
    private org.jdesktop.swingx.JXDatePicker dateFecha;
    private org.jdesktop.swingx.JXDatePicker dateMesaEntrada;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jtaMotivo;
    private javax.swing.JTextField jtfNroNota;
    // End of variables declaration//GEN-END:variables

    private void aceptar() {
        if (validar()) {
            if (tipoOperacion.equals("Alta")) {
                
                notaPago = new NotaPago();
                notaPago.setFecha(dateFecha.getDate());
                notaPago.setNroNota(jtfNroNota.getText());
                notaPago.setMotivo(jtaMotivo.getText());
                notaPago.setFechaDeRecibidoMesaDeEntrada(dateMesaEntrada.getDate());
                notaPago.setFechaDesembolso(dateDesembolso.getDate());
                notaPago.setPostulacionBeca(postulacion);
                NotaPagoFacade.getInstance().alta(notaPago);
                Operacion operacion = new Operacion();
                operacion.setFecha(Comunes.obtenerFechaActualDesdeDB());
                operacion.setOperacion("Alta de Nota de pago Beca");
                operacion.setUsuario(usuario);
                OperacionFacade.getInstance().alta(operacion);
                JOptionPane.showMessageDialog(null, "Alta Registrada");
                this.dispose();
            }
            
            if(tipoOperacion.equals("Modificación")){
                notaPago.setFecha(dateFecha.getDate());
                notaPago.setNroNota(jtfNroNota.getText());
                notaPago.setMotivo(jtaMotivo.getText());
                notaPago.setFechaDeRecibidoMesaDeEntrada(dateMesaEntrada.getDate());
                notaPago.setFechaDesembolso(dateDesembolso.getDate());
                notaPago.setPostulacionBeca(postulacion);
                NotaPagoFacade.getInstance().modificar(notaPago);
                Operacion operacion = new Operacion();
                operacion.setFecha(Comunes.obtenerFechaActualDesdeDB());
                operacion.setOperacion("Modificacion de Nota de pago Beca");
                operacion.setUsuario(usuario);
                OperacionFacade.getInstance().alta(operacion);
                JOptionPane.showMessageDialog(null, "Modificación Registrada");
                this.dispose();
            }

        }
    }

    private boolean validar() {
        boolean flag = false;
        if (!jtfNroNota.getText().isEmpty()) {
            if (!jtaMotivo.getText().isEmpty()) {
                if (jtaMotivo.getText().length() < 250) {
                    flag = true;
                } else {
                    JOptionPane.showMessageDialog(null, "Texto demasiado largo",
                            "Error", JOptionPane.ERROR_MESSAGE);
                }

            } else {
                JOptionPane.showMessageDialog(null, "Motivo incorrecto",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Número de nota incorrecto",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }

        return flag;


    }

    public NotaExterna getNotaExternaCreada() {
        return notaExterna;
    }

    private void inicializarComponentes() {
        dateDesembolso.setFormats(new SimpleDateFormat("dd/MM/yyyy"));
        dateFecha.setFormats(new SimpleDateFormat("dd/MM/yyyy"));
        dateMesaEntrada.setFormats(new SimpleDateFormat("dd/MM/yyyy"));
        if (tipoOperacion.equals("Modificación")) {
            try {
                dateFecha.setDate(notaPago.getFecha());
            } catch (NoResultException ex) {
            }
            try {
                jtfNroNota.setText(notaPago.getNroNota());
            } catch (NoResultException ex) {
            }
            try {
                jtaMotivo.setText(notaPago.getMotivo());
            } catch (NoResultException ex) {
            }
            try {
                dateMesaEntrada.setDate(notaPago.getFechaDeRecibidoMesaDeEntrada());
            } catch (NoResultException ex) {
            }
            try {
                dateDesembolso.setDate(notaPago.getFechaDesembolso());
            } catch (NoResultException ex) {
            }




        }

    }
}
