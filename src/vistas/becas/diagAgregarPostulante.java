/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * diagAgregarPostulante.java
 *
 * Created on 08/11/2011, 09:35:02
 */
package vistas.becas;

import entidades.becas.Becas;
import entidades.becas.PostulacionBeca;
import entidades.persona.investigador.Investigador;
import entidades.proyecto.Proyecto;
import entidades.usuario.Usuario;
import facade.BecasFacade;
import facade.PostulacionBecaFacade;
import facade.ProyectoFacade;
import facade.UsuarioFacade;
import includes.Comunes;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import reportes.becas.ReportesBecas;
import vistas.investigadores.diagInvestigador;

/**
 *
 * @author root
 */
public class diagAgregarPostulante extends javax.swing.JDialog {

    private ProyectoFacade proyectoFacade = ProyectoFacade.getInstance();
    private BecasFacade becasFacade = BecasFacade.getInstance();
    private UsuarioFacade usuariofac = new UsuarioFacade();
    private PostulacionBecaFacade postulacionbecafacade;
    private Usuario usuario;
    private Becas beca;
    private String TipoOperacion;
    private Long id;

    /**
     * Creates new form diagAgregarPostulante
     */
    public diagAgregarPostulante(java.awt.Frame parent, boolean modal, Usuario usuario) {
        super(parent, modal);
        initComponents();
        this.usuario = usuario;
        inicializarcomponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListBecas = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        tfBuscarBeca = new javax.swing.JTextField();
        btnConsultarPostulante = new javax.swing.JButton();
        btNuevaBeca = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListInscriptos = new javax.swing.JList();
        tfBuscarPostulante = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btEditarBeca = new javax.swing.JButton();
        bteliminar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        btNuevoPostulante1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mItemSalir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        mItemInformes = new javax.swing.JMenuItem();
        mItemConsultar = new javax.swing.JMenuItem();
        mItemDetalleInscripcion = new javax.swing.JMenuItem();
        mItemHistorial = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        mItemHistorialDirector = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), org.openide.util.NbBundle.getMessage(diagAgregarPostulante.class, "diagAgregarPostulante.jPanel1.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 14))); // NOI18N

        jListBecas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListBecasMouseClicked(evt);
            }
        });
        jListBecas.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListBecasValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListBecas);

        jLabel2.setText(org.openide.util.NbBundle.getMessage(diagAgregarPostulante.class, "diagAgregarPostulante.jLabel2.text")); // NOI18N

        tfBuscarBeca.setText(org.openide.util.NbBundle.getMessage(diagAgregarPostulante.class, "diagAgregarPostulante.tfBuscarBeca.text")); // NOI18N
        tfBuscarBeca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfBuscarBecaKeyPressed(evt);
            }
        });

        btnConsultarPostulante.setText(org.openide.util.NbBundle.getMessage(diagAgregarPostulante.class, "diagAgregarPostulante.btnConsultarPostulante.text")); // NOI18N
        btnConsultarPostulante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarPostulanteActionPerformed(evt);
            }
        });

        btNuevaBeca.setText(org.openide.util.NbBundle.getMessage(diagAgregarPostulante.class, "diagAgregarPostulante.btNuevaBeca.text")); // NOI18N
        btNuevaBeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNuevaBecaActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(jListInscriptos);

        tfBuscarPostulante.setText(org.openide.util.NbBundle.getMessage(diagAgregarPostulante.class, "diagAgregarPostulante.tfBuscarPostulante.text")); // NOI18N

        jLabel4.setText(org.openide.util.NbBundle.getMessage(diagAgregarPostulante.class, "diagAgregarPostulante.jLabel4.text")); // NOI18N

        jLabel3.setText(org.openide.util.NbBundle.getMessage(diagAgregarPostulante.class, "diagAgregarPostulante.jLabel3.text")); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(diagAgregarPostulante.class, "diagAgregarPostulante.jLabel1.text")); // NOI18N

        btEditarBeca.setText(org.openide.util.NbBundle.getMessage(diagAgregarPostulante.class, "diagAgregarPostulante.btEditarBeca.text")); // NOI18N
        btEditarBeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarBecaActionPerformed(evt);
            }
        });

        bteliminar.setText(org.openide.util.NbBundle.getMessage(diagAgregarPostulante.class, "diagAgregarPostulante.bteliminar.text")); // NOI18N
        bteliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bteliminarActionPerformed(evt);
            }
        });

        jButton1.setText(org.openide.util.NbBundle.getMessage(diagAgregarPostulante.class, "diagAgregarPostulante.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText(org.openide.util.NbBundle.getMessage(diagAgregarPostulante.class, "diagAgregarPostulante.jButton2.text")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText(org.openide.util.NbBundle.getMessage(diagAgregarPostulante.class, "diagAgregarPostulante.jButton3.text")); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel5.setText(org.openide.util.NbBundle.getMessage(diagAgregarPostulante.class, "diagAgregarPostulante.jLabel5.text")); // NOI18N

        btNuevoPostulante1.setText(org.openide.util.NbBundle.getMessage(diagAgregarPostulante.class, "diagAgregarPostulante.btNuevoPostulante1.text")); // NOI18N
        btNuevoPostulante1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNuevoPostulante1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btNuevaBeca)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(bteliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                                    .addComponent(btEditarBeca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btNuevoPostulante1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnConsultarPostulante, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfBuscarBeca)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addComponent(jLabel3))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfBuscarPostulante, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 13, Short.MAX_VALUE)))
                .addGap(24, 24, 24))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tfBuscarBeca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addGap(12, 12, 12))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(tfBuscarPostulante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, 0, 180, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(btNuevoPostulante1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(btnConsultarPostulante)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btNuevaBeca)
                            .addComponent(btEditarBeca))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bteliminar)))
                .addContainerGap())
        );

        jMenu1.setText(org.openide.util.NbBundle.getMessage(diagAgregarPostulante.class, "diagAgregarPostulante.jMenu1.text")); // NOI18N

        mItemSalir.setText(org.openide.util.NbBundle.getMessage(diagAgregarPostulante.class, "diagAgregarPostulante.mItemSalir.text")); // NOI18N
        mItemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItemSalirActionPerformed(evt);
            }
        });
        jMenu1.add(mItemSalir);

        jMenuBar1.add(jMenu1);

        jMenu2.setText(org.openide.util.NbBundle.getMessage(diagAgregarPostulante.class, "diagAgregarPostulante.jMenu2.text")); // NOI18N
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        mItemInformes.setText(org.openide.util.NbBundle.getMessage(diagAgregarPostulante.class, "diagAgregarPostulante.mItemInformes.text")); // NOI18N
        mItemInformes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItemInformesActionPerformed(evt);
            }
        });
        jMenu2.add(mItemInformes);

        mItemConsultar.setText(org.openide.util.NbBundle.getMessage(diagAgregarPostulante.class, "diagAgregarPostulante.mItemConsultar.text")); // NOI18N
        mItemConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItemConsultarActionPerformed(evt);
            }
        });
        jMenu2.add(mItemConsultar);

        mItemDetalleInscripcion.setText(org.openide.util.NbBundle.getMessage(diagAgregarPostulante.class, "diagAgregarPostulante.mItemDetalleInscripcion.text")); // NOI18N
        mItemDetalleInscripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItemDetalleInscripcionActionPerformed(evt);
            }
        });
        jMenu2.add(mItemDetalleInscripcion);

        mItemHistorial.setText(org.openide.util.NbBundle.getMessage(diagAgregarPostulante.class, "diagAgregarPostulante.mItemHistorial.text")); // NOI18N
        mItemHistorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItemHistorialActionPerformed(evt);
            }
        });
        jMenu2.add(mItemHistorial);

        jMenuBar1.add(jMenu2);

        jMenu3.setText(org.openide.util.NbBundle.getMessage(diagAgregarPostulante.class, "diagAgregarPostulante.jMenu3.text")); // NOI18N

        mItemHistorialDirector.setText(org.openide.util.NbBundle.getMessage(diagAgregarPostulante.class, "diagAgregarPostulante.mItemHistorialDirector.text")); // NOI18N
        mItemHistorialDirector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItemHistorialDirectorActionPerformed(evt);
            }
        });
        jMenu3.add(mItemHistorialDirector);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConsultarPostulanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarPostulanteActionPerformed
        verPostulante();

    }//GEN-LAST:event_btnConsultarPostulanteActionPerformed

    private void btNuevaBecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNuevaBecaActionPerformed
        agregarnuevabeca();
    }//GEN-LAST:event_btNuevaBecaActionPerformed

    private void btEditarBecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarBecaActionPerformed
        editarbeca();
    }//GEN-LAST:event_btEditarBecaActionPerformed

    private void tfBuscarBecaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfBuscarBecaKeyPressed
        buscarBeca();
    }//GEN-LAST:event_tfBuscarBecaKeyPressed

    private void bteliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bteliminarActionPerformed
        eliminarBeca();
        inicializarcomponentes();
    }//GEN-LAST:event_bteliminarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        editarPostulante();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        eliminarPostulante();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        buscarPostulantes();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void mItemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItemSalirActionPerformed
        salir();
    }//GEN-LAST:event_mItemSalirActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        mostrarInformes();
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void mItemConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItemConsultarActionPerformed
        consultar();
    }//GEN-LAST:event_mItemConsultarActionPerformed

    private void mItemDetalleInscripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItemDetalleInscripcionActionPerformed
        imprimirreporte();
    }//GEN-LAST:event_mItemDetalleInscripcionActionPerformed

    private void mItemHistorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItemHistorialActionPerformed
        mostrarDialogHistorial();
    }//GEN-LAST:event_mItemHistorialActionPerformed

    private void mItemHistorialDirectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItemHistorialDirectorActionPerformed
        mostrarDlgHistorialDirector();
    }//GEN-LAST:event_mItemHistorialDirectorActionPerformed

    private void mItemInformesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItemInformesActionPerformed
        mostrarInformes();
    }//GEN-LAST:event_mItemInformesActionPerformed

    private void jListBecasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListBecasMouseClicked
        cargarinscriptos();
    }//GEN-LAST:event_jListBecasMouseClicked

    private void jListBecasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListBecasValueChanged
        cargarinscriptos();
    }//GEN-LAST:event_jListBecasValueChanged

    private void btNuevoPostulante1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNuevoPostulante1ActionPerformed
        agregarpostulacion();
    }//GEN-LAST:event_btNuevoPostulante1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(diagAgregarPostulante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(diagAgregarPostulante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(diagAgregarPostulante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(diagAgregarPostulante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                diagAgregarPostulante dialog = new diagAgregarPostulante(new javax.swing.JFrame(), true, new Usuario());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setLocation(Comunes.centrarDialog(dialog));
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btEditarBeca;
    private javax.swing.JButton btNuevaBeca;
    private javax.swing.JButton btNuevoPostulante1;
    private javax.swing.JButton bteliminar;
    private javax.swing.JButton btnConsultarPostulante;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList jListBecas;
    private javax.swing.JList jListInscriptos;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem mItemConsultar;
    private javax.swing.JMenuItem mItemDetalleInscripcion;
    private javax.swing.JMenuItem mItemHistorial;
    private javax.swing.JMenuItem mItemHistorialDirector;
    private javax.swing.JMenuItem mItemInformes;
    private javax.swing.JMenuItem mItemSalir;
    private javax.swing.JTextField tfBuscarBeca;
    private javax.swing.JTextField tfBuscarPostulante;
    // End of variables declaration//GEN-END:variables

    private void agregarpostulacion() {
        if (!BecasFacade.getInstance().getTodosBecas().isEmpty()) {
            if (jListBecas.getSelectedIndex() != -1) {
                Becas becaSeleccionada = new Becas();
                becaSeleccionada = (Becas) jListBecas.getSelectedValue();
                if (becaSeleccionada.getVigente()) {
                    PostulacionBeca pb = new PostulacionBeca();
                    pb.setBeca((Becas) jListBecas.getSelectedValue());
                    diagBecaConvocatoriaAlta postulantealta = new diagBecaConvocatoriaAlta(null, true, "Alta", usuario, pb);
                    postulantealta.setLocation(Comunes.centrarDialog(postulantealta));
                    postulantealta.setVisible(true);
                    inicializarcomponentes();
                } else {
                    JOptionPane.showMessageDialog(null, "Beca fuera de Vigencia");
                }

            } else {
                JOptionPane.showMessageDialog(null, "No hay becas disponibles para agregar postulante!", "Error", JOptionPane.ERROR_MESSAGE);
            }
            //Comunes.cargarJList(jListInscriptos, PostulacionBecaFacade.getInstance().getTodosPostulaciones());
        } else {
            JOptionPane.showMessageDialog(null, "No hay becas seleccionadas", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void inicializarcomponentes() {
        Comunes.cargarJList(jListBecas, becasFacade.getTodosBecas());
        //Comunes.cargarJList(jListInscriptos, PostulacionBecaFacade.getInstance().getTodosPostulaciones());
        //Comunes.cargarJList(jListInscriptos, PostulacionBecaFacade.getInstance().getTodosPostulaciones());

    }

    private void agregarnuevabeca() {
        diagBecaAlta becaAlta = new diagBecaAlta(null, true, "Alta", usuario);
        becaAlta.setLocation(Comunes.centrarDialog(becaAlta));
        becaAlta.setVisible(true);
        filtrarbecas();
    }

    private void editarbeca() {
        if (jListBecas.getSelectedIndex() != -1) {
            modificarBecaSeleccionada();
            inicializarcomponentes();
        } else {
            JOptionPane.showMessageDialog(null, "Debe escoger una Beca", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void modificarBecaSeleccionada() {
        diagBecaAlta becaAlta = new diagBecaAlta(null, true, "Modificación", (Becas) jListBecas.getSelectedValue(), usuario);
        becaAlta.setLocation(Comunes.centrarDialog(becaAlta));
        becaAlta.setVisible(true);
        filtrarbecas();
    }

    private void filtrarbecas() {
        if (!tfBuscarBeca.getText().equals("")) {
            Comunes.cargarJList(jListBecas, becasFacade.getBecas(tfBuscarBeca.getText()));
        } else {
            Comunes.cargarJList(jListBecas, becasFacade.getTodosBecas());
        }
    }

    private void buscarBeca() {
        if (!tfBuscarBeca.getText().equals("")) {
            Comunes.cargarJList(jListBecas, BecasFacade.getInstance().getBecas(tfBuscarBeca.getText()));
        } else {
            Comunes.cargarJList(jListBecas, BecasFacade.getInstance().getTodosBecas());
        }
    }

    private void buscarPostulantes() {
        if (jListBecas.getSelectedValue() != null) {
            if (!tfBuscarPostulante.getText().equals("")) {
                Comunes.cargarJList(jListInscriptos, PostulacionBecaFacade.getInstance().getPostulanteDeBeca(tfBuscarPostulante.getText(), (Becas) jListBecas.getSelectedValue()));

            } else {
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una beca para poder buscar");
        }
    }

    private void imprimirreporte() {
        if (jListInscriptos.getSelectedIndex() != -1) {
            PostulacionBeca postulante = new PostulacionBeca();
            postulante = (PostulacionBeca) jListInscriptos.getSelectedValue();
            new ReportesBecas().reporteBecas(postulante.getId());
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un postulante");
        }

    }

    private void cargarinscriptos() {
        if (jListBecas.getSelectedValue() != null) {
            Comunes.cargarJList(jListInscriptos, PostulacionBecaFacade.getInstance().getPostulacionesBecas((Becas) jListBecas.getSelectedValue()));
        }
    }

    private void eliminarBeca() {
        if (jListBecas.getSelectedValue() != null) {
            int i = JOptionPane.showConfirmDialog(this, "¿ATENCION: DESEA ELIMINAR COMPLETAMENTE LA BECA \n"
                    + "DE LA BASE DE DATOS?", "Confirmar", JOptionPane.YES_NO_OPTION);
            if (i == 0) {
                Becas eliminar = new Becas();
                eliminar = (Becas) jListBecas.getSelectedValue();
                //eliminar.setVigente(false);
                becasFacade.eliminar(eliminar.getId());
                JOptionPane.showMessageDialog(null, "BECA ELIMINADA");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una Beca de la lista", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void editarPostulante() {
        if (jListInscriptos.getSelectedIndex() != -1) {
            modificarPostulanteSeleccionado();
            inicializarcomponentes();

        } else {
            JOptionPane.showMessageDialog(null, "Debe escoger un Postulante", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void modificarPostulanteSeleccionado() {

        diagBecaConvocatoriaAlta editarpostulante = new diagBecaConvocatoriaAlta(null, true, "Modificación", usuario, (PostulacionBeca) jListInscriptos.getSelectedValue());
        editarpostulante.setLocation(Comunes.centrarDialog(editarpostulante));
        editarpostulante.setVisible(true);

    }

    private void mostrarInformes() {
        diagInformes diagInformes = new diagInformes(null, true);
        diagInformes.setLocation(Comunes.centrarDialog(diagInformes));
        diagInformes.setVisible(true);
    }

    private void eliminarPostulante() {
        if (jListInscriptos.getSelectedIndex() != -1) {
            int i = JOptionPane.showConfirmDialog(null, "Confirmar la eliminacion", "Confirmar", JOptionPane.YES_NO_OPTION);
            if (i == 0) {
                eliminarPostulanteSeleccionado();
                inicializarcomponentes();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un Postulante");
        }
    }

    private void eliminarPostulanteSeleccionado() {
        PostulacionBeca eliminar = new PostulacionBeca();
        eliminar = (PostulacionBeca) jListInscriptos.getSelectedValue();
        System.out.println(eliminar);
        PostulacionBecaFacade.getInstance().eliminar(eliminar.getId());
        JOptionPane.showMessageDialog(null, "Postulante eliminado");
        inicializarcomponentes();
    }

    private void consultar() {
        if (jListInscriptos.getSelectedIndex() != -1) {
            diagBecaConvocatoriaAlta consultarPostulante = new diagBecaConvocatoriaAlta(null, true, "Consulta", usuario, (PostulacionBeca) jListInscriptos.getSelectedValue());
            consultarPostulante.setLocation(Comunes.centrarDialog(consultarPostulante));
            consultarPostulante.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Debe escoger un Postulante", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void mostrarDialogHistorial() {
        if (jListInscriptos.getSelectedIndex() != -1) {
            diagHistorialBeca diagHistorialBeca = new diagHistorialBeca(null, true, ((PostulacionBeca) jListInscriptos.getSelectedValue()).getPostulante(), "ConPostulante");
            diagHistorialBeca.setLocation(Comunes.centrarDialog(diagHistorialBeca));
            diagHistorialBeca.setVisible(true);
        } else {
            diagHistorialBeca diagHistorialBeca = new diagHistorialBeca(null, true, "SinPostulante");
            diagHistorialBeca.setLocation(Comunes.centrarDialog(diagHistorialBeca));
            diagHistorialBeca.setVisible(true);
        }

    }

    private void salir() {
        this.dispose();
    }

    private void mostrarDlgHistorialDirector() {
        diagHistorialDirectorBeca directorBeca = new diagHistorialDirectorBeca(null, true);
        Comunes.centrarDialog(directorBeca);
        directorBeca.setVisible(true);
    }

    private void verPostulante() {
        if (jListInscriptos.getSelectedIndex() != -1) {
            diagInvestigador diagInvestigador = new diagInvestigador(null, true, "Consulta", ((PostulacionBeca) jListInscriptos.getSelectedValue()).getPostulante(), usuario);
            diagInvestigador.setLocation(Comunes.centrarDialog(diagInvestigador));
            diagInvestigador.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(null, "Debe seleccionar un postulante");
        }

    }

}
