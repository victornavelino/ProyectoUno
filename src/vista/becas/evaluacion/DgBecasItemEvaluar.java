/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.becas.evaluacion;


import entidades.becas.evaluacion.BecasItemEvaluar;
import facade.becas.evaluacion.BecasItemEvaluarFacade;
import includes.JButtonEditor;
import includes.JButtonRender;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author AFerSor
 */
public class DgBecasItemEvaluar extends javax.swing.JDialog {

    /**
     * Creates new form dgBecasItemEvaluar
     */
    private List <BecasItemEvaluar> lstBecasItemEvaluarAux;
    
    public DgBecasItemEvaluar(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        this.cargarModeloTabla();
        
        
        this.setTitle("Beca -Items a evaluar");
        
        
        
        
        
        //jtBecasItemEvaluar.getColumnModel().getColumn(3).setCellEditor(new TextAreaEditor());
        
        this.jbNuevo.addActionListener(new EventoBoton(this, jtBecasItemEvaluar, 0));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jtfNombre = new javax.swing.JTextField();
        jbBuscar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtBecasItemEvaluar = new javax.swing.JTable();
        jbNuevo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jtfNombre.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N

        jbBuscar.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        jbBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar2.png"))); // NOI18N
        jbBuscar.setText("Buscar");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Vrinda", 0, 24)); // NOI18N
        jLabel3.setText("   Becas - item a evaluar");
        jLabel3.setToolTipText("");
        jLabel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(86, 112, 66), 1, true));
        jLabel3.setOpaque(true);

        jtBecasItemEvaluar.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        jtBecasItemEvaluar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jtBecasItemEvaluar);

        jbNuevo.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        jbNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/add.png"))); // NOI18N
        jbNuevo.setText("Nuevo");
        jbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevoActionPerformed(evt);
            }
        });

        jLabel1.setText("Se puede buscar por nombre del item");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 599, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jtfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jbNuevo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 599, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jbBuscar.getAccessibleContext().setAccessibleName("jbBuscar");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cargarModeloTabla(){
        
        ImageIcon iconoModificar = new ImageIcon(getClass().getResource("/imagenes/edit.png"));
        ImageIcon iconoEliminar = new ImageIcon(getClass().getResource("/imagenes/delete.png"));
        DefaultTableModel aModel = new DefaultTableModel(){
            public boolean isCellEditable(int row, int column) {
                if(column==0 || column==1){
                    return true;
                }
                return false;//This causes all cells to be not editable
            }
            
            
        };
        aModel.addColumn("");
        aModel.addColumn("");
        aModel.addColumn("id");
        aModel.addColumn("Descripcion");
         
         jtBecasItemEvaluar.setModel(aModel);
         jtBecasItemEvaluar.setRowHeight(30);
         jtBecasItemEvaluar.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
         
         jtBecasItemEvaluar.getColumnModel().getColumn(0).setPreferredWidth(40);         
        jtBecasItemEvaluar.getColumnModel().getColumn(0).setCellEditor(new JButtonEditor(jtBecasItemEvaluar,"Modificar", 
                iconoModificar, 
                        new EventoBoton(this,this.jtBecasItemEvaluar,1)));

        jtBecasItemEvaluar.getColumnModel().getColumn(0).setCellRenderer(new JButtonRender(true, "Modificar",iconoModificar));
        
        jtBecasItemEvaluar.getColumnModel().getColumn(1).setPreferredWidth(40);
        jtBecasItemEvaluar.getColumnModel().getColumn(1).setCellEditor(new JButtonEditor(jtBecasItemEvaluar,"Eliminar",iconoEliminar, new EventoBoton(this,this.jtBecasItemEvaluar,2)));
        jtBecasItemEvaluar.getColumnModel().getColumn(1).setCellRenderer(new JButtonRender(true, "Eliminar",iconoEliminar));
        
        //jtBecasItemEvaluar.getColumnModel().getColumn(2).setPreferredWidth(80);
        jtBecasItemEvaluar.getColumnModel().getColumn(2).setMaxWidth(0);
        jtBecasItemEvaluar.getColumnModel().getColumn(2).setMinWidth(0);
        jtBecasItemEvaluar.getColumnModel().getColumn(2).setPreferredWidth(0);
        
        jtBecasItemEvaluar.getColumnModel().getColumn(3).setPreferredWidth(400);
    }

    private void jbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbNuevoActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        this.cargarTabla('f');
    }//GEN-LAST:event_jbBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DgBecasItemEvaluar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DgBecasItemEvaluar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DgBecasItemEvaluar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DgBecasItemEvaluar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DgBecasItemEvaluar dialog = new DgBecasItemEvaluar(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbNuevo;
    private javax.swing.JTable jtBecasItemEvaluar;
    private javax.swing.JTextField jtfNombre;
    // End of variables declaration//GEN-END:variables

    
    private List <BecasItemEvaluar> cargarBecasItemEvaluarsLike() throws Exception{
        return BecasItemEvaluarFacade.getInstance().findBecasItemEvaluarLike(jtfNombre.getText());
 
    }//fin cargarUnidadesMedida
    
    public void cargarTabla(char tipo){
         try{
             
             if(tipo == 'f'){
             lstBecasItemEvaluarAux = this.cargarBecasItemEvaluarsLike();
             }
                         
             this.limpiarTabla();
             if(!lstBecasItemEvaluarAux.isEmpty()){
                 DefaultTableModel dtm = (DefaultTableModel)jtBecasItemEvaluar.getModel();


                 for(BecasItemEvaluar um : lstBecasItemEvaluarAux){
                     Object[] arrayUM = new Object[4];
                     arrayUM[2] = um.getId();
                     arrayUM[3] = um.getDescripcion();
                     dtm.addRow(arrayUM);
                 }//fin for
             }else{
                 JOptionPane.showMessageDialog(this,"No se encontraron datos", "Mensaje", JOptionPane.ERROR_MESSAGE);
             }
             
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,"Error al cargar la tabla", "Mensaje", JOptionPane.ERROR_MESSAGE);
        }
    }//fin cargarTabla
    
    public void actualizarCamposEnTabla(BecasItemEvaluar ud, int iRowSelect, int tipoOp){
        
        DefaultTableModel dtm = (DefaultTableModel)jtBecasItemEvaluar.getModel();
        
         switch(tipoOp){
            case 0: //guardar
                break;
            case 1: //modificar
                Object[] arrayUM = new Object[4];
        arrayUM[2] = ud.getId();
        arrayUM[3] = ud.getDescripcion();
                
                lstBecasItemEvaluarAux.remove(iRowSelect);
                dtm.removeRow(iRowSelect);

                lstBecasItemEvaluarAux.add(iRowSelect, ud);
                dtm.insertRow(iRowSelect, arrayUM);

                jtBecasItemEvaluar.setRowSelectionInterval(iRowSelect, iRowSelect);
        
                break;
            case 2: //eliminar
               
                lstBecasItemEvaluarAux.remove(iRowSelect);
                int cantDatos = dtm.getRowCount();

                if(cantDatos==iRowSelect+1){
                    
                    this.cargarModeloTabla();
                    this.cargarTabla('u');
                    
                }else{
                    dtm.removeRow(iRowSelect);
                }
                
                if(cantDatos>1){
                    jtBecasItemEvaluar.setRowSelectionInterval(0,0);
                }
                
                break;
        }//fin switch
        
        
    }//fin actualizarCamposEnTabla
    
    private void limpiarTabla(){
        int iCant = this.jtBecasItemEvaluar.getRowCount()-1;
        DefaultTableModel dtm = (DefaultTableModel)jtBecasItemEvaluar.getModel();
        while (iCant >= 0){
            dtm.removeRow(iCant);
            iCant--;
        }//fin while
    }//fin limpiarTabla
    
    public class EventoBoton implements ActionListener{

        private JTable jTable;
        private int tipoOperacion;
        private JDialog jdPadre;
        
        public EventoBoton(JDialog jdPadre, JTable jTable, int op){
            this.jTable = jTable;
            this.tipoOperacion = op;
            this.jdPadre = jdPadre;
        }
        @Override
        public void actionPerformed(ActionEvent e) {
            
            BecasItemEvaluar ud = null;
            DgBecasItemEvaluarEdit dgUd;
            int rowSelect = -1;
            switch(this.tipoOperacion){
                case 0: //Guardar
                    ud = new BecasItemEvaluar();
                    
                    break;
                case 1:
                case 2://Modificar y eliminar
                    rowSelect = jTable.getSelectedRow();

                    ud = new BecasItemEvaluar();
                    ud.setId((Long) jTable.getValueAt(rowSelect, 2));
                    ud.setDescripcion((String) jTable.getValueAt(rowSelect, 3));
                    break;
            }//fin switch
            
            dgUd = new DgBecasItemEvaluarEdit(this.jdPadre, Boolean.TRUE);
            dgUd.cargarCampos(ud, tipoOperacion);
            dgUd.setLocationRelativeTo(null);
            dgUd.setVisible(true);
            
            
            
            //podria buscar el elemento en la base de datos y actualizar con el que esta
            //cargar tod es mas costoso
            //si si modifica o elimina actualiza los datos
            
            if (dgUd.getRstOperacion() != null) {
                if (rowSelect >= 0 && dgUd.getRstOperacion()) {
                    ((DgBecasItemEvaluar) jdPadre).actualizarCamposEnTabla(dgUd.getBecasItemEvaluar(), rowSelect, tipoOperacion);
                }//fin if
            }//fin if
    
        }// fin actionPerformed
        
    }//fin EventoBoton
}//fin clase
