/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.becas.evaluacion;



import entidades.becas.PostulacionBeca;
import entidades.becas.evaluacion.BecasComiteEvaluador;
import entidades.becas.evaluacion.BecasEvaluacionWeb;
import entidades.becas.evaluacion.BecasEvaluacionWebBecasItemEvaluar;
import entidades.becas.evaluacion.BecasItemEvaluar;
import entidades.persona.Evaluador;
import facade.becas.evaluacion.BecasEvaluacionWebFacade;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author AFerSor
 */
public class DgBecasEvaluacionWebEdit extends javax.swing.JDialog {

    private String sLabelButton;
    private int iTipoOp;
    private BecasEvaluacionWeb becasEvaluacionWeb;
    private Boolean rstOperacion;
    
    public DgBecasEvaluacionWebEdit(java.awt.Dialog parent, boolean modal) {
        super(parent, modal);
        this.setLocationRelativeTo(parent);
        initComponents();
        
        int ancho = java.awt.Toolkit.getDefaultToolkit().getScreenSize().width;
        int alto = java.awt.Toolkit.getDefaultToolkit().getScreenSize().height;
         this.setBounds((ancho / 2) - (this.getWidth() / 2), (alto / 2) - (this.getHeight() / 2), 1000, 700);
         
        this.setTitle("Becas - Evaluacion");
        this.jtfId.setEditable(Boolean.FALSE);
        this.jtfId.setVisible(false);
        
         DefaultListModel dlm = new DefaultListModel();
        jLPostulacionBeca.setModel(dlm);
        
         DefaultListModel dlmE = new DefaultListModel();
        jLEvaluador.setModel(dlmE);
        
         DefaultListModel dlmIE = new DefaultListModel();
        jLItem.setModel(dlmIE);
        

    }

    public BecasEvaluacionWeb getBecasEvaluacionWeb() {
        return becasEvaluacionWeb;
    }

    public void setBecasEvaluacionWeb(BecasEvaluacionWeb becasEvaluacionWeb) {
        this.becasEvaluacionWeb = becasEvaluacionWeb;
    }

    

    public Boolean getRstOperacion() {
        return rstOperacion;
    }

    public void setRstOperacion(Boolean rstOperacion) {
        this.rstOperacion = rstOperacion;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jtfId = new javax.swing.JTextField();
        pnCarrera = new javax.swing.JPanel();
        jbBuscarPostulacionBeca = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jLPostulacionBeca = new javax.swing.JList();
        pnCarrera2 = new javax.swing.JPanel();
        jbBuscarEvaluador1 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jLEvaluador = new javax.swing.JList();
        jLabel5 = new javax.swing.JLabel();
        pnCarrera1 = new javax.swing.JPanel();
        jbBuscarItem = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jLItem = new javax.swing.JList();
        jbNuevaActividad = new javax.swing.JButton();
        jdpFecha = new org.jdesktop.swingx.JXDatePicker();
        jLabel2 = new javax.swing.JLabel();
        jbSalir = new javax.swing.JButton();
        jbAction = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jtaDescripcion = new javax.swing.JTextArea();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel3.setFont(new java.awt.Font("Vrinda", 0, 22)); // NOI18N
        jLabel3.setText("   Becas - Evaluaci√≥n");
        jLabel3.setToolTipText("");
        jLabel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(86, 112, 66), 1, true));
        jLabel3.setOpaque(true);

        jLabel1.setText("Para quita un elemento de las listas seleccionelo y presione el boton suprimir");

        jtfId.setEditable(false);
        jtfId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfIdActionPerformed(evt);
            }
        });

        pnCarrera.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Beca - Postulacion", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 18), new java.awt.Color(76, 76, 76))); // NOI18N

        jbBuscarPostulacionBeca.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        jbBuscarPostulacionBeca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar2.png"))); // NOI18N
        jbBuscarPostulacionBeca.setText("Buscar");
        jbBuscarPostulacionBeca.setToolTipText("");
        jbBuscarPostulacionBeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarPostulacionBecaActionPerformed(evt);
            }
        });

        jLPostulacionBeca.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        jLPostulacionBeca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLPostulacionBecaKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(jLPostulacionBeca);

        javax.swing.GroupLayout pnCarreraLayout = new javax.swing.GroupLayout(pnCarrera);
        pnCarrera.setLayout(pnCarreraLayout);
        pnCarreraLayout.setHorizontalGroup(
            pnCarreraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCarreraLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(pnCarreraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnCarreraLayout.createSequentialGroup()
                        .addComponent(jbBuscarPostulacionBeca, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 659, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnCarreraLayout.setVerticalGroup(
            pnCarreraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCarreraLayout.createSequentialGroup()
                .addComponent(jbBuscarPostulacionBeca)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        pnCarrera2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Comite evaluador", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 18), new java.awt.Color(76, 76, 76))); // NOI18N

        jbBuscarEvaluador1.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        jbBuscarEvaluador1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar2.png"))); // NOI18N
        jbBuscarEvaluador1.setText("Buscar");
        jbBuscarEvaluador1.setToolTipText("");
        jbBuscarEvaluador1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarEvaluador1ActionPerformed(evt);
            }
        });

        jLEvaluador.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        jLEvaluador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLEvaluadorMouseClicked(evt);
            }
        });
        jLEvaluador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLEvaluadorKeyPressed(evt);
            }
        });
        jScrollPane5.setViewportView(jLEvaluador);

        jLabel5.setText("Para marcar o desmarcar un evaluador como principal haga doble click sobre el");

        javax.swing.GroupLayout pnCarrera2Layout = new javax.swing.GroupLayout(pnCarrera2);
        pnCarrera2.setLayout(pnCarrera2Layout);
        pnCarrera2Layout.setHorizontalGroup(
            pnCarrera2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCarrera2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(pnCarrera2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnCarrera2Layout.createSequentialGroup()
                        .addComponent(jbBuscarEvaluador1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane5)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnCarrera2Layout.setVerticalGroup(
            pnCarrera2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCarrera2Layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jbBuscarEvaluador1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnCarrera1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Item a Evaluar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 18), new java.awt.Color(76, 76, 76))); // NOI18N

        jbBuscarItem.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        jbBuscarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar2.png"))); // NOI18N
        jbBuscarItem.setText("Buscar");
        jbBuscarItem.setToolTipText("");
        jbBuscarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarItemActionPerformed(evt);
            }
        });

        jLItem.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        jLItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLItemMouseClicked(evt);
            }
        });
        jLItem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLItemKeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(jLItem);

        jbNuevaActividad.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        jbNuevaActividad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/add.png"))); // NOI18N
        jbNuevaActividad.setText("Nueva");
        jbNuevaActividad.setToolTipText("");
        jbNuevaActividad.setMaximumSize(new java.awt.Dimension(83, 38));
        jbNuevaActividad.setMinimumSize(new java.awt.Dimension(83, 38));
        jbNuevaActividad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevaActividadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnCarrera1Layout = new javax.swing.GroupLayout(pnCarrera1);
        pnCarrera1.setLayout(pnCarrera1Layout);
        pnCarrera1Layout.setHorizontalGroup(
            pnCarrera1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCarrera1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(pnCarrera1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 659, Short.MAX_VALUE)
                    .addGroup(pnCarrera1Layout.createSequentialGroup()
                        .addComponent(jbBuscarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jbNuevaActividad, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnCarrera1Layout.setVerticalGroup(
            pnCarrera1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCarrera1Layout.createSequentialGroup()
                .addGroup(pnCarrera1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbBuscarItem)
                    .addComponent(jbNuevaActividad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jdpFecha.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        jdpFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jdpFechaActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        jLabel2.setText("Aclaraci√≥n:");

        jbSalir.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        jbSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/back.png"))); // NOI18N
        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jbAction.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        jbAction.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/save.png"))); // NOI18N
        jbAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbActionActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        jLabel4.setText("Finalizado:");

        jtaDescripcion.setColumns(20);
        jtaDescripcion.setRows(5);
        jScrollPane6.setViewportView(jtaDescripcion);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtfId)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnCarrera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jbAction, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(216, 216, 216)
                                    .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(44, 44, 44))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                            .addGap(8, 8, 8)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(4, 4, 4)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jdpFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE))))
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(75, Short.MAX_VALUE))
                    .addComponent(pnCarrera2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnCarrera1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfId, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addGap(22, 22, 22)
                .addComponent(pnCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnCarrera2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnCarrera1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jdpFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbAction)
                    .addComponent(jbSalir))
                .addContainerGap(206, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 721, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 834, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbActionActionPerformed
        this.action();
    }//GEN-LAST:event_jbActionActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jdpFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jdpFechaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jdpFechaActionPerformed

    private void jLItemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLItemKeyPressed
        this.quitarItemEvaluar(evt);
    }//GEN-LAST:event_jLItemKeyPressed

    private void jLItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLItemMouseClicked

    }//GEN-LAST:event_jLItemMouseClicked

    private void jbBuscarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarItemActionPerformed
        llamarDialogBecasItemEvaluarFind();
    }//GEN-LAST:event_jbBuscarItemActionPerformed

    private void jLEvaluadorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLEvaluadorKeyPressed
        // TODO add your handling code here:
        this.quitarEvaluador(evt);
    }//GEN-LAST:event_jLEvaluadorKeyPressed

    private void jLEvaluadorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLEvaluadorMouseClicked
        try {
            // TODO add your handling code here:
            this.llamarDialogEvaluadorSelect(evt);
        } catch (Exception ex) {

            JOptionPane.showMessageDialog(this,"Error: " + ex.getMessage(), "Mensaje", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_jLEvaluadorMouseClicked

    private void jbBuscarEvaluador1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarEvaluador1ActionPerformed
        // TODO add your handling code here:
        
        this.llamarDialogEvaluadorFind();
    }//GEN-LAST:event_jbBuscarEvaluador1ActionPerformed

    private void jLPostulacionBecaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLPostulacionBecaKeyPressed

        this.quitarPostulacionBeca(evt);
    }//GEN-LAST:event_jLPostulacionBecaKeyPressed

    private void jbBuscarPostulacionBecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarPostulacionBecaActionPerformed
        llamarDialogPostulacionBecaFind();
    }//GEN-LAST:event_jbBuscarPostulacionBecaActionPerformed

    private void jtfIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfIdActionPerformed

    private void jbNuevaActividadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevaActividadActionPerformed
        nuevaItemEvaluar();
    }//GEN-LAST:event_jbNuevaActividadActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DgBecasEvaluacionWebEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DgBecasEvaluacionWebEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DgBecasEvaluacionWebEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DgBecasEvaluacionWebEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DgBecasEvaluacionWebEdit dialog = new DgBecasEvaluacionWebEdit(new javax.swing.JDialog(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList jLEvaluador;
    private javax.swing.JList jLItem;
    private javax.swing.JList jLPostulacionBeca;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JButton jbAction;
    private javax.swing.JButton jbBuscarEvaluador1;
    private javax.swing.JButton jbBuscarItem;
    private javax.swing.JButton jbBuscarPostulacionBeca;
    private javax.swing.JButton jbNuevaActividad;
    private javax.swing.JButton jbSalir;
    private org.jdesktop.swingx.JXDatePicker jdpFecha;
    private javax.swing.JTextArea jtaDescripcion;
    private javax.swing.JTextField jtfId;
    private javax.swing.JPanel pnCarrera;
    private javax.swing.JPanel pnCarrera1;
    private javax.swing.JPanel pnCarrera2;
    // End of variables declaration//GEN-END:variables
    
    
    private void action(){
        
        switch(iTipoOp){
            case 0:
                 this.guardar();
                break;
            case 1:
                this.modificar();
                break;
            case 2:
                this.eliminar();
                break;
        }//fin switch
    }//fin action
    
    private void guardar(){
        String sMensaje = "";
        int iTipoMsg = JOptionPane.INFORMATION_MESSAGE;
        try{
            
            becasEvaluacionWeb = new BecasEvaluacionWeb();
 
            //PostulacionBeca
            int cant = jLPostulacionBeca.getModel().getSize();
            
            if(cant>0){
                
                becasEvaluacionWeb.setPostulacionBeca(new PostulacionBeca());
                
                becasEvaluacionWeb.getPostulacionBeca().setId(((PostulacionBeca)jLPostulacionBeca.getModel().getElementAt(0)).getId());
                    
            }//fin if
            
            //ComiteEvaluador
            
            int pos = jLEvaluador.getModel().getSize();
            BecasComiteEvaluador bce = null;
            becasEvaluacionWeb.setBecasComitesEvaluadores(new ArrayList<BecasComiteEvaluador>());
            for(int i=0; i < pos; i++){
                bce = (BecasComiteEvaluador) jLEvaluador.getModel().getElementAt(i);
                bce.setBecasEvaluacionWeb(becasEvaluacionWeb);
                becasEvaluacionWeb.getBecasComitesEvaluadores().add(bce);
            }//fin for
            
            //Item Evaluar
            int posItem = jLItem.getModel().getSize();
            BecasEvaluacionWebBecasItemEvaluar bi = null;
            becasEvaluacionWeb.setBecasEvaluacionWebBecasItemEvaluar(new ArrayList<BecasEvaluacionWebBecasItemEvaluar>());
            for(int i=0; i < posItem; i++){
                bi = (BecasEvaluacionWebBecasItemEvaluar) jLItem.getModel().getElementAt(i);
                bi.setBecasEvaluacionWeb(becasEvaluacionWeb);
                becasEvaluacionWeb.getBecasEvaluacionWebBecasItemEvaluar().add(bi);
            }//fin for
            
            
            
            becasEvaluacionWeb.setFechaFinalizacion(jdpFecha.getDate());
            becasEvaluacionWeb.setSugerencias(jtaDescripcion.getText());
            
            
            this.validar(becasEvaluacionWeb, 0);
            
            System.out.println("Paso: ");
            
            BecasEvaluacionWebFacade.getInstance().alta(becasEvaluacionWeb);
            sMensaje = "El dato fue guardado";
            this.setRstOperacion(Boolean.TRUE);
        }catch(Exception e){
            this.setRstOperacion(Boolean.FALSE);
            sMensaje = "Error: " + e.getMessage();
            iTipoMsg = JOptionPane.ERROR_MESSAGE;
        }finally{
            JOptionPane.showMessageDialog(this,sMensaje, "Mensaje", iTipoMsg);
        }
    }//fin guardar
    
    private void modificar(){
        String sMensaje = "";
        int iTipoMsg = JOptionPane.INFORMATION_MESSAGE;
        try{
            System.out.println("Entro al modificar");
            becasEvaluacionWeb = new BecasEvaluacionWeb();
            becasEvaluacionWeb.setId(Long.parseLong(jtfId.getText()));
            
            System.out.println("Entro al modificar 1");
            //PostulacionBeca
            int cant = jLPostulacionBeca.getModel().getSize();
            
            if(cant>0){
                becasEvaluacionWeb.setPostulacionBeca(new PostulacionBeca());
                becasEvaluacionWeb.getPostulacionBeca().setId(((PostulacionBeca)jLPostulacionBeca.getModel().getElementAt(0)).getId());

            }//fin if
            

            //ComiteEvaluador           
            int pos = jLEvaluador.getModel().getSize();
            BecasComiteEvaluador bce = null;
            becasEvaluacionWeb.setBecasComitesEvaluadores(new ArrayList<BecasComiteEvaluador>());
            for(int i=0; i < pos; i++){
                bce = (BecasComiteEvaluador) jLEvaluador.getModel().getElementAt(i);
                System.out.println("bce " + bce.getId());
                bce.setBecasEvaluacionWeb(becasEvaluacionWeb);
                becasEvaluacionWeb.getBecasComitesEvaluadores().add(bce);
            }//fin for
            
            //Item Evaluar
            int posItem = jLItem.getModel().getSize();
            BecasEvaluacionWebBecasItemEvaluar bi = null;
            becasEvaluacionWeb.setBecasEvaluacionWebBecasItemEvaluar(new ArrayList<BecasEvaluacionWebBecasItemEvaluar>());
            for(int i=0; i < posItem; i++){
                bi = (BecasEvaluacionWebBecasItemEvaluar) jLItem.getModel().getElementAt(i);
                bi.setBecasEvaluacionWeb(becasEvaluacionWeb);
                becasEvaluacionWeb.getBecasEvaluacionWebBecasItemEvaluar().add(bi);
            }//fin for
            
            becasEvaluacionWeb.setFechaFinalizacion(jdpFecha.getDate());
            becasEvaluacionWeb.setSugerencias(jtaDescripcion.getText());
            
            this.validar(becasEvaluacionWeb, 1);
            
            System.out.println("Antes de modificar");
            BecasEvaluacionWebFacade.getInstance().modificar(becasEvaluacionWeb);
            
            
            this.setBecasEvaluacionWeb(BecasEvaluacionWebFacade.getInstance().findById(becasEvaluacionWeb.getId()));
            
            System.out.println("cantidad de item: " + becasEvaluacionWeb.getBecasEvaluacionWebBecasItemEvaluar().size());
            sMensaje = "El dato fue modificado";
            this.setRstOperacion(Boolean.TRUE);
        }catch(Exception e){
            
            this.setRstOperacion(Boolean.FALSE);
            sMensaje = "Error: " + e.getMessage();
            iTipoMsg = JOptionPane.ERROR_MESSAGE;
        }finally{
            JOptionPane.showMessageDialog(this,sMensaje, "Mensaje", iTipoMsg);
        }
    }//fin modificar
    
    private void eliminar(){
        String sMensaje = "";
        int iTipoMsg = JOptionPane.INFORMATION_MESSAGE;
        try{
            becasEvaluacionWeb = new BecasEvaluacionWeb();
            becasEvaluacionWeb.setId(Long.parseLong(jtfId.getText()));
            
            //PostulacionBeca
            int cant = jLPostulacionBeca.getModel().getSize();
            
            if(cant>0){
                becasEvaluacionWeb.setPostulacionBeca(new PostulacionBeca());
                becasEvaluacionWeb.getPostulacionBeca().setId(((PostulacionBeca)jLPostulacionBeca.getModel().getElementAt(0)).getId());

            }//fin if
            
            //ComiteEvaluador
            
            int pos = jLEvaluador.getModel().getSize();
            BecasComiteEvaluador bce = null;
            becasEvaluacionWeb.setBecasComitesEvaluadores(new ArrayList<BecasComiteEvaluador>());
            for(int i=0; i < pos; i++){
                bce = (BecasComiteEvaluador) jLEvaluador.getModel().getElementAt(i);
                bce.setBecasEvaluacionWeb(becasEvaluacionWeb);
                becasEvaluacionWeb.getBecasComitesEvaluadores().add(bce);
            }//fin for
            
            //Item Evaluar
            int posItem = jLItem.getModel().getSize();
            BecasEvaluacionWebBecasItemEvaluar bi = null;
            becasEvaluacionWeb.setBecasEvaluacionWebBecasItemEvaluar(new ArrayList<BecasEvaluacionWebBecasItemEvaluar>());
            for(int i=0; i < posItem; i++){
                bi = (BecasEvaluacionWebBecasItemEvaluar) jLItem.getModel().getElementAt(i);
                bi.setBecasEvaluacionWeb(becasEvaluacionWeb);
                becasEvaluacionWeb.getBecasEvaluacionWebBecasItemEvaluar().add(bi);
            }//fin for
            
            becasEvaluacionWeb.setFechaFinalizacion(jdpFecha.getDate());
            becasEvaluacionWeb.setSugerencias(jtaDescripcion.getText());
            
            BecasEvaluacionWebFacade.getInstance().eliminar(becasEvaluacionWeb);
            sMensaje = "El dato fue eliminado";
            this.setRstOperacion(Boolean.TRUE);
        }catch(Exception e){
            this.setRstOperacion(Boolean.FALSE);
            sMensaje = "Error: " + e.getMessage();
            iTipoMsg = JOptionPane.ERROR_MESSAGE;
        }finally{
            JOptionPane.showMessageDialog(this,sMensaje, "Mensaje", iTipoMsg);
            if(this.getRstOperacion()){
                this.setVisible(Boolean.FALSE);
            }
        }
    }//fin eliminar
    
    public void cargarCampos(BecasEvaluacionWeb becasEvaluacionWeb, int op){
        
        PostulacionBeca pb = null;
        DefaultListModel dlmEvaluador = null;
        DefaultListModel dlmItem = null;
        switch(op){
            case 0:
                this.sLabelButton = "Guardar";
                this.jtfId.setText("");
                break;
            case 1:
                 this.sLabelButton = "Modificar";
                 System.out.println("Id: " + becasEvaluacionWeb.getId());
                 this.jtfId.setText(String.valueOf(becasEvaluacionWeb.getId()));
                 this.jdpFecha.setDate(becasEvaluacionWeb.getFechaFinalizacion());
                 this.jtaDescripcion.setText(becasEvaluacionWeb.getSugerencias());
                 
                 //becas
                final String text = becasEvaluacionWeb.getPostulacionBeca().getBeca().getDescripcion() + " (" + 
                                     becasEvaluacionWeb.getPostulacionBeca().getPostulante().getPersona().getApellido() + ", " + 
                                     becasEvaluacionWeb.getPostulacionBeca().getPostulante().getPersona().getNombre() + " " +
                                     (becasEvaluacionWeb.getPostulacionBeca().getPostulante().getPersona().getDocumentoIdentidad() == null? "" : 
                                becasEvaluacionWeb.getPostulacionBeca().getPostulante().getPersona().getDocumentoIdentidad().getTipoDocumento().getDescripcion() + 
                                        " " + becasEvaluacionWeb.getPostulacionBeca().getPostulante().getPersona().getDocumentoIdentidad().getNumero()) +")";
                
                pb = new PostulacionBeca() {

                    @Override
                    public String toString() {
                        return text; //To change body of generated methods, choose Tools | Templates.
                    }

                };
                pb.setId(becasEvaluacionWeb.getPostulacionBeca().getId());
                 
                 ((DefaultListModel)jLPostulacionBeca.getModel()).addElement(pb);
                 
                 //comite
                 dlmEvaluador = ((DefaultListModel)jLEvaluador.getModel());
                 for(BecasComiteEvaluador  bce : becasEvaluacionWeb.getBecasComitesEvaluadores()){
                     dlmEvaluador.addElement(bce);
                 }//fin for
                 
                 //item a evaluar
                 dlmItem = ((DefaultListModel)jLItem.getModel());
                 for(BecasEvaluacionWebBecasItemEvaluar  bi : becasEvaluacionWeb.getBecasEvaluacionWebBecasItemEvaluar()){
                     dlmItem.addElement(bi);
                 }//fin for

                 
                break;
            case 2:
                this.sLabelButton = "Eliminar";
                this.jtfId.setText(String.valueOf(becasEvaluacionWeb.getId()));
                this.jdpFecha.setDate(becasEvaluacionWeb.getFechaFinalizacion());
                this.jtaDescripcion.setText(becasEvaluacionWeb.getSugerencias());
                
                final String text1 = becasEvaluacionWeb.getPostulacionBeca().getBeca().getDescripcion() + " (" + 
                                     becasEvaluacionWeb.getPostulacionBeca().getPostulante().getPersona().getApellido() + ", " + 
                                     becasEvaluacionWeb.getPostulacionBeca().getPostulante().getPersona().getNombre() + " " +
                                     (becasEvaluacionWeb.getPostulacionBeca().getPostulante().getPersona().getDocumentoIdentidad() == null? "" : 
                                becasEvaluacionWeb.getPostulacionBeca().getPostulante().getPersona().getDocumentoIdentidad().getTipoDocumento().getDescripcion() + 
                                        " " + becasEvaluacionWeb.getPostulacionBeca().getPostulante().getPersona().getDocumentoIdentidad().getNumero()) +")";
                
                pb = new PostulacionBeca() {

                    @Override
                    public String toString() {
                        return text1; //To change body of generated methods, choose Tools | Templates.
                    }

                };
                pb.setId(becasEvaluacionWeb.getPostulacionBeca().getId());
                 
                 ((DefaultListModel)jLPostulacionBeca.getModel()).addElement(pb);
                 
                 //comite
                 dlmEvaluador = ((DefaultListModel)jLEvaluador.getModel());
                 for(BecasComiteEvaluador  bce : becasEvaluacionWeb.getBecasComitesEvaluadores()){
                     dlmEvaluador.addElement(bce);
                 }//fin for
                 
                 //item a evaluar
                 dlmItem = ((DefaultListModel)jLItem.getModel());
                 for(BecasEvaluacionWebBecasItemEvaluar  bi : becasEvaluacionWeb.getBecasEvaluacionWebBecasItemEvaluar()){
                     dlmItem.addElement(bi);
                 }//fin for
                 
                 
                break;
                
        }//fin switch
        
        iTipoOp = op;
        this.jbAction.setText(sLabelButton);
        
    }//fin 
    
    private void llamarDialogPostulacionBecaFind() {

        DgPostulacionBecaFind daf = new DgPostulacionBecaFind(this, true);
        daf.setLocationRelativeTo(null);
        daf.setVisible(Boolean.TRUE);
        
        try{
            this.cargarPostulacionBeca(daf.getLstPostulacionBecaSelect());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage(), "Mensaje", 
                                JOptionPane.ERROR_MESSAGE);
        }

        
    }//fin llamarDialogUnidadMedidaFind
    
    private void cargarPostulacionBeca(List<PostulacionBeca> lstPostulacionBeca) throws Exception{


        if (lstPostulacionBeca != null) {
            DefaultListModel dlm = (DefaultListModel) jLPostulacionBeca.getModel();

            dlm.removeAllElements();
            if (lstPostulacionBeca.size() > 1) {
                throw new Exception("Solo puede seleccionar una beca");
            }//fin if
            for (PostulacionBeca ac : lstPostulacionBeca) {
                if (!dlm.contains(ac)) {
                    dlm.addElement(ac);
                }

            }//fin for
        }//fin if
    }//fin cargarUnidadMedida
    
    private void quitarPostulacionBeca(KeyEvent ev){
         if(ev.getSource() == jLPostulacionBeca){
            if(ev.getKeyCode() == 127){
                ((DefaultListModel)jLPostulacionBeca.getModel()).remove(jLPostulacionBeca.getSelectedIndex());
            }//fin if
        }//fin if
    }//fin quitarUnidadMedida
    
    private void llamarDialogEvaluadorFind() {

        DgEvaluadorFind daf = new DgEvaluadorFind(this, true);
        daf.setLocationRelativeTo(null);
        daf.setVisible(Boolean.TRUE);
        
        try{
            this.cargarEvaluador(daf.getLstEvaluadorSelect());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage(), "Mensaje", 
                                JOptionPane.ERROR_MESSAGE);
        }

        
    }//fin llamarDialogUnidadMedidaFind
    
     private void llamarDialogBecasItemEvaluarFind() {

        DgBecasItemEvaluarFind daf = new DgBecasItemEvaluarFind(this, true);
        daf.setLocationRelativeTo(null);
        daf.setVisible(Boolean.TRUE);
        
        try{
            this.cargarItemEvaluar(daf.getLstBecasItemEvaluarSelect());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage(), "Mensaje", 
                                JOptionPane.ERROR_MESSAGE);
        }

        
    }//fin llamarDialogUnidadMedidaFind
     
     private void cargarItemEvaluar(List<BecasItemEvaluar> lstBecasItemEvaluar) throws Exception{


        if (lstBecasItemEvaluar!= null) {
            DefaultListModel dlm = (DefaultListModel) jLItem.getModel();

            //dlm.removeAllElements();
     
            for (BecasItemEvaluar ac : lstBecasItemEvaluar) {
                BecasEvaluacionWebBecasItemEvaluar bce = new BecasEvaluacionWebBecasItemEvaluar();
                bce.setBecasItemEvaluar(ac);

                
                int tamanio = dlm.getSize();
     
                
                
                Boolean existe = Boolean.FALSE;
                for(int i=0 ; i < tamanio; i++){
                    BecasEvaluacionWebBecasItemEvaluar bceAux = (BecasEvaluacionWebBecasItemEvaluar) dlm.get(i);
                    if(bceAux.getBecasItemEvaluar().getId() == bce.getBecasItemEvaluar().getId()){
                        existe = Boolean.TRUE;
                    }
                }//fin for
                
                if (!existe) {
                    dlm.addElement(bce);
                }

            }//fin for
        }//fin if
    }//fin cargarUnidadMedida
     
     private void quitarItemEvaluar(KeyEvent ev){
         if(ev.getSource() == jLItem){
            if(ev.getKeyCode() == 127){
                ((DefaultListModel)jLItem.getModel()).remove(jLItem.getSelectedIndex());
            }//fin if
        }//fin if
    }//fin quitarUnidadMedida
     
     private void nuevaItemEvaluar(){
         BecasItemEvaluar ac = new BecasItemEvaluar();
            DgBecasItemEvaluarEdit dgBecasItemEvaluarEdit;

            dgBecasItemEvaluarEdit = new DgBecasItemEvaluarEdit(this, Boolean.TRUE);
            dgBecasItemEvaluarEdit.cargarCampos(ac, 0);
            dgBecasItemEvaluarEdit.setLocationRelativeTo(null);
            dgBecasItemEvaluarEdit.setVisible(true);
    }//fin nuevaUnidadMedida
    
    
    
    private void cargarEvaluador(List<Evaluador> lstEvaluador) throws Exception{


        if (lstEvaluador!= null) {
            DefaultListModel dlm = (DefaultListModel) jLEvaluador.getModel();

            //dlm.removeAllElements();
     
            for (Evaluador ac : lstEvaluador) {
                BecasComiteEvaluador bce = new BecasComiteEvaluador();
                bce.setEvaluador(new Evaluador());
                bce.getEvaluador().setId(ac.getId());
                bce.getEvaluador().setInvestigador(ac.getInvestigador());
                
                int tamanio = dlm.getSize();
                if(tamanio == 0){
                    bce.setResponsable(Boolean.TRUE);
                }else{
                    bce.setResponsable(Boolean.FALSE);
                }
                
                
                Boolean existe = Boolean.FALSE;
                for(int i=0 ; i < tamanio; i++){
                    BecasComiteEvaluador bceAux = (BecasComiteEvaluador) dlm.get(i);
                    if(bceAux.getEvaluador().getId() == bce.getEvaluador().getId()){
                        existe = Boolean.TRUE;
                    }
                }//fin for
                
                if (!existe) {
                    dlm.addElement(bce);
                }

            }//fin for
        }//fin if
    }//fin cargarUnidadMedida
    
    private void quitarEvaluador(KeyEvent ev){
         if(ev.getSource() == jLEvaluador){
            if(ev.getKeyCode() == 127){
                ((DefaultListModel)jLEvaluador.getModel()).remove(jLEvaluador.getSelectedIndex());
            }//fin if
        }//fin if
    }//fin quitarUnidadMedida
    
    private void llamarDialogEvaluadorSelect(MouseEvent ev) throws Exception {

        if(ev.getSource() == jLEvaluador){
            if (ev.getClickCount() == 2) {
                int pos = jLEvaluador.getSelectedIndex();
                
                DefaultListModel dlm = (DefaultListModel)jLEvaluador.getModel();
                
                BecasComiteEvaluador bce = null;
                for(int i = 0; i < dlm.getSize(); i++){
                    
                    if (i != pos) {
                        bce = (BecasComiteEvaluador) dlm.get(i);

                        if (bce.getResponsable()) {
                            throw new Exception("Ya existe un investigar principal.");
                        }//fin if
                    }//fin if
                    
                }//fin for
                
                bce = (BecasComiteEvaluador) dlm.get(pos);
                
                
                if(bce.getResponsable()){
                    bce.setResponsable(Boolean.FALSE);
                }else{
                    bce.setResponsable(Boolean.TRUE);
                }
                
                dlm.remove(pos);
                System.out.println("Tamanio: " + dlm.getSize());
                if(dlm.getSize() < pos){
                    dlm.addElement(bce);
                }else{
                    dlm.insertElementAt(bce, pos);
                }
                

            }
            
        }//fin if

        
    }//fin llamarDialogUnidadMedidaFind
    
    

    
    private void validar(BecasEvaluacionWeb um, int op) throws Exception{
        
        //verificar que selecciono la postulacion
        
        if(um.getPostulacionBeca() == null){
            throw new Exception("Debe seleccionar una beca - postulaci√≥n");
        }//fin if
        
        //Comite evaluador
        if(um.getBecasComitesEvaluadores() == null){
            throw new Exception("Debe seleccionar al menos un evaluador");
        }
        
        if(um.getBecasComitesEvaluadores().size() == 0 ){
            throw new Exception("Debe seleccionar al menos un evaluador");
        }
        
        Boolean responsableSelect = Boolean.FALSE;
        for (BecasComiteEvaluador ce : um.getBecasComitesEvaluadores()){
            if(ce.getResponsable()){
                responsableSelect = Boolean.TRUE;
            }
        }//fin for
        
        if(!responsableSelect){
            throw new Exception("Debe seleccionar un evaluador como responsable");
        }//fin if
        
        //item
        
        if(um.getBecasEvaluacionWebBecasItemEvaluar() == null){
            throw new Exception("Debe seleccionar al menos un item a evaluar");
        }//fin if
        
        if(um.getBecasEvaluacionWebBecasItemEvaluar().size()== 0){
            throw new Exception("Debe seleccionar al menos un item a evaluar");
        }
        
        if(BecasEvaluacionWebFacade.getInstance().bFindByPostulacionBeca(um.getPostulacionBeca().getId(), um.getId(), op)){
            throw new Exception("Ya existe un registro para la postulacion seleccionada.");
        }//fin if*/
    }
    
}//FIN CLASE
