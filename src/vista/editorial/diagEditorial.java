/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.editorial;

//import controladores.DestinoEditorialJpaController;
import controladores.exceptions.NonexistentEntityException;
import entidades.Idioma;
import entidades.UnidadAcademica;
import entidades.operaciones.Operacion;
import entidades.persona.investigador.Investigador;
import entidades.proyecto.Evaluacion;
import entidades.proyecto.Proyecto;
import entidades.proyecto.editorial.DestinoEditorial;
import entidades.proyecto.editorial.DonacionEditorial;
import entidades.proyecto.editorial.EditorialCientifica;
import entidades.proyecto.editorial.EvaluacionEditorial;
import entidades.proyecto.editorial.ExpedienteEditorial;
import entidades.proyecto.editorial.FormatoEditorial;
import entidades.proyecto.editorial.Stock;
import entidades.proyecto.editorial.TematicaEditorial;
import entidades.proyecto.editorial.TipoPublicacion;
import entidades.usuario.Usuario;
import facade.DestinoEditorialFacade;
import facade.DonacionEditorialFacade;
import facade.EditorialCientificaFacade;
import facade.EvaluacionEditorialFacade;
import facade.FormatoEditorialFacade;
import facade.IdiomaFacade;
import facade.InvestigadorFacade;
import facade.OperacionFacade;
import facade.TematicaEditorialFacade;
import facade.UnidadAcademicaFacade;
import facade.editorial.StockFacade;
import facade.editorial.TipoPublicacionFacade;
import includes.Comunes;
import java.awt.Dimension;
import java.awt.Insets;
import java.awt.Toolkit;
import java.text.SimpleDateFormat;
import java.util.AbstractList;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import vista.diagProyectoBusquedaSimple;
import vista.editorial.evaluaciones.diagEvaluacionEditorial;
import vista.editorial.stock.diagStock;
import vista.proyectos.resultado.diagProyectoResultado;
import vistas.evaluaciones.diagEvaluacion;
import vistas.investigadores.diagInvestigador;
import vista.diagIdiomaAlta;
import vista.diagUnidadAcademicaAlta;

/**
 *
 * @author francisco
 */
public class diagEditorial extends javax.swing.JDialog {

    private List<EvaluacionEditorial> evaluaciones = new ArrayList<EvaluacionEditorial>();
    private List<Investigador> autoresDentro = new ArrayList<Investigador>();  
    private String tipoOperacion;
    private Usuario usuario;
    private EditorialCientifica editorialCientifica;
    private Proyecto proyecto;
    private Proyecto proyectoSele;
    private ExpedienteEditorial expedienteEditorial;
    private EvaluacionEditorial evaluacionEditorial;
    private List<Stock> listaUnidades = new ArrayList<Stock>();
    private List<String> palabrasClaves = new ArrayList<String>();
    private List<String> keyWords = new ArrayList<String>();
    SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy");
    
    List<DonacionEditorial> listaDonaciones = new ArrayList<DonacionEditorial>();

    DefaultTableModel modeloTablaDonaciones = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int fila, int columna) {
            return false;
        }
    };
    /**
     * Creates new form diagEditorial
     */
    public diagEditorial(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public diagEditorial(java.awt.Frame parent, boolean modal, String tipoOperacion, Usuario usuario) {
        super(parent, modal);
        this.tipoOperacion = tipoOperacion;
        this.usuario = usuario;
        //modeloTabla = new DefaultTableModel();
        initComponents();
        inicializarComponentes();
    }

    public diagEditorial(java.awt.Frame parent, boolean modal,
            String tipoOperacion, EditorialCientifica editorialCientifica, Usuario usuario) {
        super(parent, modal);
        this.tipoOperacion = tipoOperacion;
        this.editorialCientifica = editorialCientifica;
        // modeloTabla = new DefaultTableModel();
        this.usuario = usuario;
        listaUnidades = StockFacade.getInstance().getPorPublicacionId(editorialCientifica.getId());
        evaluaciones = editorialCientifica.getEvaluacionesEditorial();
        initComponents();
        inicializarComponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtfTitulo = new javax.swing.JTextArea();
        jtfIsbn = new javax.swing.JTextField();
        jcbTipoPublicacion = new javax.swing.JComboBox();
        jtfProyectoRelacionado = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtaMenciones = new javax.swing.JTextArea();
        jxDatePub = new org.jdesktop.swingx.JXDatePicker();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnPublicaciones = new javax.swing.JButton();
        jPanelAsesores = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        lstIntegrantesDentroLibro = new javax.swing.JList();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        lsIntegrantesFueraLibro = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        tfBuscarIntregantesLibro = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnAgregarAutor = new javax.swing.JButton();
        btnEliminarTipoPublicacion = new javax.swing.JButton();
        cmbTipoCodigo = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        dpFechaRecibido = new org.jdesktop.swingx.JXDatePicker();
        jLabel18 = new javax.swing.JLabel();
        dpFechaAceptado = new org.jdesktop.swingx.JXDatePicker();
        jLabel19 = new javax.swing.JLabel();
        cmbIdioma = new javax.swing.JComboBox<>();
        btnNuevoIdioma = new javax.swing.JButton();
        btnEliminarIdioma = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        cmbReferato = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        cmbAcademica = new javax.swing.JComboBox<>();
        btnNuevaAcademica = new javax.swing.JButton();
        btnEliminarAcademica = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        tfCantidadPaginas = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        tfStock = new javax.swing.JTextField();
        btnNuevaTematica = new javax.swing.JButton();
        btnEliminarTematica = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        cmbTematica = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        cmbFormato = new javax.swing.JComboBox<>();
        btnNuevoFormato = new javax.swing.JButton();
        btnEliminarFormato = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jListEvaluaciones = new javax.swing.JList();
        jLabel10 = new javax.swing.JLabel();
        btAgregarEvaluacion = new javax.swing.JButton();
        btnEditarEvaluacion = new javax.swing.JButton();
        btnEliminarEvaluacion = new javax.swing.JButton();
        btVerDetallesEvaluacionSeleccionada = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        taResumen = new javax.swing.JTextArea();
        jScrollPane8 = new javax.swing.JScrollPane();
        taSummary = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        dpFechaDonacion = new org.jdesktop.swingx.JXDatePicker();
        jLabel15 = new javax.swing.JLabel();
        tfCantidadDonacion = new javax.swing.JTextField();
        btnAgregarDonacion = new javax.swing.JButton();
        cmbDestinoEditorial = new javax.swing.JComboBox();
        btnAgregarDestinoEditorial = new javax.swing.JButton();
        btnEliminarDestinoEditorial = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDonaciones = new javax.swing.JTable();
        btnEliminarDonacion = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setSize(new java.awt.Dimension(0, 800));

        jButton2.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jButton2.text")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jPanel1.border.title"))); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jLabel1.text")); // NOI18N

        jLabel4.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jLabel4.text")); // NOI18N

        jLabel5.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jLabel5.text")); // NOI18N

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jLabel7.text")); // NOI18N
        jLabel7.setToolTipText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jLabel7.toolTipText")); // NOI18N
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jLabel7.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        jLabel8.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jLabel8.text")); // NOI18N

        jLabel9.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jLabel9.text")); // NOI18N

        jtfTitulo.setColumns(20);
        jtfTitulo.setLineWrap(true);
        jtfTitulo.setRows(5);
        jScrollPane2.setViewportView(jtfTitulo);

        jtfIsbn.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jtfIsbn.text")); // NOI18N

        jcbTipoPublicacion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbTipoPublicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTipoPublicacionActionPerformed(evt);
            }
        });

        jtfProyectoRelacionado.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jtfProyectoRelacionado.text")); // NOI18N
        jtfProyectoRelacionado.setEnabled(false);

        jtaMenciones.setColumns(20);
        jtaMenciones.setRows(5);
        jScrollPane3.setViewportView(jtaMenciones);

        jxDatePub.setFormats("dd/MM/yyyy");

        jButton4.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jButton4.text")); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton1.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnPublicaciones.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.btnPublicaciones.text")); // NOI18N
        btnPublicaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPublicacionesActionPerformed(evt);
            }
        });

        jPanelAsesores.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jPanelAsesores.border.title"))); // NOI18N

        jScrollPane10.setViewportView(lstIntegrantesDentroLibro);

        jButton8.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jButton8.text")); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jButton9.text")); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jScrollPane11.setViewportView(lsIntegrantesFueraLibro);

        jLabel3.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jLabel3.text")); // NOI18N

        tfBuscarIntregantesLibro.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.tfBuscarIntregantesLibro.text")); // NOI18N
        tfBuscarIntregantesLibro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfBuscarIntregantesLibroKeyPressed(evt);
            }
        });

        jLabel2.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jLabel2.text")); // NOI18N

        jLabel6.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jLabel6.text")); // NOI18N

        btnAgregarAutor.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.btnAgregarAutor.text")); // NOI18N
        btnAgregarAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarAutorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelAsesoresLayout = new javax.swing.GroupLayout(jPanelAsesores);
        jPanelAsesores.setLayout(jPanelAsesoresLayout);
        jPanelAsesoresLayout.setHorizontalGroup(
            jPanelAsesoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAsesoresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelAsesoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelAsesoresLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(241, 241, 241))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAsesoresLayout.createSequentialGroup()
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanelAsesoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelAsesoresLayout.createSequentialGroup()
                        .addGroup(jPanelAsesoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                            .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                            .addComponent(btnAgregarAutor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanelAsesoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addGroup(jPanelAsesoresLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                        .addComponent(tfBuscarIntregantesLibro, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanelAsesoresLayout.setVerticalGroup(
            jPanelAsesoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAsesoresLayout.createSequentialGroup()
                .addGroup(jPanelAsesoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelAsesoresLayout.createSequentialGroup()
                        .addGroup(jPanelAsesoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tfBuscarIntregantesLibro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelAsesoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelAsesoresLayout.createSequentialGroup()
                                .addComponent(jButton8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton9)
                                .addGap(30, 30, 30)
                                .addComponent(btnAgregarAutor))
                            .addComponent(jScrollPane11)))
                    .addGroup(jPanelAsesoresLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane10)))
                .addContainerGap())
        );

        btnEliminarTipoPublicacion.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.btnEliminarTipoPublicacion.text")); // NOI18N
        btnEliminarTipoPublicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarTipoPublicacionActionPerformed(evt);
            }
        });

        cmbTipoCodigo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel16.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jLabel16.text")); // NOI18N

        jLabel17.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jLabel17.text")); // NOI18N

        dpFechaRecibido.setFormats("dd/MM/yyyy");

        jLabel18.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jLabel18.text")); // NOI18N

        dpFechaAceptado.setFormats("dd/MM/yyyy");

        jLabel19.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jLabel19.text")); // NOI18N

        cmbIdioma.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbIdioma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbIdiomaActionPerformed(evt);
            }
        });

        btnNuevoIdioma.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.btnNuevoIdioma.text")); // NOI18N
        btnNuevoIdioma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoIdiomaActionPerformed(evt);
            }
        });

        btnEliminarIdioma.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.btnEliminarIdioma.text")); // NOI18N
        btnEliminarIdioma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarIdiomaActionPerformed(evt);
            }
        });

        jLabel20.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jLabel20.text")); // NOI18N

        jLabel21.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jLabel21.text")); // NOI18N

        cmbAcademica.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbAcademica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAcademicaActionPerformed(evt);
            }
        });

        btnNuevaAcademica.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.btnNuevaAcademica.text")); // NOI18N
        btnNuevaAcademica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaAcademicaActionPerformed(evt);
            }
        });

        btnEliminarAcademica.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.btnEliminarAcademica.text")); // NOI18N
        btnEliminarAcademica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarAcademicaActionPerformed(evt);
            }
        });

        jLabel22.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jLabel22.text")); // NOI18N

        tfCantidadPaginas.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.tfCantidadPaginas.text")); // NOI18N

        jLabel11.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jLabel11.text")); // NOI18N

        tfStock.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.tfStock.text")); // NOI18N

        btnNuevaTematica.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.btnNuevaTematica.text")); // NOI18N
        btnNuevaTematica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaTematicaActionPerformed(evt);
            }
        });

        btnEliminarTematica.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.btnEliminarTematica.text")); // NOI18N
        btnEliminarTematica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarTematicaActionPerformed(evt);
            }
        });

        jLabel23.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jLabel23.text")); // NOI18N

        cmbTematica.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbTematica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTematicaActionPerformed(evt);
            }
        });

        jLabel24.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jLabel24.text")); // NOI18N

        cmbFormato.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbFormato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFormatoActionPerformed(evt);
            }
        });

        btnNuevoFormato.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.btnNuevoFormato.text")); // NOI18N
        btnNuevoFormato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoFormatoActionPerformed(evt);
            }
        });

        btnEliminarFormato.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.btnEliminarFormato.text")); // NOI18N
        btnEliminarFormato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarFormatoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17))
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(cmbTematica, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(btnNuevaTematica, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(137, 137, 137)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel20)
                                            .addComponent(jLabel21))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cmbReferato, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(cmbFormato, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(cmbAcademica, javax.swing.GroupLayout.Alignment.LEADING, 0, 254, Short.MAX_VALUE)
                                                    .addComponent(jLabel22))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(btnNuevaAcademica, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                                                    .addComponent(tfCantidadPaginas, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(btnNuevoFormato, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(btnEliminarAcademica, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                                                    .addComponent(btnEliminarFormato, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfStock, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(dpFechaRecibido, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(72, 72, 72)
                                        .addComponent(jLabel18))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(cmbTipoCodigo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGap(163, 163, 163))
                                        .addComponent(jScrollPane3)
                                        .addComponent(jtfIsbn, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanelAsesores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(dpFechaAceptado, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jxDatePub, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnEliminarTematica, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(42, 42, 42)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jcbTipoPublicacion, 0, 273, Short.MAX_VALUE)
                                            .addComponent(jtfProyectoRelacionado, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                                            .addComponent(cmbIdioma, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnNuevoIdioma, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnPublicaciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnEliminarTipoPublicacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnEliminarIdioma, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel24)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cmbTipoCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jtfIsbn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)))
                    .addComponent(jPanelAsesores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel18)
                                    .addComponent(dpFechaAceptado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(dpFechaRecibido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jxDatePub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton4)
                        .addComponent(jtfProyectoRelacionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnPublicaciones)
                        .addComponent(jLabel9)
                        .addComponent(jLabel20))
                    .addComponent(cmbReferato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jcbTipoPublicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(btnEliminarTipoPublicacion)
                    .addComponent(jLabel21)
                    .addComponent(cmbAcademica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNuevaAcademica)
                    .addComponent(btnEliminarAcademica))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel23))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbIdioma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNuevoIdioma)
                            .addComponent(btnEliminarIdioma)
                            .addComponent(jLabel24)
                            .addComponent(cmbFormato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNuevoFormato)
                            .addComponent(btnEliminarFormato))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfCantidadPaginas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(tfStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNuevaTematica)
                            .addComponent(btnEliminarTematica)
                            .addComponent(jLabel22)
                            .addComponent(cmbTematica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        jScrollPane4.setViewportView(jListEvaluaciones);

        jLabel10.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jLabel10.text")); // NOI18N

        btAgregarEvaluacion.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.btAgregarEvaluacion.text")); // NOI18N
        btAgregarEvaluacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAgregarEvaluacionActionPerformed(evt);
            }
        });

        btnEditarEvaluacion.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.btnEditarEvaluacion.text")); // NOI18N
        btnEditarEvaluacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarEvaluacionActionPerformed(evt);
            }
        });

        btnEliminarEvaluacion.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.btnEliminarEvaluacion.text")); // NOI18N
        btnEliminarEvaluacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarEvaluacionActionPerformed(evt);
            }
        });

        btVerDetallesEvaluacionSeleccionada.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.btVerDetallesEvaluacionSeleccionada.text")); // NOI18N
        btVerDetallesEvaluacionSeleccionada.setEnabled(false);
        btVerDetallesEvaluacionSeleccionada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVerDetallesEvaluacionSeleccionadaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnEditarEvaluacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btAgregarEvaluacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnEliminarEvaluacion, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel10)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(btVerDetallesEvaluacionSeleccionada)))
                .addContainerGap(822, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btAgregarEvaluacion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditarEvaluacion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarEvaluacion)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btVerDetallesEvaluacionSeleccionada)
                .addContainerGap(141, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        taResumen.setColumns(20);
        taResumen.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        taResumen.setLineWrap(true);
        taResumen.setRows(20);
        jScrollPane6.setViewportView(taResumen);

        taSummary.setColumns(20);
        taSummary.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        taSummary.setLineWrap(true);
        taSummary.setRows(20);
        jScrollPane8.setViewportView(taSummary);

        jLabel12.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jLabel12.text")); // NOI18N

        jLabel25.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jLabel25.text")); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel25)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 767, Short.MAX_VALUE)
                    .addComponent(jScrollPane8))
                .addContainerGap(423, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addContainerGap(121, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jPanel4.TabConstraints.tabTitle"), jPanel4); // NOI18N

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jPanel6.border.title"))); // NOI18N

        jLabel13.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jLabel13.text")); // NOI18N

        jLabel14.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jLabel14.text")); // NOI18N

        dpFechaDonacion.setFormats("dd/MM/yyyy");

        jLabel15.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jLabel15.text")); // NOI18N

        tfCantidadDonacion.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.tfCantidadDonacion.text")); // NOI18N

        btnAgregarDonacion.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.btnAgregarDonacion.text")); // NOI18N
        btnAgregarDonacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarDonacionActionPerformed(evt);
            }
        });

        cmbDestinoEditorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDestinoEditorialActionPerformed(evt);
            }
        });

        btnAgregarDestinoEditorial.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.btnAgregarDestinoEditorial.text")); // NOI18N
        btnAgregarDestinoEditorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarDestinoEditorialActionPerformed(evt);
            }
        });

        btnEliminarDestinoEditorial.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.btnEliminarDestinoEditorial.text")); // NOI18N
        btnEliminarDestinoEditorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarDestinoEditorialActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15))
                .addGap(27, 27, 27)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(dpFechaDonacion, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAgregarDonacion, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfCantidadDonacion, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(cmbDestinoEditorial, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAgregarDestinoEditorial, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEliminarDestinoEditorial, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(cmbDestinoEditorial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregarDestinoEditorial)
                    .addComponent(btnEliminarDestinoEditorial))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(dpFechaDonacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregarDonacion))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(tfCantidadDonacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jPanel7.border.title"))); // NOI18N

        tblDonaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblDonaciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDonacionesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDonaciones);

        btnEliminarDonacion.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.btnEliminarDonacion.text")); // NOI18N
        btnEliminarDonacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarDonacionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1252, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(437, 437, 437)
                .addComponent(btnEliminarDonacion, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addComponent(btnEliminarDonacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jPanel5.TabConstraints.tabTitle"), jPanel5); // NOI18N

        jButton3.setText(org.openide.util.NbBundle.getMessage(diagEditorial.class, "diagEditorial.jButton3.text")); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(466, 466, 466)
                .addComponent(jButton2)
                .addGap(63, 63, 63)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        guardar();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnEliminarDonacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarDonacionActionPerformed
        eliminarFila(tblDonaciones.getSelectedRow());
    }//GEN-LAST:event_btnEliminarDonacionActionPerformed

    private void tblDonacionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDonacionesMouseClicked
        habilitarBotonEliminarFilaDonacion();
    }//GEN-LAST:event_tblDonacionesMouseClicked

    private void btnEliminarDestinoEditorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarDestinoEditorialActionPerformed
        eliminarDestinoEditorial();
    }//GEN-LAST:event_btnEliminarDestinoEditorialActionPerformed

    private void btnAgregarDestinoEditorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarDestinoEditorialActionPerformed
        agregarDestinoEditorial();
    }//GEN-LAST:event_btnAgregarDestinoEditorialActionPerformed

    private void cmbDestinoEditorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDestinoEditorialActionPerformed
        habilitarBotonEliminarDestino();
    }//GEN-LAST:event_cmbDestinoEditorialActionPerformed

    private void btnAgregarDonacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarDonacionActionPerformed
        agregarDonacionEditorial();
    }//GEN-LAST:event_btnAgregarDonacionActionPerformed

    private void btVerDetallesEvaluacionSeleccionadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVerDetallesEvaluacionSeleccionadaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btVerDetallesEvaluacionSeleccionadaActionPerformed

    private void btnEliminarEvaluacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarEvaluacionActionPerformed
        eliminarEvaluacion();
    }//GEN-LAST:event_btnEliminarEvaluacionActionPerformed

    private void btnEditarEvaluacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarEvaluacionActionPerformed
        modificarEvaluacion();
    }//GEN-LAST:event_btnEditarEvaluacionActionPerformed

    private void btAgregarEvaluacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAgregarEvaluacionActionPerformed
        agregarNuevaEvaluacion();        // TODO add your handling code here:
    }//GEN-LAST:event_btAgregarEvaluacionActionPerformed

    private void btnEliminarAcademicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarAcademicaActionPerformed
        eliminarUnidadAcademica();
    }//GEN-LAST:event_btnEliminarAcademicaActionPerformed

    private void btnNuevaAcademicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaAcademicaActionPerformed
        nuevaUnidadAcademica();
    }//GEN-LAST:event_btnNuevaAcademicaActionPerformed

    private void cmbAcademicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAcademicaActionPerformed
        habilitarEliminarUnidadAcademica();
    }//GEN-LAST:event_cmbAcademicaActionPerformed

    private void btnEliminarIdiomaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarIdiomaActionPerformed
        eliminarIdioma();
    }//GEN-LAST:event_btnEliminarIdiomaActionPerformed

    private void btnNuevoIdiomaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoIdiomaActionPerformed
        agregarIdioma();
    }//GEN-LAST:event_btnNuevoIdiomaActionPerformed

    private void cmbIdiomaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbIdiomaActionPerformed
        habilitarEliminarIdioma();
    }//GEN-LAST:event_cmbIdiomaActionPerformed

    private void btnEliminarTipoPublicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarTipoPublicacionActionPerformed
        eliminarTipoPulicacion();
    }//GEN-LAST:event_btnEliminarTipoPublicacionActionPerformed

    private void btnAgregarAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarAutorActionPerformed
        agregarInvestigador();
    }//GEN-LAST:event_btnAgregarAutorActionPerformed

    private void tfBuscarIntregantesLibroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfBuscarIntregantesLibroKeyPressed
        buscarIntegrantesLibro();
    }//GEN-LAST:event_tfBuscarIntregantesLibroKeyPressed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        quitarIntegrantesLibro();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        agregarIntegrantesLibro();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void btnPublicacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPublicacionesActionPerformed
        mostrarPublicaciones();
    }//GEN-LAST:event_btnPublicacionesActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        nuevoTipoDePublicacion();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        agregarProyecto();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jcbTipoPublicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTipoPublicacionActionPerformed
        habilitarEliminarTipoPublicacion();
    }//GEN-LAST:event_jcbTipoPublicacionActionPerformed

    private void btnNuevaTematicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaTematicaActionPerformed
        agregarTematica();
    }//GEN-LAST:event_btnNuevaTematicaActionPerformed

    private void btnEliminarFormatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarFormatoActionPerformed
        eliminarFormato();
    }//GEN-LAST:event_btnEliminarFormatoActionPerformed

    private void cmbTematicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTematicaActionPerformed
        habilitarEliminarTematica();
    }//GEN-LAST:event_cmbTematicaActionPerformed

    private void cmbFormatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFormatoActionPerformed
        habilitarEliminarFormato();
    }//GEN-LAST:event_cmbFormatoActionPerformed

    private void btnNuevoFormatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoFormatoActionPerformed
        agregarFormato();
    }//GEN-LAST:event_btnNuevoFormatoActionPerformed

    private void btnEliminarTematicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarTematicaActionPerformed
        eliminarTematica();
    }//GEN-LAST:event_btnEliminarTematicaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(diagEditorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(diagEditorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(diagEditorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(diagEditorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                diagEditorial dialog = new diagEditorial(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAgregarEvaluacion;
    private javax.swing.JButton btVerDetallesEvaluacionSeleccionada;
    private javax.swing.JButton btnAgregarAutor;
    private javax.swing.JButton btnAgregarDestinoEditorial;
    private javax.swing.JButton btnAgregarDonacion;
    private javax.swing.JButton btnEditarEvaluacion;
    private javax.swing.JButton btnEliminarAcademica;
    private javax.swing.JButton btnEliminarDestinoEditorial;
    private javax.swing.JButton btnEliminarDonacion;
    private javax.swing.JButton btnEliminarEvaluacion;
    private javax.swing.JButton btnEliminarFormato;
    private javax.swing.JButton btnEliminarIdioma;
    private javax.swing.JButton btnEliminarTematica;
    private javax.swing.JButton btnEliminarTipoPublicacion;
    private javax.swing.JButton btnNuevaAcademica;
    private javax.swing.JButton btnNuevaTematica;
    private javax.swing.JButton btnNuevoFormato;
    private javax.swing.JButton btnNuevoIdioma;
    private javax.swing.JButton btnPublicaciones;
    private javax.swing.JComboBox<String> cmbAcademica;
    private javax.swing.JComboBox cmbDestinoEditorial;
    private javax.swing.JComboBox<String> cmbFormato;
    private javax.swing.JComboBox<String> cmbIdioma;
    private javax.swing.JComboBox<String> cmbReferato;
    private javax.swing.JComboBox<String> cmbTematica;
    private javax.swing.JComboBox<String> cmbTipoCodigo;
    private org.jdesktop.swingx.JXDatePicker dpFechaAceptado;
    private org.jdesktop.swingx.JXDatePicker dpFechaDonacion;
    private org.jdesktop.swingx.JXDatePicker dpFechaRecibido;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jListEvaluaciones;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanelAsesores;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox jcbTipoPublicacion;
    private javax.swing.JTextArea jtaMenciones;
    private javax.swing.JTextField jtfIsbn;
    private javax.swing.JTextField jtfProyectoRelacionado;
    private javax.swing.JTextArea jtfTitulo;
    private org.jdesktop.swingx.JXDatePicker jxDatePub;
    private javax.swing.JList lsIntegrantesFueraLibro;
    private javax.swing.JList lstIntegrantesDentroLibro;
    private javax.swing.JTextArea taResumen;
    private javax.swing.JTextArea taSummary;
    private javax.swing.JTable tblDonaciones;
    private javax.swing.JTextField tfBuscarIntregantesLibro;
    private javax.swing.JTextField tfCantidadDonacion;
    private javax.swing.JTextField tfCantidadPaginas;
    private javax.swing.JTextField tfStock;
    // End of variables declaration//GEN-END:variables

    private void inicializarComponentes() {        
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Insets scnMax = Toolkit.getDefaultToolkit().getScreenInsets(getGraphicsConfiguration());
        int taskBarSize = scnMax.bottom;
        this.setSize(screenSize.width, screenSize.height - taskBarSize);
        btnEliminarTipoPublicacion.setEnabled(false);
        
        cargarTipoPublicacion();  
                
        btnAgregarDonacion.setEnabled(true);
        btnEliminarDonacion.setEnabled(false);
        btnEliminarDestinoEditorial.setEnabled(false);
        btnEliminarTematica.setEnabled(false);
        btnEliminarFormato.setEnabled(false);
        cargarEncabezadoTablaDonaciones();
        
        //btnEliminarStock.setEnabled(false);
        btnEliminarIdioma.setEnabled(false);
        btnEliminarAcademica.setEnabled(false);
        
        cargarComboDestinoEditorial();   
        cargarComboTipoCodigo();
        cargarComboIdioma();
        cargarComboReferato();
        cargarComboUnidadAcademica();
        cargarComboFormato();
        cargarComboTematica();
                
        btnPublicaciones.setEnabled(false);      
        
        this.setSize(new Dimension(Toolkit.getDefaultToolkit().getScreenSize()));

        switch (tipoOperacion) {
            case "Alta":
                Comunes.cargarJList(lstIntegrantesDentroLibro, autoresDentro);
                List<Investigador> integrantesFuera = InvestigadorFacade.getInstance().getTodosInvestigador();
                integrantesFuera.removeAll(autoresDentro);
                Comunes.cargarJList(lsIntegrantesFueraLibro, integrantesFuera);
                break;
            case "Modificación":                
                listaDonaciones = editorialCientifica.getDonaciones();
                limpiarTablaDonaciones();    
                cargarCuerpoTablaDonaciones(listaDonaciones);
                
                autoresDentro = editorialCientifica.getInvestigadores();       
                Comunes.cargarJList(lstIntegrantesDentroLibro, autoresDentro);
                List<Investigador> integrantesFueram = InvestigadorFacade.getInstance().getTodosInvestigador();
                integrantesFueram.removeAll(autoresDentro);
                Comunes.cargarJList(lsIntegrantesFueraLibro, integrantesFueram);
                try {
                    if (editorialCientifica.getTitulo() != null) {
                        jtfTitulo.setText(editorialCientifica.getTitulo());

                    }
                } catch (NullPointerException ex) {
                }                
                /*try {
                    if (!listaUnidades.isEmpty()) {
                        cargarListaUnidades();
                    }
                } catch (NullPointerException ex) {
                }             */   

                try {
                    if (editorialCientifica.getResumen() != null) {
                        taResumen.setText(editorialCientifica.getResumen());

                    }
                } catch (NullPointerException ex) {
                }
                
                try {
                    if (editorialCientifica.getSummary()!= null) {
                        taSummary.setText(editorialCientifica.getSummary());

                    }
                } catch (NullPointerException ex) {
                }

                try {
                    if (editorialCientifica.getAnioPublicacion() != null) {
                        jxDatePub.setDate(editorialCientifica.getAnioPublicacion());

                    }
                } catch (NullPointerException ex) {
                }

                try {
                    if (editorialCientifica.getISBN() != null) {
                        jtfIsbn.setText(editorialCientifica.getISBN());

                    }
                } catch (NullPointerException ex) {
                }

                try {
                    if (editorialCientifica.getMenciones() != null) {
                        jtaMenciones.setText(editorialCientifica.getMenciones());

                    }
                } catch (NullPointerException ex) {
                }

                try {
                    if (editorialCientifica.getProyecto() != null) {
                        proyecto = editorialCientifica.getProyecto();
                        jtfProyectoRelacionado.setText(editorialCientifica.getProyecto().toString());

                    }
                } catch (NullPointerException ex) {
                }

                try {
                    if (editorialCientifica.getTipoPublicacion() != null) {
                        jcbTipoPublicacion.setSelectedItem(editorialCientifica.getTipoPublicacion());
                    }
                } catch (NullPointerException ex) {
                }
                
                try{
                    if (!evaluaciones.isEmpty()){                    
                        Comunes.cargarJList(jListEvaluaciones, evaluaciones);}
                    } catch (NullPointerException ex) {
                }    
                
                dpFechaAceptado.setDate(editorialCientifica.getFechaAceptado());
                dpFechaRecibido.setDate(editorialCientifica.getFechaRecibido());
                jxDatePub.setDate(editorialCientifica.getAnioPublicacion());
                
                try {
                    if (editorialCientifica.getIdioma()!= null) {
                        cmbIdioma.setSelectedItem(editorialCientifica.getIdioma());
                    }
                } catch (NullPointerException ex) {
                }
                
                try {
                    if (editorialCientifica.getUnidadAcademica()!= null) {
                        cmbAcademica.setSelectedItem(editorialCientifica.getUnidadAcademica());
                    }
                } catch (NullPointerException ex) {
                }
                //List<Idioma> listaIdio = facade.IdiomaFacade.getInstance().listarTodosOrdenados();
                //Comunes.cargarJComboConBlanco(cmbIdioma, listaIdio);
                
                try {
                    if (editorialCientifica.getTipoCodigo()!= null) {
                        cmbTipoCodigo.setSelectedItem(editorialCientifica.getTipoCodigo());
                    }
                } catch (NullPointerException ex) {
                }
                
                try {
                    if (editorialCientifica.getReferato()!= null) {
                        cmbReferato.setSelectedItem(editorialCientifica.getReferato());
                    }
                } catch (NullPointerException ex) {
                }                
                
                tfCantidadPaginas.setText(String.valueOf(editorialCientifica.getCantidadPaginas()));
                tfStock.setText(String.valueOf(editorialCientifica.getStock()));
                
                try {
                    if (editorialCientifica.getTematica()!= null) {
                        cmbTematica.setSelectedItem(editorialCientifica.getTematica());
                    }
                } catch (NullPointerException ex) {
                }
                
                try {
                    if (editorialCientifica.getFormato()!= null) {
                        cmbFormato.setSelectedItem(editorialCientifica.getFormato());
                    }
                } catch (NullPointerException ex) {
                }
        }
    }    

    private void asignarDatos() {
        editorialCientifica.setTitulo(jtfTitulo.getText());
        /*editorialCientifica.setAutor(jtfAutor.getText());
        if (!jtfCoautor.getText().equals("")) {
            editorialCientifica.setCoautor(jtfCoautor.getText());
        } else {
            editorialCientifica.setCoautor(null);
        }*/
        editorialCientifica.setTitulo(jtfTitulo.getText());        
        if (!taResumen.getText().equals("")) {
            editorialCientifica.setResumen(taResumen.getText());
        } else {
            editorialCientifica.setResumen(null);
        }
        if (!taSummary.getText().equals("")) {
            editorialCientifica.setSummary(taSummary.getText());
        } else {
            editorialCientifica.setSummary(null);
        }       
        editorialCientifica.setAnioPublicacion(jxDatePub.getDate());
        editorialCientifica.setISBN(jtfIsbn.getText());

        if (!jtaMenciones.getText().equals("")) {
            editorialCientifica.setMenciones(jtaMenciones.getText());
        } else {
            editorialCientifica.setMenciones(null);
        }
        // editorialCientifica.setProyecto((jtfProyectoRelacionado.getText());

        if (jcbTipoPublicacion.getSelectedIndex() > 0) {
            editorialCientifica.setTipoPublicacion((TipoPublicacion) jcbTipoPublicacion.getSelectedItem());
        } else {
            editorialCientifica.setTipoPublicacion(null);
        }
        
        if (jtfProyectoRelacionado.getText() != null) {
            editorialCientifica.setProyecto(proyecto);
        } else {
            editorialCientifica.setProyecto(null);
        }
        
        if (!evaluaciones.isEmpty()){
            editorialCientifica.setEvaluacionesEditorial(evaluaciones);
        } else {
            editorialCientifica.setEvaluacionesEditorial(null);
        }
        
        if (autoresDentro.size() > 0) {
            editorialCientifica.setInvestigadores(autoresDentro);
        } else {
            editorialCientifica.setInvestigadores(null);
        }
        
        if(listaDonaciones.size() > 0){
            editorialCientifica.setDonaciones(listaDonaciones);
        } else {
            editorialCientifica.setDonaciones(null);
        }
        
        if (cmbIdioma.getSelectedIndex() > 0) {
            editorialCientifica.setIdioma((Idioma) cmbIdioma.getSelectedItem());
        } else {
            editorialCientifica.setIdioma(null);
        }
        
        if (cmbTipoCodigo.getSelectedIndex() > 0) {
            editorialCientifica.setTipoCodigo((String) cmbTipoCodigo.getSelectedItem());
        } else {
            editorialCientifica.setTipoCodigo(null);
        }
        
        if (cmbReferato.getSelectedIndex() > 0) {
            editorialCientifica.setReferato(cmbReferato.getSelectedItem().toString());
        } else {
            editorialCientifica.setReferato(null);
        }
        
        if (cmbAcademica.getSelectedIndex() > 0) {
            editorialCientifica.setUnidadAcademica((UnidadAcademica) cmbAcademica.getSelectedItem());
        } else {
            editorialCientifica.setUnidadAcademica(null);
        }
        
        editorialCientifica.setFechaAceptado(dpFechaAceptado.getDate());
        editorialCientifica.setFechaRecibido(dpFechaRecibido.getDate());
        editorialCientifica.setCantidadPaginas(Integer.parseInt(tfCantidadPaginas.getText()));
        editorialCientifica.setStock(Integer.parseInt(tfStock.getText()));
        
        if (cmbTematica.getSelectedIndex() > 0) {
            editorialCientifica.setTematica((TematicaEditorial) cmbTematica.getSelectedItem());
        } else {
            editorialCientifica.setTematica(null);
        }
        
        if (cmbFormato.getSelectedIndex() > 0) {
            editorialCientifica.setFormato((FormatoEditorial) cmbFormato.getSelectedItem());
        } else {
            editorialCientifica.setFormato(null);
        }
    }

    private void altaEditorial() {
        try {
            EditorialCientificaFacade.getInstance().alta(editorialCientifica);
            Operacion operacion = new Operacion();
            operacion.setFecha(Comunes.obtenerFechaActualDesdeDB());
            operacion.setOperacion("Alta de publicación científica");
            operacion.setUsuario(usuario);
            OperacionFacade.getInstance().alta(operacion);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error creando publicación científica\n " + ex);
        }
    }

    private void altaStock() {
        for (Stock s : listaUnidades) {
            try {
                s.setPublicacion(editorialCientifica);
                StockFacade.getInstance().alta(s);
                Operacion operacion = new Operacion();
                operacion.setFecha(Comunes.obtenerFechaActualDesdeDB());
                operacion.setOperacion("Alta de stock de publicación científica");
                operacion.setUsuario(usuario);
                OperacionFacade.getInstance().alta(operacion);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Error creando stock de publicación científica\n " + ex);
            }
        }
    }


    private void modificarEditorial() {

        try {
            EditorialCientificaFacade.getInstance().modificar(editorialCientifica);
            Operacion operacion = new Operacion();
            operacion.setFecha(Comunes.obtenerFechaActualDesdeDB());
            operacion.setOperacion("Modificación de publicación científica");
            operacion.setUsuario(usuario);
            OperacionFacade.getInstance().alta(operacion);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error modificando publicación científica\n " + ex);
        }
    }

    private void guardar() {
        if (validar()) {
            if (tipoOperacion.equals("Alta")) {
                editorialCientifica = new EditorialCientifica();
                asignarDatos();
                altaEditorial();
                altaStock();
                diagExpedienteEditorial expedienteEditorial;
                expedienteEditorial = new diagExpedienteEditorial(null, true, editorialCientifica, usuario, "Alta");
                expedienteEditorial.setLocation(Comunes.centrarDialog(expedienteEditorial));
                expedienteEditorial.setVisible(true);
                this.dispose();
            } else if (tipoOperacion.equals("Modificación")) {
                asignarDatos();
                modificarEditorial();
                this.dispose();
            }
        }
    }

    private boolean validar() {
        boolean flag = false;
        if (!jtfTitulo.getText().equals("")) {            
            if (!jtfIsbn.getText().equals("")) {

                flag = true;
            } else {
                JOptionPane.showMessageDialog(null, "Debe ingresar el ISBN de la publicación", "Error", JOptionPane.ERROR_MESSAGE);
            }            
        } else {
            JOptionPane.showMessageDialog(null, "Debe ingresar el título de la publicación", "Error", JOptionPane.ERROR_MESSAGE);
        }
        jtfTitulo.requestFocus();
        return flag;
    }

    private void cargarTipoPublicacion() {
        Comunes.cargarJComboConBlanco(jcbTipoPublicacion, TipoPublicacionFacade.getInstance().listarTodos());
    }

    private void agregarProyecto() {
        diagProyectoBusquedaSimple busquedaSimple = new diagProyectoBusquedaSimple(null, true);
        busquedaSimple.setVisible(true);
        busquedaSimple.setLocation(Comunes.centrarDialog(busquedaSimple));

        if (busquedaSimple.getProyecto() != null) {
            proyectoSele = busquedaSimple.getProyecto();

            jtfProyectoRelacionado.setText(proyectoSele.toString());
            btnPublicaciones.setEnabled(true);
        } else {
            btnPublicaciones.setEnabled(false);
            JOptionPane.showMessageDialog(null, "No seleccionó ningún proyecto");
        }
    }

    private void agregarNuevaEvaluacion() {
        diagEvaluacionEditorial evaluacion = new diagEvaluacionEditorial(null, true, "Alta", usuario);
        evaluacion.setLocation(Comunes.centrarDialog(evaluacion));
        evaluacion.setVisible(true);
        if (evaluacion.getEvaluacionCreada() != null) {
            evaluaciones.add(evaluacion.getEvaluacionCreada());
            cargarEvaluaciones();
        }

    }

    private void agregarStock() {
        diagStock stock;
        if (editorialCientifica != null){
           stock = new diagStock(null, true, usuario, 
                   "Alta", "Editorial", editorialCientifica);

        } else {
            // Estoy creando la publicación por primera vez por lo que no hay
            // un objeto editorialCientifica aun.
           stock = new diagStock(null, true, usuario,
                    "Alta", "Editorial");

        }
        
        /*stock.setLocation(Comunes.centrarDialog(stock));
        stock.setVisible(true);
        if (stock.getStockCreado() != null) {
            listaUnidades.add(stock.getStockCreado());
            cargarListaUnidades();
        }*/
    }

    /*private void cargarListaUnidades() {
        Comunes.cargarJList(jListUnidades, listaUnidades);
    }*/

    private void modificarEvaluacion() {
        if (jListEvaluaciones.getSelectedIndex() != -1) {
            
            evaluacionEditorial = (EvaluacionEditorial) jListEvaluaciones.getSelectedValue();
            diagEvaluacionEditorial diagevaluacion = new diagEvaluacionEditorial(null, true, "Modificación", evaluacionEditorial, usuario);
            diagevaluacion.setLocation(Comunes.centrarDialog(diagevaluacion));
            diagevaluacion.setVisible(true);
            if (diagevaluacion.getEvaluacionCreada() != null) {
                
                cargarEvaluaciones();
            }

        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una evaluacion");
        }
    }

    private void cargarEvaluaciones() {
        Comunes.cargarJList(jListEvaluaciones, evaluaciones);
    }

    private void eliminarEvaluacion() {
        if (jListEvaluaciones.getSelectedIndex() != -1) {
            int i = JOptionPane.showConfirmDialog(null, "Se eliminaran las dos evaluaciones individuales \n correspondientes. "
                    + "¿Está usted seguro?", "Confirmar", JOptionPane.YES_NO_CANCEL_OPTION);
            if (i == JOptionPane.YES_OPTION) {
                EvaluacionEditorial evaluacionEliminar =  (EvaluacionEditorial) jListEvaluaciones.getSelectedValue();
                evaluaciones.remove(evaluacionEliminar);
                EvaluacionEditorialFacade.getInstance().Eliminar(evaluacionEliminar.getId());
                JOptionPane.showMessageDialog(null, "Evaluacion Eliminada!");
                cargarEvaluaciones();

            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fila!");
        }
    }

//    private void eliminarStock() {
//        if (jListUnidades.getSelectedIndex() != -1) {
//            int i = JOptionPane.showConfirmDialog(null, "Se eliminaran las tres evaluaciones \n correspondientes. "
//                    + "Esta usted Seguro?", "Confirmar", JOptionPane.YES_NO_CANCEL_OPTION);
//            if (i == JOptionPane.YES_OPTION) {
//                EvaluacionEditorial evaluacionEliminar = EvaluacionEditorialFacade.getInstance().buscar((Long) jListEvaluaciones.getSelectedValue());
//                evaluaciones.remove(evaluacionEliminar);
//                EvaluacionEditorialFacade.getInstance().Eliminar(evaluacionEliminar.getId());
//                JOptionPane.showMessageDialog(null, "Evaluacion Eliminada!");
//                cargarEvaluaciones();
//
//            }
//        } else {
//            JOptionPane.showMessageDialog(null, "Debe seleccionar una fila!");
//        }
//    }

    private void nuevoTipoDePublicacion() {
        diagTipoEditorial tipo = new diagTipoEditorial(null, true,  usuario, "Alta");
        tipo.setLocation(Comunes.centrarDialog(tipo));
        tipo.setVisible(true);
        btnEliminarTipoPublicacion.setEnabled(false);
        cargarTipos();        
    }
    
    private void cargarTipos(){
        Comunes.cargarJComboConBlanco(jcbTipoPublicacion, TipoPublicacionFacade.getInstance().listarTodos());
    }

    private void mostrarPublicaciones() {
        diagProyectoResultado publicaciones = new diagProyectoResultado(null, true, usuario, proyectoSele);
        publicaciones.setLocation(Comunes.centrarDialog(publicaciones));
        publicaciones.setVisible(true);
        
    }    

    private void agregarIntegrantesLibro() {
        if (lsIntegrantesFueraLibro.getSelectedIndex() != -1) {

            autoresDentro.add((Investigador) lsIntegrantesFueraLibro.getSelectedValue());
            List<Investigador> integrantesFuera = InvestigadorFacade.getInstance().getTodosInvestigador();
            integrantesFuera.removeAll(autoresDentro);
            Comunes.cargarJList(lsIntegrantesFueraLibro, integrantesFuera);

            Comunes.cargarJList(lstIntegrantesDentroLibro, autoresDentro);

        } else {
            JOptionPane.showMessageDialog(rootPane, "Debe escoger un Autor", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void quitarIntegrantesLibro() {
        if (lstIntegrantesDentroLibro.getSelectedIndex() != -1) {

            autoresDentro.remove((Investigador) lstIntegrantesDentroLibro.getSelectedValue());
            List<Investigador> integrantesFuera = InvestigadorFacade.getInstance().getTodosInvestigador();
            integrantesFuera.removeAll(autoresDentro);
            Comunes.cargarJList(lsIntegrantesFueraLibro, integrantesFuera);

            Comunes.cargarJList(lstIntegrantesDentroLibro, autoresDentro);

        }
    }

    private void buscarIntegrantesLibro() {
        if (!tfBuscarIntregantesLibro.getText().equals("")) {
            Comunes.cargarJList(lsIntegrantesFueraLibro, InvestigadorFacade.getInstance().buscarPorApellidoNombre(tfBuscarIntregantesLibro.getText()));
        } else {
            Comunes.cargarJList(lsIntegrantesFueraLibro, InvestigadorFacade.getInstance().getTodosInvestigador());
        }
    }
    
    /*private void CargarAutores() {
        if(jtfTitulo.getText().equals("")){
            
        }else{
            
        }
        //autoresDentro = ProyectoFacade.getInstance().getTodosIntegrantes(proyectoLibro);
        //autoresDentro = 
        Comunes.cargarJList(lstIntegrantesDentroLibro, autoresDentro);
        List<Investigador> integrantesFuera = InvestigadorFacade.getInstance().getTodosInvestigador();
        integrantesFuera.removeAll(autoresDentro);
        Comunes.cargarJList(lsIntegrantesFueraLibro, integrantesFuera);
    }*/

    private void habilitarEliminarTipoPublicacion() {
        String tipoPubli = jcbTipoPublicacion.getSelectedItem().toString();
        if(!tipoPubli.equals("--Seleccione--")){
            btnEliminarTipoPublicacion.setEnabled(true);
        }
        else{
            btnEliminarTipoPublicacion.setEnabled(false);
        }
    }

    private void eliminarTipoPulicacion() {
        int indice = jcbTipoPublicacion.getSelectedIndex();       
        List<TipoPublicacion> listaTipos = new ArrayList<TipoPublicacion>();
        listaTipos = facade.TipoPublicacionFacade.getInstance().getTodosPublicacion();
        
        long idTipo = listaTipos.get(indice-1).getId();
        
        List<EditorialCientifica> tipos = facade.EditorialCientificaFacade.getInstance().listarTiposPublicacionEnEditorial(idTipo);
        
        if(tipos.size() == 0){
            facade.TipoPublicacionFacade.getInstance().eliminar(idTipo);
            JOptionPane.showMessageDialog(null, "Tipo de publicación eliminado exitosamente");
            cargarTipos();    
        }else{
            JOptionPane.showMessageDialog(null, "No se puede eliminar el tipo de publicación "
                   + "debido a que se encuentra cargado en una o más editoriales");            
        }
        
        habilitarEliminarTipoPublicacion();            
    }

    private void cargarEncabezadoTablaDonaciones() {
        modeloTablaDonaciones.addColumn("Fecha");
        modeloTablaDonaciones.addColumn("Destino");
        modeloTablaDonaciones.addColumn("Cantidad");        
        tblDonaciones.setModel(modeloTablaDonaciones);
    }

    private void limpiarTablaDonaciones() {
        DefaultTableModel modeloTablaLimpia = (DefaultTableModel) tblDonaciones.getModel();
        modeloTablaLimpia.getDataVector().clear(); //limpias el contenido
        tblDonaciones.setModel(modeloTablaLimpia);//asignas el nuevo modelo de la tabla
        tblDonaciones.updateUI();//actualizas la tabla
    }
    
    private void cargarCuerpoTablaDonaciones(List<DonacionEditorial> listaDonaciones) {
        
        int tamanio = listaDonaciones.size();
        Object[] fila = new Object[3];
        
        for (int i = 0; i < tamanio; i++) {
            fila[0] = formato.format(listaDonaciones.get(i).getFecha());
            fila[1] = listaDonaciones.get(i).getDestino();
            fila[2] = listaDonaciones.get(i).getCantidad();           
            modeloTablaDonaciones.addRow(fila);
        }
        tblDonaciones.setModel(modeloTablaDonaciones);
    }

    private void agregarDonacionEditorial() {
        validarCamposDonacion();
    }

    private void validarCamposDonacion() {
        boolean bandera = true;
        String error = "Error: \n";

        if (tfCantidadDonacion.getText().isEmpty()) {
            bandera = false;
            error += "Debe ingresar una cantidad a donar \n";
        }else{
            if(Comunes.validarStringAInt(tfCantidadDonacion.getText()) > editorialCientifica.getStock()){
                bandera = false;
                error += "La cantidad ingresada es mayor al stock actual de la editorial\n";                
            }else{
                int resta = editorialCientifica.getStock() - Comunes.validarStringAInt(tfCantidadDonacion.getText());
                tfStock.setText(String.valueOf(resta));
            }            
        }

        if (dpFechaDonacion.getDate() == null) {
            bandera = false;
            error += "Debe ingresar una Fecha de donación \n";
        }

        if (bandera == false) {
            JOptionPane.showMessageDialog(null, error);
        }else{
            agregarFila();
        }
    }

    private void agregarFila() {
        DonacionEditorial donacion = new DonacionEditorial();       
        
        donacion.setCantidad(Comunes.validarStringAInt(tfCantidadDonacion.getText()));
        donacion.setDestino((DestinoEditorial) cmbDestinoEditorial.getSelectedItem());
        donacion.setFecha(dpFechaDonacion.getDate());
        
        listaDonaciones.add(donacion);
        
        limpiarTablaDonaciones();
        cargarCuerpoTablaDonaciones(listaDonaciones);       
         
        JOptionPane.showMessageDialog(null, "Fila Agregada");
    }

    private void eliminarFila(int fila) {
        listaDonaciones.remove(fila);
        modeloTablaDonaciones.removeRow(tblDonaciones.getSelectedRow());
        limpiarTablaDonaciones();         
        cargarCuerpoTablaDonaciones(listaDonaciones);
        btnEliminarDonacion.setEnabled(false);
        
        JOptionPane.showMessageDialog(null, "Fila eliminada exitosamente");
    }

    private void habilitarBotonEliminarFilaDonacion() {
        btnEliminarDonacion.setEnabled(true);
    }

    private void eliminarDestinoEditorial() {
        int indice = cmbDestinoEditorial.getSelectedIndex();       
        List<DestinoEditorial> listaDestinos = new ArrayList<DestinoEditorial>();
        listaDestinos = facade.DestinoEditorialFacade.getInstance().listarTodosDestinosOrdenados();
        
        long idDestino = listaDestinos.get(indice-1).getId();        
        
        List<DonacionEditorial> donaciones = facade.DestinoEditorialFacade.getInstance().buscarDestinoEnDonacion(idDestino);
        
        if(donaciones.size() == 0){                        
            facade.DestinoEditorialFacade.getInstance().eliminar(idDestino); 
            JOptionPane.showMessageDialog(null, "Destino editorial eliminado exitosamente");
        }else{
            JOptionPane.showMessageDialog(null, "No se puede eliminar el destino "
                   + "debido a que se encuentra cargado en una o más donaciones");
            
        }
        
        /*try {
            facade.DestinoEditorialFacade.getInstance().eliminar(idDestino);   
            //new DestinoEditorialJpaController(emf).edit(destino);
        } catch (Exception ex) {
            Logger.getLogger(DestinoEditorialFacade.class.getName()).log(Level.SEVERE, null, ex);
        }*/
             
        //HabilitarEliminarDestinoEditorial();
        cargarComboDestinoEditorial();
        btnEliminarDestinoEditorial.setEnabled(false);       
    }

    private void habilitarBotonEliminarDestino() {
        String desti = cmbDestinoEditorial.getSelectedItem().toString();
        if(!desti.equals("--Seleccione--")){
            btnEliminarDestinoEditorial.setEnabled(true);
        }
        else{
            btnEliminarDestinoEditorial.setEnabled(false);
        }
    }

    private void agregarDestinoEditorial() {
        diagDestinoEditorialAlta destino = new diagDestinoEditorialAlta(null, true,  usuario, "Alta");
        destino.setLocation(Comunes.centrarDialog(destino));
        destino.setVisible(true);
        
        btnEliminarDestinoEditorial.setEnabled(false);
        cargarComboDestinoEditorial();   
    }
    
    private void cargarComboDestinoEditorial() {
        Comunes.cargarJComboConBlanco(cmbDestinoEditorial,DestinoEditorialFacade.getInstance().listarTodosDestinosOrdenados());  
    }

    /*private void eliminarStock() {
        Stock stockElegido = (Stock) jListUnidades.getSelectedValue();
        StockFacade.getInstance().Eliminar(stockElegido.getId());
        JOptionPane.showMessageDialog(null, "Stock eliminado correctamente");
        listaUnidades = StockFacade.getInstance().getPorPublicacionId(editorialCientifica.getId());
        cargarListaUnidades();
    }

    private void habilitarBotonEliminarStock() {
        btnEliminarStock.setEnabled(true);
    }*/

    private void agregarInvestigador() {
        diagInvestigador investigador = new diagInvestigador(null, true, "Alta", usuario);        
        investigador.setLocation(Comunes.centrarDialog(investigador));
        investigador.setVisible(true);               
    }

    private void cargarComboTipoCodigo() {
        List<String> listaTipos =  new ArrayList<String>();
        listaTipos.add("ISBN");
        listaTipos.add("ISSN");
        
        Comunes.cargarJComboConBlanco(cmbTipoCodigo,listaTipos);
    }

    private void agregarIdioma() {
        diagIdiomaAlta diagIdioma = new diagIdiomaAlta(null, true, usuario, "Alta");
        diagIdioma.setLocation(Comunes.centrarDialog(diagIdioma));
        diagIdioma.setVisible(true);
        
        btnEliminarIdioma.setEnabled(false);
        cargarComboIdioma();       
    }

    private void cargarComboIdioma() {
        Comunes.cargarJComboConBlanco(cmbIdioma, IdiomaFacade.getInstance().listarTodosOrdenados());
    }
    
    private void cargarComboReferato(){
        ArrayList<String> listaReferato = new ArrayList<String>();
        listaReferato.add("SI");
        listaReferato.add("NO");
        
        Comunes.cargarJComboConBlanco(cmbReferato,listaReferato);
    }

    private void habilitarEliminarIdioma() {
        String idioma = cmbIdioma.getSelectedItem().toString();
        if(!idioma.equals("--Seleccione--")){
            btnEliminarIdioma.setEnabled(true);
        }
        else{
            btnEliminarIdioma.setEnabled(false);
        }
    }

    private void eliminarIdioma() {
        int indice = cmbIdioma.getSelectedIndex();       
        List<Idioma> listaIdiomas = new ArrayList<Idioma>();
        listaIdiomas = facade.IdiomaFacade.getInstance().listarTodosOrdenados();
        
        long idIdioma = listaIdiomas.get(indice-1).getId();
        
        List<EditorialCientifica> idiomas = facade.EditorialCientificaFacade.getInstance().listarIdiomasEnEditorial(idIdioma);
        
        if(idiomas.size() == 0){
            facade.IdiomaFacade.getInstance().eliminar(idIdioma);
            JOptionPane.showMessageDialog(null, "Idioma eliminado exitosamente");
            cargarComboIdioma();
         }else{
            JOptionPane.showMessageDialog(null, "No se puede eliminar el idioma "
                   + "debido a que se encuentra cargado en una o más editoriales");            
        }
        
        habilitarEliminarIdioma();               
    }

    private void cargarComboUnidadAcademica() {
        Comunes.cargarJComboConBlanco(cmbAcademica,UnidadAcademicaFacade.getInstance().getTodasUnidadAcademica()); 
    }

    private void nuevaUnidadAcademica() {
        diagUnidadAcademicaAlta nuevaUnidad = new diagUnidadAcademicaAlta(null, true);
        nuevaUnidad.setLocation(Comunes.centrarDialog(nuevaUnidad));
        nuevaUnidad.setVisible(true);
        btnEliminarAcademica.setEnabled(false);
        cargarComboUnidadAcademica();        
    }

    private void eliminarUnidadAcademica() {        
        int indice = cmbAcademica.getSelectedIndex();       
        List<UnidadAcademica> listaUA = new ArrayList<UnidadAcademica>();
        listaUA = facade.UnidadAcademicaFacade.getInstance().getTodasUnidadAcademica();
        
        long idUA = listaUA.get(indice-1).getId();
        
        List<EditorialCientifica> academicas = facade.EditorialCientificaFacade.getInstance().listarAcademicasEnEditorial(idUA);
        
        if(academicas.size() == 0){
            facade.UnidadAcademicaFacade.getInstance().eliminar(idUA);
            JOptionPane.showMessageDialog(null, "Unidad Académica eliminada exitosamente");
            cargarComboUnidadAcademica();       
        }else{
            JOptionPane.showMessageDialog(null, "No se puede eliminar la Unidad Académica "
                   + "debido a que se encuentra cargada en una o más editoriales");            
        }
        
        habilitarEliminarUnidadAcademica();                 
    }

    private void habilitarEliminarUnidadAcademica() {
        String UA = cmbAcademica.getSelectedItem().toString();
        if(!UA.equals("--Seleccione--")){
            btnEliminarAcademica.setEnabled(true);
        }
        else{
            btnEliminarAcademica.setEnabled(false);
        }
    }

    private void agregarTematica() {
        diagTematicaEditorialAlta diagTematica = new diagTematicaEditorialAlta(null, true, usuario, "Alta");
        diagTematica.setLocation(Comunes.centrarDialog(diagTematica));
        diagTematica.setVisible(true);
        
        btnEliminarTematica.setEnabled(false);
        cargarComboTematica();     
    }

    private void agregarFormato() {
        diagFormatoEditorialAlta diagFormato = new diagFormatoEditorialAlta(null, true, usuario, "Alta");
        diagFormato.setLocation(Comunes.centrarDialog(diagFormato));
        diagFormato.setVisible(true);
        
        btnEliminarFormato.setEnabled(false);
        cargarComboFormato();     
    }

    private void cargarComboTematica() {
        Comunes.cargarJComboConBlanco(cmbTematica, TematicaEditorialFacade.getInstance().listarTodasOrdenadas());
    }

    private void cargarComboFormato() {
        Comunes.cargarJComboConBlanco(cmbFormato, FormatoEditorialFacade.getInstance().listarTodosOrdenados());
    }

    private void habilitarEliminarTematica() {
        String tematica = cmbTematica.getSelectedItem().toString();
        if(!tematica.equals("--Seleccione--")){
            btnEliminarTematica.setEnabled(true);
        }
        else{
            btnEliminarTematica.setEnabled(false);
        }
    }

    private void habilitarEliminarFormato() {
        String formato = cmbFormato.getSelectedItem().toString();
        if(!formato.equals("--Seleccione--")){
            btnEliminarFormato.setEnabled(true);
        }
        else{
            btnEliminarFormato.setEnabled(false);
        }
    }

    private void eliminarTematica() {
        int indice = cmbTematica.getSelectedIndex();       
        List<TematicaEditorial> listaTematicas = new ArrayList<TematicaEditorial>();
        listaTematicas = facade.TematicaEditorialFacade.getInstance().listarTodasOrdenadas();
        
        long idTematica = listaTematicas.get(indice-1).getId();
        
        List<EditorialCientifica> tematicas = facade.EditorialCientificaFacade.getInstance().listarTematicasEnEditorial(idTematica);
        
        if(tematicas.size() == 0){
            facade.TematicaEditorialFacade.getInstance().eliminar(idTematica);
            JOptionPane.showMessageDialog(null, "Temática eliminada exitosamente");
            cargarComboTematica();
        }else{
            JOptionPane.showMessageDialog(null, "No se puede eliminar la temática "
                   + "debido a que se encuentra cargado en una o más editoriales");            
        }
        
        habilitarEliminarTematica();        
    }

    private void eliminarFormato() {
        int indice = cmbFormato.getSelectedIndex();       
        List<FormatoEditorial> listaFormatos = new ArrayList<FormatoEditorial>();
        listaFormatos = facade.FormatoEditorialFacade.getInstance().listarTodosOrdenados();
        
        long idFormato = listaFormatos.get(indice-1).getId();
        
        List<EditorialCientifica> formatos = facade.EditorialCientificaFacade.getInstance().listarFormatosEnEditorial(idFormato);
        
        if(formatos.size() == 0){
            facade.FormatoEditorialFacade.getInstance().eliminar(idFormato);
            JOptionPane.showMessageDialog(null, "Formato eliminado exitosamente");
            cargarComboFormato();
        }else{
            JOptionPane.showMessageDialog(null, "No se puede eliminar el formato "
                   + "debido a que se encuentra cargado en una o más editoriales");            
        }
        
        habilitarEliminarFormato();                
    }    
}
