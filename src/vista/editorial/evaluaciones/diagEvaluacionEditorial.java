/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.editorial.evaluaciones;

import entidades.persona.Evaluador;
import entidades.proyecto.Evaluacion;
import entidades.proyecto.EvaluacionIndividual;
import entidades.proyecto.Nota;
import entidades.proyecto.Proyecto;
import entidades.proyecto.editorial.EditorialCientifica;
import entidades.proyecto.editorial.EvaluacionEditorial;
import entidades.usuario.Usuario;
import facade.EvaluacionEditorialFacade;
import facade.EvaluacionFacade;
import facade.NotaFacade;
import includes.Comunes;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import vista.diagEvaluadorBusqueda;
import vista.proyectos.diagNota;

/**
 *
 * @author francisco
 */
public class diagEvaluacionEditorial extends javax.swing.JDialog {
    private final static int EVALUADORES = 2;
    private Evaluador evaluador;
    private EvaluacionEditorial evaluacion;
    private Nota nota;
    private Date fecha;
    private Usuario usuario;
    private List<EvaluacionIndividual> listaEvaluacionesIndividuales = new ArrayList<EvaluacionIndividual>();
    private String tipoOperacion;
    /**
     * Creates new form diagEvaluacionEditorial
     */
    public diagEvaluacionEditorial(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public diagEvaluacionEditorial(java.awt.Frame parent, boolean modal, String tipoOperacion, 
            Usuario usuario) {
        super(parent, modal);
        this.tipoOperacion = tipoOperacion;
        this.usuario = usuario;
        initComponents();
        inicializarComponentes();
    }
    
    public diagEvaluacionEditorial(java.awt.Frame parent, boolean modal, String tipoOperacion, 
           EvaluacionEditorial evaluacion, Usuario usuario) {
        super(parent, modal);
        this.tipoOperacion = tipoOperacion;
        this.evaluacion = evaluacion;
        this.usuario = usuario;
        initComponents();
        inicializarComponentes();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfEvaluador = new javax.swing.JTextField();
        btSeleccionarEvaluador = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cboNota = new javax.swing.JComboBox();
        btAgregarNuevaEvaluacion = new javax.swing.JButton();
        btAgregarEvaluacion = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListEvaluacionesIndividuales = new javax.swing.JList();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        datePickerFecha = new org.jdesktop.swingx.JXDatePicker();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagEvaluacionEditorial.class, "diagEvaluacionEditorial.jPanel1.border.title"))); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(diagEvaluacionEditorial.class, "diagEvaluacionEditorial.jLabel1.text")); // NOI18N

        tfEvaluador.setText(org.openide.util.NbBundle.getMessage(diagEvaluacionEditorial.class, "diagEvaluacionEditorial.tfEvaluador.text")); // NOI18N

        btSeleccionarEvaluador.setText(org.openide.util.NbBundle.getMessage(diagEvaluacionEditorial.class, "diagEvaluacionEditorial.btSeleccionarEvaluador.text")); // NOI18N
        btSeleccionarEvaluador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSeleccionarEvaluadorActionPerformed(evt);
            }
        });

        jLabel2.setText(org.openide.util.NbBundle.getMessage(diagEvaluacionEditorial.class, "diagEvaluacionEditorial.jLabel2.text")); // NOI18N

        cboNota.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboNotaItemStateChanged(evt);
            }
        });

        btAgregarNuevaEvaluacion.setText(org.openide.util.NbBundle.getMessage(diagEvaluacionEditorial.class, "diagEvaluacionEditorial.btAgregarNuevaEvaluacion.text")); // NOI18N
        btAgregarNuevaEvaluacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAgregarNuevaEvaluacionActionPerformed(evt);
            }
        });

        btAgregarEvaluacion.setText(org.openide.util.NbBundle.getMessage(diagEvaluacionEditorial.class, "diagEvaluacionEditorial.btAgregarEvaluacion.text")); // NOI18N
        btAgregarEvaluacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAgregarEvaluacionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cboNota, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 142, Short.MAX_VALUE))
                            .addComponent(tfEvaluador))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btAgregarNuevaEvaluacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btSeleccionarEvaluador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btAgregarEvaluacion, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(146, 146, 146))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jLabel1)
                    .addComponent(tfEvaluador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSeleccionarEvaluador))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cboNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAgregarNuevaEvaluacion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btAgregarEvaluacion)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagEvaluacionEditorial.class, "diagEvaluacionEditorial.jPanel2.border.title"))); // NOI18N

        jLabel4.setText(org.openide.util.NbBundle.getMessage(diagEvaluacionEditorial.class, "diagEvaluacionEditorial.jLabel4.text")); // NOI18N

        jScrollPane2.setViewportView(jListEvaluacionesIndividuales);

        jButton4.setText(org.openide.util.NbBundle.getMessage(diagEvaluacionEditorial.class, "diagEvaluacionEditorial.jButton4.text")); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText(org.openide.util.NbBundle.getMessage(diagEvaluacionEditorial.class, "diagEvaluacionEditorial.jButton5.text")); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(datePickerFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(65, 65, 65)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(74, 74, 74))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(433, 433, 433))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(datePickerFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(183, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(26, 26, 26)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton4)
                        .addComponent(jButton5))
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btSeleccionarEvaluadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSeleccionarEvaluadorActionPerformed
        seleccionarEvaluador();        // TODO add your handling code here:
    }//GEN-LAST:event_btSeleccionarEvaluadorActionPerformed

    private void cboNotaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboNotaItemStateChanged
        cambiarNotaSeleccionada();
    }//GEN-LAST:event_cboNotaItemStateChanged

    private void btAgregarNuevaEvaluacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAgregarNuevaEvaluacionActionPerformed
        agregarNuevaNota();        // TODO add your handling code here:
    }//GEN-LAST:event_btAgregarNuevaEvaluacionActionPerformed

    private void btAgregarEvaluacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAgregarEvaluacionActionPerformed
        agregarEvaluacion();       // TODO add your handling code here:
    }//GEN-LAST:event_btAgregarEvaluacionActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        aceptar();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        quitarEvaluacionIndividual();
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(diagEvaluacionEditorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(diagEvaluacionEditorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(diagEvaluacionEditorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(diagEvaluacionEditorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                diagEvaluacionEditorial dialog = new diagEvaluacionEditorial(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAgregarEvaluacion;
    private javax.swing.JButton btAgregarNuevaEvaluacion;
    private javax.swing.JButton btSeleccionarEvaluador;
    private javax.swing.JComboBox cboNota;
    private org.jdesktop.swingx.JXDatePicker datePickerFecha;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList jListEvaluacionesIndividuales;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField tfEvaluador;
    // End of variables declaration//GEN-END:variables

    private void seleccionarEvaluador() {
        diagEvaluadorBusqueda evaluadorEleccion = new diagEvaluadorBusqueda(null, true, usuario);
        evaluadorEleccion.setLocation(Comunes.centrarDialog(evaluadorEleccion));
        evaluadorEleccion.setVisible(true);

        if (evaluadorEleccion.getEvaluador() != null) {
            evaluador = evaluadorEleccion.getEvaluador();


        }
        tfEvaluador.setText(evaluador.toString());
    }
    
    public EvaluacionEditorial getEvaluacionCreada() {
        return evaluacion;
    }

    private void cambiarNotaSeleccionada() {
        if (cboNota.getSelectedIndex() > 0) {
            nota = (Nota) cboNota.getSelectedItem();
        } else {
            nota = null;
        }
    }

    private void agregarEvaluacion() {
        if (validar()) {
            EvaluacionIndividual evaluacionIndividual = new EvaluacionIndividual();
            evaluacionIndividual.setEvaluador(evaluador);
            evaluacionIndividual.setNota(nota);


            listaEvaluacionesIndividuales.add(evaluacionIndividual);
            cargarEvaluacionesIndividuales();
        }
    }
private void agregarNuevaNota() {
        diagNota diagNota = new diagNota(null, true, "Alta");
        diagNota.setTitle("Esto agregará un nuevo tipo de nota al sistema");
        diagNota.setLocation(Comunes.centrarDialog(diagNota));
        diagNota.setVisible(true);
        if (diagNota.getNotaCreada() != null) {
            nota = diagNota.getNotaCreada();
            cboNota.setSelectedItem(nota);
        }
        cargarNotas();
    }

    private boolean validar() {
        if (evaluador == null) {
            JOptionPane.showMessageDialog(null, "Debe elegir un evaluador");
            return false;
        }
        if (nota == null) {
            JOptionPane.showMessageDialog(null, "Debe elegir una nota");
            return false;
        }
        return true;
    }

    private void cargarEvaluacionesIndividuales() {
        Comunes.cargarJList(jListEvaluacionesIndividuales, listaEvaluacionesIndividuales);
    }

    private void aceptar() {
        if (validarCantidad()) {
            if (tipoOperacion.equals("Alta")) {
                evaluacion = new EvaluacionEditorial();
                evaluacion.setEvaluacionIndividual(listaEvaluacionesIndividuales);
                if(datePickerFecha.getDate()!=null){
                    evaluacion.setFecha(datePickerFecha.getDate());
                }else{
                    evaluacion.setFecha(null);
                }
                
                EvaluacionEditorialFacade.getInstance().alta(evaluacion);
                this.dispose();
            }
            if (tipoOperacion.equals("Modificación")) {
                evaluacion.setEvaluacionIndividual(listaEvaluacionesIndividuales);
                if(datePickerFecha.getDate()!=null){
                    evaluacion.setFecha(datePickerFecha.getDate());
                }else{
                    evaluacion.setFecha(null);
                }
                EvaluacionEditorialFacade.getInstance().modificar(evaluacion);
                this.dispose();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe cargar dos evaluaciones indivuales");
        }
    }

    private boolean validarCantidad() {
        if (listaEvaluacionesIndividuales.size() == EVALUADORES) {
            return true;

        }
        return false;
    }

    private void cargarNotas() {
        Comunes.cargarJComboConBlanco(cboNota, NotaFacade.getInstance().getTodos());

    }

    private void quitarEvaluacionIndividual() {
        if (jListEvaluacionesIndividuales.getSelectedIndex() != -1) {
            listaEvaluacionesIndividuales.remove(jListEvaluacionesIndividuales.getSelectedValue());
            cargarEvaluacionesIndividuales();
        }
    }

    private void inicializarComponentes() {
        cargarNotas();
        if (tipoOperacion.equals("Modificación")) {
            listaEvaluacionesIndividuales = evaluacion.getEvaluacionIndividual();
            Comunes.cargarJList(jListEvaluacionesIndividuales, listaEvaluacionesIndividuales);
            try{
               datePickerFecha.setDate(evaluacion.getFecha()); 
            }catch(Exception ex){
               datePickerFecha.setDate(null); 
            }
                
                        
        }
    }
}
