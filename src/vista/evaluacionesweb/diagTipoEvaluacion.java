/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.evaluacionesweb;

import entidades.proyecto.evaluacion.Bloque;
import entidades.proyecto.evaluacion.CalificacionWeb;
import entidades.proyecto.evaluacion.TipoEvaluacion;
import facade.TipoEvaluacionFacade;
import includes.Comunes;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author hugo
 */
public class diagTipoEvaluacion extends javax.swing.JDialog {

    private List<Bloque> listaBloques = new ArrayList<>();
    private List<CalificacionWeb> listaCalificacionesWeb = new ArrayList<>();
    private TipoEvaluacion tipoEvaluacion;
    private String tipoOperacion;

    public TipoEvaluacion getTipoEvaluacion() {
        return tipoEvaluacion;
    }

    /**
     * Creates new form diagTipoEvaluacion
     * @param parent
     * @param modal
     * @param tipoOperacion
     */
    public diagTipoEvaluacion(java.awt.Frame parent, boolean modal, String tipoOperacion) {
        super(parent, modal);
        initComponents();
        this.tipoOperacion=tipoOperacion;
        inicializarComponentes();
    }

    public diagTipoEvaluacion(java.awt.Frame parent, boolean modal, TipoEvaluacion tipoEvaluacion, String tipoOperacion) {
        super(parent, modal);
        initComponents();
        this.tipoEvaluacion = tipoEvaluacion;
        this.tipoOperacion = tipoOperacion;
        inicializarComponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfDescripcion = new javax.swing.JTextField();
        btnAgregarBloque = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jllistBloques = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        btnQuitarBloque = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jllistCalificacionesWeb = new javax.swing.JList();
        jLabel4 = new javax.swing.JLabel();
        bntAgregarCalificacionWeb = new javax.swing.JButton();
        btnQuitarCalificacionWeb = new javax.swing.JButton();
        btnAceptar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagTipoEvaluacion.class, "diagTipoEvaluacion.jPanel1.border.title"))); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(diagTipoEvaluacion.class, "diagTipoEvaluacion.jLabel1.text")); // NOI18N

        tfDescripcion.setText(org.openide.util.NbBundle.getMessage(diagTipoEvaluacion.class, "diagTipoEvaluacion.tfDescripcion.text")); // NOI18N

        btnAgregarBloque.setText(org.openide.util.NbBundle.getMessage(diagTipoEvaluacion.class, "diagTipoEvaluacion.btnAgregarBloque.text")); // NOI18N
        btnAgregarBloque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarBloqueActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jllistBloques);

        jLabel2.setText(org.openide.util.NbBundle.getMessage(diagTipoEvaluacion.class, "diagTipoEvaluacion.jLabel2.text")); // NOI18N

        btnQuitarBloque.setText(org.openide.util.NbBundle.getMessage(diagTipoEvaluacion.class, "diagTipoEvaluacion.btnQuitarBloque.text")); // NOI18N
        btnQuitarBloque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarBloqueActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(jllistCalificacionesWeb);

        jLabel4.setText(org.openide.util.NbBundle.getMessage(diagTipoEvaluacion.class, "diagTipoEvaluacion.jLabel4.text")); // NOI18N

        bntAgregarCalificacionWeb.setText(org.openide.util.NbBundle.getMessage(diagTipoEvaluacion.class, "diagTipoEvaluacion.bntAgregarCalificacionWeb.text")); // NOI18N
        bntAgregarCalificacionWeb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntAgregarCalificacionWebActionPerformed(evt);
            }
        });

        btnQuitarCalificacionWeb.setText(org.openide.util.NbBundle.getMessage(diagTipoEvaluacion.class, "diagTipoEvaluacion.btnQuitarCalificacionWeb.text")); // NOI18N
        btnQuitarCalificacionWeb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarCalificacionWebActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfDescripcion))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAgregarBloque, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnQuitarBloque, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bntAgregarCalificacionWeb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnQuitarCalificacionWeb, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(btnAgregarBloque)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnQuitarBloque)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(bntAgregarCalificacionWeb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnQuitarCalificacionWeb)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        btnAceptar.setText(org.openide.util.NbBundle.getMessage(diagTipoEvaluacion.class, "diagTipoEvaluacion.btnAceptar.text")); // NOI18N
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        btnCancelar.setText(org.openide.util.NbBundle.getMessage(diagTipoEvaluacion.class, "diagTipoEvaluacion.btnCancelar.text")); // NOI18N
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(151, 151, 151))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAceptar)
                    .addComponent(btnCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnAgregarBloqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarBloqueActionPerformed
        agregarBloque();
    }//GEN-LAST:event_btnAgregarBloqueActionPerformed

    private void bntAgregarCalificacionWebActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntAgregarCalificacionWebActionPerformed
        // TODO add your handling code here:
        agregarCalificacionesWeb();
    }//GEN-LAST:event_bntAgregarCalificacionWebActionPerformed

    private void btnQuitarBloqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarBloqueActionPerformed
        quitarBloque();
    }//GEN-LAST:event_btnQuitarBloqueActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        // TODO add your handling code here:
        aceptar();
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnQuitarCalificacionWebActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarCalificacionWebActionPerformed
        // TODO add your handling code here:
        quitarCalificacionWeb();
    }//GEN-LAST:event_btnQuitarCalificacionWebActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(diagTipoEvaluacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(diagTipoEvaluacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(diagTipoEvaluacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(diagTipoEvaluacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                diagTipoEvaluacion dialog = new diagTipoEvaluacion(new javax.swing.JFrame(), true, new String());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntAgregarCalificacionWeb;
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnAgregarBloque;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnQuitarBloque;
    private javax.swing.JButton btnQuitarCalificacionWeb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList jllistBloques;
    private javax.swing.JList jllistCalificacionesWeb;
    private javax.swing.JTextField tfDescripcion;
    // End of variables declaration//GEN-END:variables

    private void agregarBloque() {
        diagBuscarBloques buscarBloques = new diagBuscarBloques(null, true);
        buscarBloques.setLocation(Comunes.centrarDialog(buscarBloques));
        buscarBloques.setVisible(true);
        if (!buscarBloques.getListaBloques().isEmpty()) {
            listaBloques = buscarBloques.getListaBloques();
            Comunes.cargarJList(jllistBloques, listaBloques);
        }
    }

    private void inicializarComponentes() {
        if (tipoOperacion.equals("Modificación")) {
            try {
                tfDescripcion.setText(tipoEvaluacion.getDescripcion());
            } catch (Exception e) {
            }
            try {
                listaBloques = tipoEvaluacion.getBloques();
                Comunes.cargarJList(jllistBloques, listaBloques);
            } catch (Exception e) {
            }
            try {
                listaCalificacionesWeb = tipoEvaluacion.getCalificaciones();
                Comunes.cargarJList(jllistCalificacionesWeb, listaCalificacionesWeb);
            } catch (Exception e) {
            }
        }
    }

    private void quitarBloque() {
        if (jllistBloques.getSelectedIndex() != -1) {
            listaBloques.remove((Bloque) jllistBloques.getSelectedValue());
            Comunes.cargarJList(jllistBloques, listaBloques);
        }
    }

    private void aceptar() {
        if (validar()) {
            if (!tipoOperacion.equals("Modificación")) {
                tipoEvaluacion = new TipoEvaluacion();
                tipoEvaluacion.setDescripcion(tfDescripcion.getText());
                tipoEvaluacion.setBloques(listaBloques);
                tipoEvaluacion.setCalificaciones(null);
                TipoEvaluacionFacade.getInstance().alta(tipoEvaluacion);
                this.dispose();
            } else {
                tipoEvaluacion.setDescripcion(tfDescripcion.getText());
                tipoEvaluacion.setBloques(listaBloques);
                tipoEvaluacion.setCalificaciones(null);
                TipoEvaluacionFacade.getInstance().modificacion(tipoEvaluacion);
                this.dispose();
            }

        }

    }

    private void agregarCalificacionesWeb() {
        diagBuscarCalificacionWeb buscarCalificacionWeb = new diagBuscarCalificacionWeb(null, true);
        buscarCalificacionWeb.setLocation(Comunes.centrarDialog(buscarCalificacionWeb));
        buscarCalificacionWeb.setVisible(true);
        if (!buscarCalificacionWeb.getListaCalificacionWeb().isEmpty()) {
            listaCalificacionesWeb = buscarCalificacionWeb.getListaCalificacionWeb();
            Comunes.cargarJList(jllistCalificacionesWeb, listaCalificacionesWeb);
        }
    }

    private void quitarCalificacionWeb() {
        if (jllistCalificacionesWeb.getSelectedIndex() != -1) {
            listaCalificacionesWeb.remove((CalificacionWeb) jllistCalificacionesWeb.getSelectedValue());
            Comunes.cargarJList(jllistCalificacionesWeb, listaCalificacionesWeb);
        }
    }

    private boolean validar() {
        if (tfDescripcion.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe escribir una descripcion");
            tfDescripcion.requestFocus();
            return false;
        }
        if (listaBloques.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe cargar bloques");
            return false;
        }
        if (listaCalificacionesWeb.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe cargar calificaciones");
            return false;
        }
        return true;

    }
}
