/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.evaluacionesweb;

import entidades.Resolucion;
import entidades.persona.Evaluador;
import entidades.proyecto.Proyecto;
import entidades.proyecto.evaluacion.BloqueEvaluado;
import entidades.proyecto.evaluacion.EvaluacionWeb;
import entidades.proyecto.evaluacion.TipoEvaluacion;
import entidades.usuario.Usuario;
import facade.BloqueEvaluadoFacade;
import facade.EvaluacionWebFacade;
import facade.TipoEvaluacionFacade;
import includes.Comunes;
import includes.ModeloTablaNoEditable;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import vista.diagEvaluadorBusqueda;
import vista.diagProyectoBusquedaSimple;
import vista.resoluciones.diagResolucionEleccion;

/**
 *
 * @author hugo
 */
public class diagEvaluacionesWeb extends javax.swing.JDialog {

    private Proyecto proyecto;
    private Usuario usuario;
    private Evaluador evaluador;
    private String tipoOperacion;
    private EvaluacionWeb evaluacionWeb;
    private ModeloTablaNoEditable modeloTablaEvaluacionWeb;
    private List<EvaluacionWeb> listaEvaluacionesWeb;
    private List<BloqueEvaluado> listaBloquesEvaluados = new ArrayList<>();
    private List<Resolucion> archivos = new ArrayList<>();

    /**
     * Creates new form diagEvaluacionesWeb
     *
     * @param parent
     * @param modal
     */
    public diagEvaluacionesWeb(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        inicializarComponentes();
    }

    public diagEvaluacionesWeb(java.awt.Frame parent, boolean modal, Usuario usuario) {
        super(parent, modal);
        initComponents();
        this.usuario = usuario;
        inicializarComponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfEvaluador = new javax.swing.JTextField();
        btnBuscarProyecto = new javax.swing.JButton();
        btnBuscarEvaluador = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cboTipoEvaluacion = new javax.swing.JComboBox();
        btnNuevoTipoEvaluacion = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        taProyecto = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jlistBloquesEvaluados = new javax.swing.JList();
        btnAgregarBloqueEvaluado = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        btnEliminarTipoEvaluacion = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jlistDocumentos = new javax.swing.JList();
        jLabel6 = new javax.swing.JLabel();
        btnAgregarBloqueEvaluado1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEvaluacionWeb = new javax.swing.JTable();
        btnEliminar = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(diagEvaluacionesWeb.class, "diagEvaluacionesWeb.title")); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagEvaluacionesWeb.class, "diagEvaluacionesWeb.jPanel1.border.title"))); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(diagEvaluacionesWeb.class, "diagEvaluacionesWeb.jLabel1.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(diagEvaluacionesWeb.class, "diagEvaluacionesWeb.jLabel2.text")); // NOI18N

        tfEvaluador.setText(org.openide.util.NbBundle.getMessage(diagEvaluacionesWeb.class, "diagEvaluacionesWeb.tfEvaluador.text")); // NOI18N

        btnBuscarProyecto.setText(org.openide.util.NbBundle.getMessage(diagEvaluacionesWeb.class, "diagEvaluacionesWeb.btnBuscarProyecto.text")); // NOI18N
        btnBuscarProyecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProyectoActionPerformed(evt);
            }
        });

        btnBuscarEvaluador.setText(org.openide.util.NbBundle.getMessage(diagEvaluacionesWeb.class, "diagEvaluacionesWeb.btnBuscarEvaluador.text")); // NOI18N
        btnBuscarEvaluador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarEvaluadorActionPerformed(evt);
            }
        });

        jLabel3.setText(org.openide.util.NbBundle.getMessage(diagEvaluacionesWeb.class, "diagEvaluacionesWeb.jLabel3.text")); // NOI18N

        cboTipoEvaluacion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboTipoEvaluacion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboTipoEvaluacionItemStateChanged(evt);
            }
        });

        btnNuevoTipoEvaluacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/add.png"))); // NOI18N
        btnNuevoTipoEvaluacion.setText(org.openide.util.NbBundle.getMessage(diagEvaluacionesWeb.class, "diagEvaluacionesWeb.btnNuevoTipoEvaluacion.text")); // NOI18N
        btnNuevoTipoEvaluacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoTipoEvaluacionActionPerformed(evt);
            }
        });

        jButton1.setText(org.openide.util.NbBundle.getMessage(diagEvaluacionesWeb.class, "diagEvaluacionesWeb.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnCancelar.setText(org.openide.util.NbBundle.getMessage(diagEvaluacionesWeb.class, "diagEvaluacionesWeb.btnCancelar.text")); // NOI18N
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        taProyecto.setColumns(20);
        taProyecto.setRows(5);
        jScrollPane2.setViewportView(taProyecto);

        jLabel5.setText(org.openide.util.NbBundle.getMessage(diagEvaluacionesWeb.class, "diagEvaluacionesWeb.jLabel5.text")); // NOI18N

        jScrollPane3.setViewportView(jlistBloquesEvaluados);

        btnAgregarBloqueEvaluado.setText(org.openide.util.NbBundle.getMessage(diagEvaluacionesWeb.class, "diagEvaluacionesWeb.btnAgregarBloqueEvaluado.text")); // NOI18N
        btnAgregarBloqueEvaluado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarBloqueEvaluadoActionPerformed(evt);
            }
        });

        jButton4.setText(org.openide.util.NbBundle.getMessage(diagEvaluacionesWeb.class, "diagEvaluacionesWeb.jButton4.text")); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        btnEliminarTipoEvaluacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/delete.png"))); // NOI18N
        btnEliminarTipoEvaluacion.setText(org.openide.util.NbBundle.getMessage(diagEvaluacionesWeb.class, "diagEvaluacionesWeb.btnEliminarTipoEvaluacion.text")); // NOI18N
        btnEliminarTipoEvaluacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarTipoEvaluacionActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/edit.png"))); // NOI18N
        jButton2.setText(org.openide.util.NbBundle.getMessage(diagEvaluacionesWeb.class, "diagEvaluacionesWeb.jButton2.text")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jScrollPane4.setViewportView(jlistDocumentos);

        jLabel6.setText(org.openide.util.NbBundle.getMessage(diagEvaluacionesWeb.class, "diagEvaluacionesWeb.jLabel6.text")); // NOI18N

        btnAgregarBloqueEvaluado1.setText(org.openide.util.NbBundle.getMessage(diagEvaluacionesWeb.class, "diagEvaluacionesWeb.btnAgregarBloqueEvaluado1.text")); // NOI18N
        btnAgregarBloqueEvaluado1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarBloqueEvaluado1ActionPerformed(evt);
            }
        });

        jButton5.setText(org.openide.util.NbBundle.getMessage(diagEvaluacionesWeb.class, "diagEvaluacionesWeb.jButton5.text")); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboTipoEvaluacion, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(256, 256, 256)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnNuevoTipoEvaluacion, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEliminarTipoEvaluacion, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3)
                            .addComponent(tfEvaluador)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 701, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAgregarBloqueEvaluado, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscarEvaluador, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                            .addComponent(btnBuscarProyecto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAgregarBloqueEvaluado1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(29, 29, 29)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnBuscarProyecto)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfEvaluador, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(btnBuscarEvaluador))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboTipoEvaluacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNuevoTipoEvaluacion)
                    .addComponent(jLabel3)
                    .addComponent(jButton2)
                    .addComponent(btnEliminarTipoEvaluacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(41, 41, 41)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(btnAgregarBloqueEvaluado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jLabel6))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAgregarBloqueEvaluado1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addGap(6, 6, 6)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(btnCancelar))
                .addContainerGap())
        );

        tblEvaluacionWeb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblEvaluacionWeb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEvaluacionWebMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblEvaluacionWeb);

        btnEliminar.setText(org.openide.util.NbBundle.getMessage(diagEvaluacionesWeb.class, "diagEvaluacionesWeb.btnEliminar.text")); // NOI18N
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jButton3.setText(org.openide.util.NbBundle.getMessage(diagEvaluacionesWeb.class, "diagEvaluacionesWeb.jButton3.text")); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel4.setText(org.openide.util.NbBundle.getMessage(diagEvaluacionesWeb.class, "diagEvaluacionesWeb.jLabel4.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 825, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(445, 445, 445)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(btnEliminar)))
                .addGap(22, 22, 22)
                .addComponent(jButton3)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarProyectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProyectoActionPerformed
        buscarProyecto();
    }//GEN-LAST:event_btnBuscarProyectoActionPerformed

    private void btnBuscarEvaluadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarEvaluadorActionPerformed
        buscarEvaluador();
    }//GEN-LAST:event_btnBuscarEvaluadorActionPerformed

    private void btnNuevoTipoEvaluacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoTipoEvaluacionActionPerformed
        agregarNuevoTipoEvaluacion();
    }//GEN-LAST:event_btnNuevoTipoEvaluacionActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        aceptar();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        eliminarEvaluacionWeb();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tblEvaluacionWebMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEvaluacionWebMouseClicked
        if (evt.getClickCount() == 2) {
            cargarEvaluacionWebParaModificar();
        }
    }//GEN-LAST:event_tblEvaluacionWebMouseClicked

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        limpiarCamposCancelar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnAgregarBloqueEvaluadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarBloqueEvaluadoActionPerformed
        // TODO add your handling code here:
        AgregarBloqueEvaluado();
    }//GEN-LAST:event_btnAgregarBloqueEvaluadoActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        quitarBloqueEvaluado();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnEliminarTipoEvaluacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarTipoEvaluacionActionPerformed
        eliminarTipoEvaluacion();

    }//GEN-LAST:event_btnEliminarTipoEvaluacionActionPerformed

    private void cboTipoEvaluacionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboTipoEvaluacionItemStateChanged

    }//GEN-LAST:event_cboTipoEvaluacionItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        editarTipoEvaluacion();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnAgregarBloqueEvaluado1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarBloqueEvaluado1ActionPerformed
        adjuntarArchivo();
    }//GEN-LAST:event_btnAgregarBloqueEvaluado1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        eliminarArchivo();
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(diagEvaluacionesWeb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(diagEvaluacionesWeb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(diagEvaluacionesWeb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(diagEvaluacionesWeb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                diagEvaluacionesWeb dialog = new diagEvaluacionesWeb(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarBloqueEvaluado;
    private javax.swing.JButton btnAgregarBloqueEvaluado1;
    private javax.swing.JButton btnBuscarEvaluador;
    private javax.swing.JButton btnBuscarProyecto;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEliminarTipoEvaluacion;
    private javax.swing.JButton btnNuevoTipoEvaluacion;
    private javax.swing.JComboBox cboTipoEvaluacion;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList jlistBloquesEvaluados;
    private javax.swing.JList jlistDocumentos;
    private javax.swing.JTextArea taProyecto;
    private javax.swing.JTable tblEvaluacionWeb;
    private javax.swing.JTextField tfEvaluador;
    // End of variables declaration//GEN-END:variables

    private void inicializarComponentes() {
        tipoOperacion = "Alta";
        tfEvaluador.setEditable(false);
        taProyecto.setEditable(false);
        Comunes.autoAjusteTextArea(taProyecto);
        Comunes.cargarJCombo(cboTipoEvaluacion, TipoEvaluacionFacade.getInstance().listarTodosTipoEvaluacion());
        listaEvaluacionesWeb = EvaluacionWebFacade.getInstance().getTodos();
        cargarTablaEvaluacionWeb(listaEvaluacionesWeb);

//        cargarTablaEvaluacionesWeb(EvaluacionwebFacade.)
    }

    private void buscarProyecto() {
        diagProyectoBusquedaSimple proyectoBusquedaSimple = new diagProyectoBusquedaSimple(null, true);
        proyectoBusquedaSimple.setLocation(Comunes.centrarDialog(proyectoBusquedaSimple));
        proyectoBusquedaSimple.setVisible(true);
        if (proyectoBusquedaSimple.getProyecto() != null) {
            proyecto = proyectoBusquedaSimple.getProyecto();
            taProyecto.setText(proyecto.toString());
        }
    }

    private void buscarEvaluador() {
        diagEvaluadorBusqueda evaluadorEleccion = new diagEvaluadorBusqueda(null, true, usuario);
        evaluadorEleccion.setLocation(Comunes.centrarDialog(evaluadorEleccion));
        evaluadorEleccion.setVisible(true);
        if (evaluadorEleccion.getEvaluador() != null) {
            evaluador = evaluadorEleccion.getEvaluador();
            tfEvaluador.setText(evaluador.toString());
        }

    }

    private void agregarNuevoTipoEvaluacion() {
        diagTipoEvaluacion tipoEvaluacion = new diagTipoEvaluacion(null, true, "Alta");
        tipoEvaluacion.setLocation(Comunes.centrarDialog(tipoEvaluacion));
        tipoEvaluacion.setVisible(true);
        Comunes.cargarJCombo(cboTipoEvaluacion, TipoEvaluacionFacade.getInstance().listarTodosTipoEvaluacion());
    }

    private void aceptar() {
        if (validar()) {
            switch (tipoOperacion) {
                case "Alta":
                    agregarEvalaucionWeb();
                    limpiarCampos();
                    break;
                case "Modificación":
                    modificarEvaluacionWeb();
                    limpiarCampos();
                    break;
            }
        }

    }

    private void agregarEvalaucionWeb() {
        evaluacionWeb = new EvaluacionWeb();
        evaluacionWeb.setEvaluador(evaluador);
        evaluacionWeb.setProyecto(proyecto);
        evaluacionWeb.setTipoEvaluacion((TipoEvaluacion) cboTipoEvaluacion.getSelectedItem());
        evaluacionWeb.setBloquesEvaluados(listaBloquesEvaluados);
        evaluacionWeb.setFinalizado(false);
        evaluacionWeb.setDocumentos(archivos);
        EvaluacionWebFacade.getInstance().alta(evaluacionWeb);
        listaEvaluacionesWeb = EvaluacionWebFacade.getInstance().getTodos();
        cargarTablaEvaluacionWeb(listaEvaluacionesWeb);
    }

    private void modificarEvaluacionWeb() {
        evaluacionWeb.setEvaluador(evaluador);
        evaluacionWeb.setProyecto(proyecto);
        evaluacionWeb.setTipoEvaluacion((TipoEvaluacion) cboTipoEvaluacion.getSelectedItem());
        evaluacionWeb.setBloquesEvaluados(listaBloquesEvaluados);
        evaluacionWeb.setFinalizado(false);
        evaluacionWeb.setDocumentos(archivos);
        EvaluacionWebFacade.getInstance().modificar(evaluacionWeb);
        listaEvaluacionesWeb = EvaluacionWebFacade.getInstance().getTodos();
        cargarTablaEvaluacionWeb(listaEvaluacionesWeb);
    }

    private void cargarTablaEvaluacionWeb(List<EvaluacionWeb> evaluacionWebs) {
        modeloTablaEvaluacionWeb = new ModeloTablaNoEditable();
        cargarEncabezadosTablaEvaluacionWeb(modeloTablaEvaluacionWeb);
        Comunes.configurarTabla(tblEvaluacionWeb);
        try {
            cargarEvaluacionesWeb(evaluacionWebs);
        } catch (Exception ex) {
            Logger.getLogger(diagEvaluacionesWeb.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void cargarEncabezadosTablaEvaluacionWeb(ModeloTablaNoEditable modeloTablaEvaluacionWeb) {
        modeloTablaEvaluacionWeb.addColumn("Id");
        modeloTablaEvaluacionWeb.addColumn("Proyecto");
        modeloTablaEvaluacionWeb.addColumn("Evaluador");
        modeloTablaEvaluacionWeb.addColumn("Tipo de Evaluacion");
        tblEvaluacionWeb.setModel(modeloTablaEvaluacionWeb);
    }

    private void cargarEvaluacionesWeb(List<EvaluacionWeb> evaluacionWebs) {
        try {
            modeloTablaEvaluacionWeb = new ModeloTablaNoEditable();
            cargarEncabezadosTablaEvaluacionWeb(modeloTablaEvaluacionWeb);
            for (EvaluacionWeb evaluacionW : evaluacionWebs) {
                cargarEvaluacionWeb(evaluacionW);
            }
            tblEvaluacionWeb.setModel(modeloTablaEvaluacionWeb);
        } catch (Exception ex) {
            Logger.getLogger(diagEvaluacionesWeb.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void cargarEvaluacionWeb(EvaluacionWeb evaluacionWeb) {

        Object[] fila = new Object[4];
        fila[0] = evaluacionWeb.getId();
        fila[1] = evaluacionWeb.getProyecto();
        fila[2] = evaluacionWeb.getEvaluador();
        fila[3] = evaluacionWeb.getTipoEvaluacion();
        modeloTablaEvaluacionWeb.addRow(fila);
    }

    private void limpiarCampos() {
        tipoOperacion = "Alta";
//        proyecto = null;
//        taProyecto.setText("");
        evaluador = null;
        tfEvaluador.setText("");
        taProyecto.setText("");
        Comunes.cargarJCombo(cboTipoEvaluacion, TipoEvaluacionFacade.getInstance().listarTodosTipoEvaluacion());
        listaBloquesEvaluados = new ArrayList<>();
        Comunes.cargarJList(jlistBloquesEvaluados, listaBloquesEvaluados);
        archivos = new ArrayList<>();
        Comunes.cargarJList(jlistDocumentos, archivos);

    }

    private void limpiarCamposCancelar() {
        tipoOperacion = "Alta";
        proyecto = null;
        taProyecto.setText("");
        evaluador = null;
        tfEvaluador.setText("");
        Comunes.cargarJCombo(cboTipoEvaluacion, TipoEvaluacionFacade.getInstance().listarTodosTipoEvaluacion());
        listaBloquesEvaluados = new ArrayList<>();
        Comunes.cargarJList(jlistBloquesEvaluados, listaBloquesEvaluados);
        archivos = new ArrayList<>();
        Comunes.cargarJList(jlistDocumentos, archivos);
    }

    public void eliminarEvaluacionWeb() {
        if (tblEvaluacionWeb.getSelectedRow() != -1) {
            int i = JOptionPane.showConfirmDialog(null, "¿Desea eliminar la Evaluacion Web?", "Confirmar eliminacion", JOptionPane.YES_NO_OPTION);
            if (i == 0) {
                int selectedRow = tblEvaluacionWeb.getSelectedRow();
                evaluacionWeb = EvaluacionWebFacade.getInstance().buscar((Long) tblEvaluacionWeb.getValueAt(selectedRow, 0));
                if (evaluacionWeb.getBloquesEvaluados().isEmpty()) {
                    EvaluacionWebFacade.getInstance().eliminar(evaluacionWeb);
                    listaEvaluacionesWeb.remove(selectedRow);
                    ((ModeloTablaNoEditable) tblEvaluacionWeb.getModel()).removeRow(selectedRow);
                    limpiarCamposCancelar();
                } else {
                    int m = JOptionPane.showConfirmDialog(null, "Esta Evaluacion Web contiene bloques evaluados, \n desea eliminarla de todos modos?", "Confirmar eliminacion", JOptionPane.YES_NO_OPTION);
                    if (m == 0) {
                        EvaluacionWebFacade.getInstance().eliminar(evaluacionWeb);
                        listaEvaluacionesWeb.remove(selectedRow);
                        ((ModeloTablaNoEditable) tblEvaluacionWeb.getModel()).removeRow(selectedRow);
                        limpiarCamposCancelar();
                    }
                }

            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fila");
        }

    }

    private void cargarEvaluacionWebParaModificar() {
        if (tblEvaluacionWeb.getSelectedRow() != -1) {
            tipoOperacion = "Modificación";
            evaluacionWeb = EvaluacionWebFacade.getInstance().buscar((Long) tblEvaluacionWeb.getValueAt(tblEvaluacionWeb.getSelectedRow(), 0));
            proyecto = evaluacionWeb.getProyecto();
            taProyecto.setText(proyecto.toString());
            evaluador = evaluacionWeb.getEvaluador();
            tfEvaluador.setText(evaluador.toString());
            cboTipoEvaluacion.setSelectedItem(evaluacionWeb.getTipoEvaluacion());
            listaBloquesEvaluados = evaluacionWeb.getBloquesEvaluados();
            Comunes.cargarJList(jlistBloquesEvaluados, listaBloquesEvaluados);
        }
    }

    private boolean validar() {
        if (taProyecto.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un proyecto");
            return false;
        }
        if (tfEvaluador.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un evaluador");
            return false;
        }

        //evaluador.getInvestigador().getDocencias().get(0);
//        if (evaluador.getEvaluaciones().isEmpty()) {
//            JOptionPane.showMessageDialog(null, "El evaluador debe tener cargada docencias");
//            return false;
//        }
//        if (evaluador.getInvestigador().getDocencias().isEmpty()){
//           
//        }
        return true;
    }

    private void AgregarBloqueEvaluado() {
        diagBloqueEvaluado diagBloqueEvaluado = new diagBloqueEvaluado(null, true);
        diagBloqueEvaluado.setLocation(Comunes.centrarDialog(diagBloqueEvaluado));
        diagBloqueEvaluado.setVisible(true);
        if (diagBloqueEvaluado.getBloqueEvaluado() != null) {
            listaBloquesEvaluados.add(diagBloqueEvaluado.getBloqueEvaluado());
            Comunes.cargarJList(jlistBloquesEvaluados, listaBloquesEvaluados);
        }
    }

    private void quitarBloqueEvaluado() {
        if (jlistBloquesEvaluados.getSelectedIndex() != -1) {
            BloqueEvaluadoFacade.getInstance().eliminar((BloqueEvaluado) jlistBloquesEvaluados.getSelectedValue());
            listaBloquesEvaluados.remove((BloqueEvaluado) jlistBloquesEvaluados.getSelectedValue());
            Comunes.cargarJList(jlistBloquesEvaluados, listaBloquesEvaluados);

        }
    }

    private void eliminarTipoEvaluacion() {
        int m = JOptionPane.showConfirmDialog(null, "Desea eliminar el Tipo de Evaluacion Seleccionado?", "Confirmar eliminacion", JOptionPane.YES_NO_OPTION);
        if (m == 0) {
            try {
                TipoEvaluacionFacade.getInstance().eliminar((TipoEvaluacion) cboTipoEvaluacion.getSelectedItem());
                Comunes.cargarJCombo(cboTipoEvaluacion, TipoEvaluacionFacade.getInstance().listarTodosTipoEvaluacion());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "No se puede eliminar, Tipo de Evaluacion esta siendo utilizada \n"
                        + "primero debe eliminar las evaluaciones asociadas");
            }

        }
    }

    private void editarTipoEvaluacion() {
        diagTipoEvaluacion tipoEvaluacion = new diagTipoEvaluacion(null, true, (TipoEvaluacion) cboTipoEvaluacion.getSelectedItem(), "Modificación");
        tipoEvaluacion.setLocation(Comunes.centrarDialog(tipoEvaluacion));
        tipoEvaluacion.setVisible(true);
        Comunes.cargarJCombo(cboTipoEvaluacion, TipoEvaluacionFacade.getInstance().listarTodosTipoEvaluacion());
    }

    private void adjuntarArchivo() {
        diagResolucionEleccion resolucionEleccion = new diagResolucionEleccion(null, true);
        resolucionEleccion.setLocation(Comunes.centrarDialog(resolucionEleccion));
        resolucionEleccion.setVisible(true);
        if (resolucionEleccion.getResolucion() != null) {
            archivos.add(resolucionEleccion.getResolucion());
            Comunes.cargarJList(jlistDocumentos, archivos);
        }
    }

    private void eliminarArchivo() {

        if (jlistDocumentos.getSelectedIndex() != -1) {
            archivos.remove((Resolucion) jlistDocumentos.getSelectedValue());
            //proyecto.getResoluciones().remove((Resolucion) jlistDocumentos.getSelectedValue());
            Comunes.cargarJList(jlistDocumentos, archivos);

        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un documento de la lista \n"
                    + "para poder eliminarlo");
        }

    }

}
