/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.proyectos.resultado;

import entidades.operaciones.Operacion;
import entidades.persona.investigador.Investigador;
import entidades.proyecto.Proyecto;
import entidades.proyecto.resultado.Intelectual;
import entidades.proyecto.resultado.Propiedad;
import entidades.proyecto.resultado.TipoRegistroIntelectual;
import entidades.proyecto.vinculacion.ProyectoVinculacion;
import entidades.usuario.Usuario;
import facade.InvestigadorFacade;
import facade.OperacionFacade;
import facade.PropiedadFacade;
import facade.ProyectoFacade;
import facade.ProyectoVinculacionFacade;
import includes.Comunes;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author hugo
 */
public class diagProyectoResultadoPIntelectual extends javax.swing.JDialog {
    
    private String tipoOperacion;
    private Usuario usuario;
    private Proyecto proyectoPIntelectual;
    
    private ProyectoVinculacion proyectoVinculacionPIntelectual;
    private Intelectual pIntelectual;
    private List<Investigador> participantesDentroPIntelectual = new ArrayList<Investigador>();

    /**
     * Creates new form dialogProyectoResultadoPIntelectual
     */
    public diagProyectoResultadoPIntelectual(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public diagProyectoResultadoPIntelectual(java.awt.Frame parent, boolean modal, String tipoOperacion, Usuario usuario) {
        super(parent, modal);
        this.tipoOperacion = tipoOperacion;
        this.usuario = usuario;
        initComponents();
        inicializarComponentes();
        btnBuscarProyectoPIntelectual.setVisible(true);
    }
    
    public diagProyectoResultadoPIntelectual(java.awt.Frame parent, boolean modal, String tipoOperacion, Proyecto proyecto, Usuario usuario) {
        super(parent, modal);
        this.tipoOperacion = tipoOperacion;
        this.usuario = usuario;
        this.proyectoPIntelectual = proyecto;
        initComponents();
        inicializarComponentes();
        btnBuscarProyectoPIntelectual.setVisible(false);
                taProyectoPIntelectual.setText(proyectoPIntelectual.toString());

    }
    
    public diagProyectoResultadoPIntelectual(java.awt.Frame parent, boolean modal, String tipoOperacion, Proyecto proyecto, Intelectual intelectual, Usuario usuario) {
        super(parent, modal);
        this.tipoOperacion = tipoOperacion;
        this.usuario = usuario;
        this.proyectoPIntelectual = proyecto;
        this.pIntelectual = intelectual;
        initComponents();
        inicializarComponentes();
        btnBuscarProyectoPIntelectual.setVisible(false);
                taProyectoPIntelectual.setText(proyectoPIntelectual.toString());

    }
        public diagProyectoResultadoPIntelectual(java.awt.Frame parent, boolean modal, String tipoOperacion, ProyectoVinculacion proyectoVinculacion, Usuario usuario) {
        super(parent, modal);
        this.tipoOperacion = tipoOperacion;
        this.usuario = usuario;
        this.proyectoVinculacionPIntelectual = proyectoVinculacion;
        initComponents();
        inicializarComponentes();
        btnBuscarProyectoPIntelectual.setVisible(false);
                taProyectoPIntelectual.setText(proyectoVinculacionPIntelectual.toString());

    }
    
    public diagProyectoResultadoPIntelectual(java.awt.Frame parent, boolean modal, String tipoOperacion, ProyectoVinculacion proyectoVinculacion, Intelectual intelectual, Usuario usuario) {
        super(parent, modal);
        this.tipoOperacion = tipoOperacion;
        this.usuario = usuario;
        this.proyectoVinculacionPIntelectual = proyectoVinculacion;
        this.pIntelectual = intelectual;
        initComponents();
        inicializarComponentes();
        btnBuscarProyectoPIntelectual.setVisible(false);
                taProyectoPIntelectual.setText(proyectoVinculacionPIntelectual.toString());

    }
    
    
    public Intelectual getpIntelectual() {
        return pIntelectual;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taProyectoPIntelectual = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        btnBuscarProyectoPIntelectual = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        tfTituloPIntelectual = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        cboTipoRegistro = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        tfTitularesRegistro = new javax.swing.JTextField();
        jPanelAsesores2 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        lstIntegrantesDentroPIntelectual = new javax.swing.JList();
        btnAgregarIntegrantePIntelectual = new javax.swing.JButton();
        btnQuitarIntegrantePIntelectual = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        lstIntegrantesFueraPIntelectual = new javax.swing.JList();
        jLabel15 = new javax.swing.JLabel();
        tfBuscarIntegrantePIntelectual = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfNroRegistro = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jxdpFecha = new org.jdesktop.swingx.JXDatePicker();
        jLabel6 = new javax.swing.JLabel();
        tfPais = new javax.swing.JTextField();
        btnAceptar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagProyectoResultadoPIntelectual.class, "diagProyectoResultadoPIntelectual.jPanel1.border.title"))); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        taProyectoPIntelectual.setColumns(20);
        taProyectoPIntelectual.setEditable(false);
        taProyectoPIntelectual.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        taProyectoPIntelectual.setRows(5);
        jScrollPane1.setViewportView(taProyectoPIntelectual);

        jLabel1.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultadoPIntelectual.class, "diagProyectoResultadoPIntelectual.jLabel1.text")); // NOI18N

        btnBuscarProyectoPIntelectual.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultadoPIntelectual.class, "diagProyectoResultadoPIntelectual.btnBuscarProyectoPIntelectual.text")); // NOI18N
        btnBuscarProyectoPIntelectual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProyectoPIntelectualActionPerformed(evt);
            }
        });

        jLabel3.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultadoPIntelectual.class, "diagProyectoResultadoPIntelectual.jLabel3.text")); // NOI18N

        tfTituloPIntelectual.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultadoPIntelectual.class, "diagProyectoResultadoPIntelectual.tfTituloPIntelectual.text")); // NOI18N

        jLabel23.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultadoPIntelectual.class, "diagProyectoResultadoPIntelectual.jLabel23.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultadoPIntelectual.class, "diagProyectoResultadoPIntelectual.jLabel2.text")); // NOI18N

        tfTitularesRegistro.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultadoPIntelectual.class, "diagProyectoResultadoPIntelectual.tfTitularesRegistro.text")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfTituloPIntelectual)
                            .addComponent(cboTipoRegistro, 0, 480, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(3, 3, 3)
                        .addComponent(tfTitularesRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBuscarProyectoPIntelectual, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarProyectoPIntelectual))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfTituloPIntelectual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(cboTipoRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfTitularesRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanelAsesores2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), org.openide.util.NbBundle.getMessage(diagProyectoResultadoPIntelectual.class, "diagProyectoResultadoPIntelectual.jPanelAsesores2.border.title"))); // NOI18N

        jScrollPane7.setViewportView(lstIntegrantesDentroPIntelectual);

        btnAgregarIntegrantePIntelectual.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultadoPIntelectual.class, "diagProyectoResultadoPIntelectual.btnAgregarIntegrantePIntelectual.text")); // NOI18N
        btnAgregarIntegrantePIntelectual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarIntegrantePIntelectualActionPerformed(evt);
            }
        });

        btnQuitarIntegrantePIntelectual.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultadoPIntelectual.class, "diagProyectoResultadoPIntelectual.btnQuitarIntegrantePIntelectual.text")); // NOI18N
        btnQuitarIntegrantePIntelectual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarIntegrantePIntelectualActionPerformed(evt);
            }
        });

        jScrollPane8.setViewportView(lstIntegrantesFueraPIntelectual);

        jLabel15.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultadoPIntelectual.class, "diagProyectoResultadoPIntelectual.jLabel15.text")); // NOI18N

        tfBuscarIntegrantePIntelectual.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultadoPIntelectual.class, "diagProyectoResultadoPIntelectual.tfBuscarIntegrantePIntelectual.text")); // NOI18N
        tfBuscarIntegrantePIntelectual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfBuscarIntegrantePIntelectualKeyPressed(evt);
            }
        });

        jLabel16.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultadoPIntelectual.class, "diagProyectoResultadoPIntelectual.jLabel16.text")); // NOI18N

        jLabel17.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultadoPIntelectual.class, "diagProyectoResultadoPIntelectual.jLabel17.text")); // NOI18N

        javax.swing.GroupLayout jPanelAsesores2Layout = new javax.swing.GroupLayout(jPanelAsesores2);
        jPanelAsesores2.setLayout(jPanelAsesores2Layout);
        jPanelAsesores2Layout.setHorizontalGroup(
            jPanelAsesores2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAsesores2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelAsesores2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelAsesores2Layout.createSequentialGroup()
                        .addGroup(jPanelAsesores2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelAsesores2Layout.createSequentialGroup()
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addGroup(jPanelAsesores2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnAgregarIntegrantePIntelectual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnQuitarIntegrantePIntelectual, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAsesores2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel15)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(jPanelAsesores2Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(352, 352, 352)))
                .addGroup(jPanelAsesores2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel17)
                    .addComponent(tfBuscarIntegrantePIntelectual)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelAsesores2Layout.setVerticalGroup(
            jPanelAsesores2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAsesores2Layout.createSequentialGroup()
                .addGroup(jPanelAsesores2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelAsesores2Layout.createSequentialGroup()
                        .addGroup(jPanelAsesores2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(tfBuscarIntegrantePIntelectual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelAsesores2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelAsesores2Layout.createSequentialGroup()
                                .addComponent(btnAgregarIntegrantePIntelectual)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnQuitarIntegrantePIntelectual))
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelAsesores2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel4.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultadoPIntelectual.class, "diagProyectoResultadoPIntelectual.jLabel4.text")); // NOI18N

        tfNroRegistro.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultadoPIntelectual.class, "diagProyectoResultadoPIntelectual.tfNroRegistro.text")); // NOI18N

        jLabel5.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultadoPIntelectual.class, "diagProyectoResultadoPIntelectual.jLabel5.text")); // NOI18N

        jxdpFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jxdpFechaActionPerformed(evt);
            }
        });

        jLabel6.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultadoPIntelectual.class, "diagProyectoResultadoPIntelectual.jLabel6.text")); // NOI18N

        tfPais.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultadoPIntelectual.class, "diagProyectoResultadoPIntelectual.tfPais.text")); // NOI18N

        btnAceptar.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultadoPIntelectual.class, "diagProyectoResultadoPIntelectual.btnAceptar.text")); // NOI18N
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelAsesores2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(2, 2, 2)
                                        .addComponent(tfNroRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(28, 28, 28)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jxdpFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(46, 46, 46)
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfPais, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(311, 311, 311)
                        .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelAsesores2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfNroRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jxdpFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(tfPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAceptar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarProyectoPIntelectualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProyectoPIntelectualActionPerformed
   }//GEN-LAST:event_btnBuscarProyectoPIntelectualActionPerformed
    
    private void btnAgregarIntegrantePIntelectualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarIntegrantePIntelectualActionPerformed
        agregarIntegrantePIntelectual();
    }//GEN-LAST:event_btnAgregarIntegrantePIntelectualActionPerformed
    
    private void btnQuitarIntegrantePIntelectualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarIntegrantePIntelectualActionPerformed
        quitarIntegrantePIntelectual();
    }//GEN-LAST:event_btnQuitarIntegrantePIntelectualActionPerformed
    
    private void tfBuscarIntegrantePIntelectualKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfBuscarIntegrantePIntelectualKeyPressed
        buscarIntegrantePIntelectual();
    }//GEN-LAST:event_tfBuscarIntegrantePIntelectualKeyPressed
    
    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        aceptar();
    }//GEN-LAST:event_btnAceptarActionPerformed
    
    private void jxdpFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jxdpFechaActionPerformed
        Comunes.validarjxdatepicker(jxdpFecha);
    }//GEN-LAST:event_jxdpFechaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(diagProyectoResultadoPIntelectual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(diagProyectoResultadoPIntelectual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(diagProyectoResultadoPIntelectual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(diagProyectoResultadoPIntelectual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            public void run() {
                diagProyectoResultadoPIntelectual dialog = new diagProyectoResultadoPIntelectual(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnAgregarIntegrantePIntelectual;
    private javax.swing.JButton btnBuscarProyectoPIntelectual;
    private javax.swing.JButton btnQuitarIntegrantePIntelectual;
    private javax.swing.JComboBox cboTipoRegistro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelAsesores2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private org.jdesktop.swingx.JXDatePicker jxdpFecha;
    private javax.swing.JList lstIntegrantesDentroPIntelectual;
    private javax.swing.JList lstIntegrantesFueraPIntelectual;
    private javax.swing.JTextArea taProyectoPIntelectual;
    private javax.swing.JTextField tfBuscarIntegrantePIntelectual;
    private javax.swing.JTextField tfNroRegistro;
    private javax.swing.JTextField tfPais;
    private javax.swing.JTextField tfTitularesRegistro;
    private javax.swing.JTextField tfTituloPIntelectual;
    // End of variables declaration//GEN-END:variables

    private void inicializarComponentes() {
        Comunes.formatearJXdatePicker(jxdpFecha);
        Comunes.autoAjusteTextArea(taProyectoPIntelectual);
        cboTipoRegistro.setModel(new javax.swing.DefaultComboBoxModel(TipoRegistroIntelectual.values()));
        switch (tipoOperacion) {
            case "Alta":
                cargarIntegrantesProyecto();
                break;
            case "Modificación":
                tfTituloPIntelectual.setText(pIntelectual.getTitulo());
                cboTipoRegistro.setSelectedItem(pIntelectual.getTipoRegistroIntelectual());
                tfTitularesRegistro.setText(pIntelectual.getTitulares());
                cargarIntegrantesPIntelectual();
                tfNroRegistro.setText(pIntelectual.getNroRegistro());
                try{
                    jxdpFecha.setDate(pIntelectual.getFecha());
                }catch(Exception ex){
                    
                }
                
                tfPais.setText(pIntelectual.getPais());
                break;
        }
    }
    
    private void cargarIntegrantesProyecto() {
        List<Investigador> lista = new ArrayList<Investigador>();
        if(proyectoPIntelectual != null){
            lista =         ProyectoFacade.getInstance().getTodosIntegrantes(proyectoPIntelectual);
        
        }
        if(proyectoVinculacionPIntelectual != null){
            lista = ProyectoVinculacionFacade.getInstance().getTodosIntegrantes(proyectoVinculacionPIntelectual);
        }
        for (Object objeto : lista) {
            participantesDentroPIntelectual.add((Investigador) objeto);
        }
        Comunes.cargarJList(lstIntegrantesDentroPIntelectual, participantesDentroPIntelectual);
        List<Investigador> participanteFueraPIntelectual = InvestigadorFacade.getInstance().getTodosInvestigador();
        participanteFueraPIntelectual.removeAll(participantesDentroPIntelectual);
        Comunes.cargarJList(lstIntegrantesFueraPIntelectual, participanteFueraPIntelectual);
    }
    
    private void cargarIntegrantesPIntelectual() {
        participantesDentroPIntelectual = pIntelectual.getInvestigadores();
        Comunes.cargarJList(lstIntegrantesDentroPIntelectual, participantesDentroPIntelectual);
        List<Investigador> participanteFueraPIntelectual = InvestigadorFacade.getInstance().getTodosInvestigador();
        participanteFueraPIntelectual.removeAll(participantesDentroPIntelectual);
        Comunes.cargarJList(lstIntegrantesFueraPIntelectual, participanteFueraPIntelectual);
    }
    
    private void buscarIntegrantePIntelectual() {
    }
    
    private void agregarIntegrantePIntelectual() {
        if (lstIntegrantesFueraPIntelectual.getSelectedIndex() != -1) {
            
            participantesDentroPIntelectual.add((Investigador) lstIntegrantesFueraPIntelectual.getSelectedValue());
            List<Investigador> participantesFuera = InvestigadorFacade.getInstance().getTodosInvestigador();
            participantesFuera.removeAll(participantesDentroPIntelectual);
            Comunes.cargarJList(lstIntegrantesFueraPIntelectual, participantesFuera);
            
            Comunes.cargarJList(lstIntegrantesDentroPIntelectual, participantesDentroPIntelectual);
            
        } else {
            JOptionPane.showMessageDialog(rootPane, "Debe escoger un Integrante", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void quitarIntegrantePIntelectual() {
        if (lstIntegrantesDentroPIntelectual.getSelectedIndex() != -1) {
            
            participantesDentroPIntelectual.remove((Investigador) lstIntegrantesDentroPIntelectual.getSelectedValue());
            List<Investigador> participantesFuera = InvestigadorFacade.getInstance().getTodosInvestigador();
            participantesFuera.removeAll(participantesDentroPIntelectual);
            Comunes.cargarJList(lstIntegrantesFueraPIntelectual, participantesFuera);
            
            Comunes.cargarJList(lstIntegrantesDentroPIntelectual, participantesDentroPIntelectual);
            
        }
    }
    
    private void aceptar() {
        if (validar()) {
            if (tipoOperacion.equals("Alta")) {
                pIntelectual = new Intelectual();
               
                if(proyectoPIntelectual != null){
                List<Proyecto> proyecto = new ArrayList<Proyecto>();
                proyecto.add(proyectoPIntelectual);
                pIntelectual.setProyectos(proyecto);
                    
                }
                if(proyectoVinculacionPIntelectual != null){
                    List<ProyectoVinculacion> proyectoVinculacion = new ArrayList<ProyectoVinculacion>();
                proyectoVinculacion.add(proyectoVinculacionPIntelectual);
                pIntelectual.setProyectosVinculacion(proyectoVinculacion);
                
                }
                if (!tfTituloPIntelectual.getText().equals("")) {
                    pIntelectual.setTitulo(tfTituloPIntelectual.getText());
                } else {
                    pIntelectual.setTitulo(null);
                }
                pIntelectual.setTipoRegistroIntelectual((TipoRegistroIntelectual) cboTipoRegistro.getSelectedItem());
                if (!tfTitularesRegistro.getText().equals("")) {
                    pIntelectual.setTitulares(tfTitularesRegistro.getText());
                } else {
                    pIntelectual.setTitulares(null);
                }
                if (participantesDentroPIntelectual.size() > 0) {
                    pIntelectual.setInvestigadores(participantesDentroPIntelectual);
                } else {
                    pIntelectual.setInvestigadores(null);
                }
                if (!tfNroRegistro.getText().equals("")) {
                    pIntelectual.setNroRegistro(tfNroRegistro.getText());
                } else {
                    pIntelectual.setNroRegistro(null);
                }
                pIntelectual.setFecha(jxdpFecha.getDate());
                if (!tfPais.getText().equals("")) {
                    pIntelectual.setPais(tfPais.getText());
                } else {
                    pIntelectual.setPais(null);
                }
                PropiedadFacade.getInstance().alta(pIntelectual);
                Operacion operacion = new Operacion();
                operacion.setUsuario(usuario);
                operacion.setOperacion("Alta de Propiedad intelectual");
                operacion.setFecha(Comunes.obtenerFechaActualDesdeDB());
                OperacionFacade.getInstance().alta(operacion);
                
                JOptionPane.showMessageDialog(null, "Propiedad intelectual agregada");
                this.dispose();
            } else if (tipoOperacion.equals("Modificación")) {
                
                if (!tfTituloPIntelectual.getText().equals("")) {
                    pIntelectual.setTitulo(tfTituloPIntelectual.getText());
                } else {
                    pIntelectual.setTitulo(null);
                }
                pIntelectual.setTipoRegistroIntelectual((TipoRegistroIntelectual) cboTipoRegistro.getSelectedItem());
                if (!tfTitularesRegistro.getText().equals("")) {
                    pIntelectual.setTitulares(tfTitularesRegistro.getText());
                } else {
                    pIntelectual.setTitulares(null);
                }
                if (participantesDentroPIntelectual.size() > 0) {
                    pIntelectual.setInvestigadores(participantesDentroPIntelectual);
                } else {
                    pIntelectual.setInvestigadores(null);
                }
                if (!tfNroRegistro.getText().equals("")) {
                    pIntelectual.setNroRegistro(tfNroRegistro.getText());
                } else {
                    pIntelectual.setNroRegistro(null);
                }
                pIntelectual.setFecha(jxdpFecha.getDate());
                if (!tfPais.getText().equals("")) {
                    pIntelectual.setPais(tfPais.getText());
                } else {
                    pIntelectual.setPais(null);
                }
                try {
                    PropiedadFacade.getInstance().modificar(pIntelectual);

                    /*
                     * Operacion operacion = new Operacion();
                     * operacion.setUsuario(usuario);
                     * operacion.setOperacion("Modificación de Propiedad
                     * intelectual");
                     * operacion.setFecha(Comunes.obtenerFechaActualDesdeDB());
                    OperacionFacade.getInstance().alta(operacion);
                     */
                    
                    JOptionPane.showMessageDialog(null, "Propiedad intelectual modificada");
                    
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Error Modificando Propiedad intelectual\n " + ex);
                }
                this.dispose();
            }
            
        }
    }
    
    private boolean validar() {
        boolean flag = false;
        if (proyectoPIntelectual != null || proyectoVinculacionPIntelectual != null) {
            if (!tfTituloPIntelectual.getText().isEmpty()) {
                if (!participantesDentroPIntelectual.isEmpty()) {
                    flag = true;
                } else {
                    JOptionPane.showMessageDialog(null, "Debe seleccionar algun integrante");
                }
                
            } else {
                JOptionPane.showMessageDialog(null, "Debe poseer un titulo");
                tfTituloPIntelectual.requestFocus();
            }
        }
        return flag;
    }
}
