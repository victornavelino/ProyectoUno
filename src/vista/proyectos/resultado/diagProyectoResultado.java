/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.proyectos.resultado;

import controladores.exceptions.NonexistentEntityException;
import entidades.persona.investigador.Investigador;
import entidades.proyecto.Participacion;
import entidades.proyecto.Proyecto;
import entidades.proyecto.resultado.*;
import entidades.usuario.Usuario;
import facade.*;
import includes.Comunes;
import includes.ModeloTablaNoEditable;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JViewport;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import vista.diagProyectoBusquedaSimple;

/**
 *
 * @author franco
 */
public class diagProyectoResultado extends javax.swing.JDialog {

    ModeloTablaNoEditable modeloTablaLibros = new ModeloTablaNoEditable();
    ModeloTablaNoEditable modeloTablaCapitulos = new ModeloTablaNoEditable();
    ModeloTablaNoEditable modeloTablaArticuloRevista = new ModeloTablaNoEditable();
    ModeloTablaNoEditable modeloTablaCongreso = new ModeloTablaNoEditable();
    ModeloTablaNoEditable modeloTablaContrato = new ModeloTablaNoEditable();
    ModeloTablaNoEditable modeloTablaPIntelectual = new ModeloTablaNoEditable();  
    ModeloTablaNoEditable modeloTablaPIndustrial = new ModeloTablaNoEditable();
    ModeloTablaNoEditable modeloTablaFormacionRRHH = new ModeloTablaNoEditable();
    private String tipoOperacion;
    private Usuario usuario;
    private Congreso congreso;
    private Contrato contrato;
    private Intelectual pIntelectual;
    private Industrial pIndustrial;
    private Proyecto proyecto;
    private Libro libro;
    private CapituloLibro capituloLibro;
    private ArticuloRevista articuloRevista;
    private FormacionRRHH formacionRRHH;

    /**
     * Creates new form diagProyectoResultado
     */
    public diagProyectoResultado(java.awt.Frame parent, boolean modal, Usuario usuario) {
        super(parent, modal);
        this.tipoOperacion = tipoOperacion;
        this.usuario = usuario;
        initComponents();
        inicializarComponentes();
    }
    
    // constructor para ver los RRHH desde Becas
    public diagProyectoResultado(java.awt.Frame parent, boolean modal, Usuario usuario, Proyecto proyecto) {
        super(parent, modal);
        this.tipoOperacion = tipoOperacion;
        this.usuario = usuario;
        this.proyecto=proyecto;
        initComponents();
        inicializarComponentes();
        taProyecto.setText(proyecto.toString());
        cargarLibros();
        cargarCapitulos();
        cargarArticulosRevistas();
        cargarCongresos();
        cargarContratos();
        cargarPIndustriales();
        cargarPIntelectuales();
        cargarFormacionRRHH();
        //le damos el foco al panel de RRHH
        tabResultados.setSelectedComponent(this.jPanel7);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabResultados = new javax.swing.JTabbedPane();
        pnLibros = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblLibros = new javax.swing.JTable();
        btAgregarLibro = new javax.swing.JButton();
        btModificarLibro = new javax.swing.JButton();
        btEliminar = new javax.swing.JButton();
        pnCapitulos = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblCapitulos = new javax.swing.JTable();
        btAgregarCapitulo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminarCapitulo = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblArticulosRevistas = new javax.swing.JTable();
        btAgregarArticuloRevista = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        btnEliminarArticulo = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btAgregarCongreso = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblCongresos = new javax.swing.JTable();
        btnEditarCongreso = new javax.swing.JButton();
        btnEliminarCongreso = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btAgregarContrato = new javax.swing.JButton();
        btnEditarContrato = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        tblContratos = new javax.swing.JTable();
        btnEliminarContrato = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        tblPIntelectual = new javax.swing.JTable();
        btAgregarPIntelectual = new javax.swing.JButton();
        btnEditarPIntelectual = new javax.swing.JButton();
        btnEliminarPIntelectual = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane14 = new javax.swing.JScrollPane();
        tblPIndustrial = new javax.swing.JTable();
        btAgregarPIndustrial = new javax.swing.JButton();
        btnEditarPIndustrial = new javax.swing.JButton();
        btnEliminarPIndustrial = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane15 = new javax.swing.JScrollPane();
        tblFormacionRRHH = new javax.swing.JTable();
        btAgregarFormacionRRHH = new javax.swing.JButton();
        btnEditarFormacionRRH = new javax.swing.JButton();
        btnEliminarFormacionRRHH = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        taProyecto = new javax.swing.JTextArea();
        btnBuscarProyecto = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblLibros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblLibros);

        btAgregarLibro.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.btAgregarLibro.text")); // NOI18N
        btAgregarLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAgregarLibroActionPerformed(evt);
            }
        });

        btModificarLibro.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.btModificarLibro.text")); // NOI18N
        btModificarLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btModificarLibroActionPerformed(evt);
            }
        });

        btEliminar.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.btEliminar.text")); // NOI18N
        btEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnLibrosLayout = new javax.swing.GroupLayout(pnLibros);
        pnLibros.setLayout(pnLibrosLayout);
        pnLibrosLayout.setHorizontalGroup(
            pnLibrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnLibrosLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(pnLibrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btModificarLibro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btAgregarLibro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        pnLibrosLayout.setVerticalGroup(
            pnLibrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnLibrosLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(pnLibrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnLibrosLayout.createSequentialGroup()
                        .addComponent(btAgregarLibro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btModificarLibro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btEliminar))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(97, Short.MAX_VALUE))
        );

        tabResultados.addTab(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.pnLibros.TabConstraints.tabTitle"), pnLibros); // NOI18N

        tblCapitulos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(tblCapitulos);

        btAgregarCapitulo.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.btAgregarCapitulo.text")); // NOI18N
        btAgregarCapitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAgregarCapituloActionPerformed(evt);
            }
        });

        btnEditar.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.btnEditar.text")); // NOI18N
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminarCapitulo.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.btnEliminarCapitulo.text")); // NOI18N
        btnEliminarCapitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCapituloActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnCapitulosLayout = new javax.swing.GroupLayout(pnCapitulos);
        pnCapitulos.setLayout(pnCapitulosLayout);
        pnCapitulosLayout.setHorizontalGroup(
            pnCapitulosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCapitulosLayout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnCapitulosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btAgregarCapitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminarCapitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnCapitulosLayout.setVerticalGroup(
            pnCapitulosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCapitulosLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(pnCapitulosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnCapitulosLayout.createSequentialGroup()
                        .addComponent(btAgregarCapitulo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarCapitulo))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(104, Short.MAX_VALUE))
        );

        tabResultados.addTab(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.pnCapitulos.TabConstraints.tabTitle"), pnCapitulos); // NOI18N

        tblArticulosRevistas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(tblArticulosRevistas);

        btAgregarArticuloRevista.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.btAgregarArticuloRevista.text")); // NOI18N
        btAgregarArticuloRevista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAgregarArticuloRevistaActionPerformed(evt);
            }
        });

        jButton8.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.jButton8.text")); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        btnEliminarArticulo.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.btnEliminarArticulo.text")); // NOI18N
        btnEliminarArticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarArticuloActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btAgregarArticuloRevista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminarArticulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btAgregarArticuloRevista)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarArticulo))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(114, Short.MAX_VALUE))
        );

        tabResultados.addTab(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        btAgregarCongreso.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.btAgregarCongreso.text")); // NOI18N
        btAgregarCongreso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAgregarCongresoActionPerformed(evt);
            }
        });

        tblCongresos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane8.setViewportView(tblCongresos);

        btnEditarCongreso.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.btnEditarCongreso.text")); // NOI18N
        btnEditarCongreso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarCongresoActionPerformed(evt);
            }
        });

        btnEliminarCongreso.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.btnEliminarCongreso.text")); // NOI18N
        btnEliminarCongreso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCongresoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnEditarCongreso, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                    .addComponent(btAgregarCongreso, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminarCongreso, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btAgregarCongreso)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditarCongreso)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEliminarCongreso))
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(110, Short.MAX_VALUE))
        );

        tabResultados.addTab(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        btAgregarContrato.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.btAgregarContrato.text")); // NOI18N
        btAgregarContrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAgregarContratoActionPerformed(evt);
            }
        });

        btnEditarContrato.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.btnEditarContrato.text")); // NOI18N
        btnEditarContrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarContratoActionPerformed(evt);
            }
        });

        tblContratos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane10.setViewportView(tblContratos);

        btnEliminarContrato.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.btnEliminarContrato.text")); // NOI18N
        btnEliminarContrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarContratoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEditarContrato, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btAgregarContrato, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                    .addComponent(btnEliminarContrato, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btAgregarContrato)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditarContrato)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarContrato))
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(116, Short.MAX_VALUE))
        );

        tabResultados.addTab(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        tblPIntelectual.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane12.setViewportView(tblPIntelectual);

        btAgregarPIntelectual.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.btAgregarPIntelectual.text")); // NOI18N
        btAgregarPIntelectual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAgregarPIntelectualActionPerformed(evt);
            }
        });

        btnEditarPIntelectual.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.btnEditarPIntelectual.text")); // NOI18N
        btnEditarPIntelectual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarPIntelectualActionPerformed(evt);
            }
        });

        btnEliminarPIntelectual.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.btnEliminarPIntelectual.text")); // NOI18N
        btnEliminarPIntelectual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarPIntelectualActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEliminarPIntelectual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btAgregarPIntelectual, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                    .addComponent(btnEditarPIntelectual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btAgregarPIntelectual)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditarPIntelectual)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarPIntelectual))
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(111, Short.MAX_VALUE))
        );

        tabResultados.addTab(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.jPanel4.TabConstraints.tabTitle"), jPanel4); // NOI18N

        tblPIndustrial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane14.setViewportView(tblPIndustrial);

        btAgregarPIndustrial.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.btAgregarPIndustrial.text")); // NOI18N
        btAgregarPIndustrial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAgregarPIndustrialActionPerformed(evt);
            }
        });

        btnEditarPIndustrial.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.btnEditarPIndustrial.text")); // NOI18N
        btnEditarPIndustrial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarPIndustrialActionPerformed(evt);
            }
        });

        btnEliminarPIndustrial.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.btnEliminarPIndustrial.text")); // NOI18N
        btnEliminarPIndustrial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarPIndustrialActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEliminarPIndustrial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEditarPIndustrial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btAgregarPIndustrial, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(btAgregarPIndustrial)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditarPIndustrial)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarPIndustrial))
                    .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(108, Short.MAX_VALUE))
        );

        tabResultados.addTab(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.jPanel5.TabConstraints.tabTitle"), jPanel5); // NOI18N

        tblFormacionRRHH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane15.setViewportView(tblFormacionRRHH);

        btAgregarFormacionRRHH.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.btAgregarFormacionRRHH.text")); // NOI18N
        btAgregarFormacionRRHH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAgregarFormacionRRHHActionPerformed(evt);
            }
        });

        btnEditarFormacionRRH.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.btnEditarFormacionRRH.text")); // NOI18N
        btnEditarFormacionRRH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarFormacionRRHActionPerformed(evt);
            }
        });

        btnEliminarFormacionRRHH.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.btnEliminarFormacionRRHH.text")); // NOI18N
        btnEliminarFormacionRRHH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarFormacionRRHHActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEliminarFormacionRRHH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEditarFormacionRRH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btAgregarFormacionRRHH, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(btAgregarFormacionRRHH)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditarFormacionRRH)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarFormacionRRHH))
                    .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(108, Short.MAX_VALUE))
        );

        tabResultados.addTab(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.jPanel7.TabConstraints.tabTitle"), jPanel7); // NOI18N

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.jPanel6.border.title"))); // NOI18N

        jLabel3.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.jLabel3.text")); // NOI18N

        taProyecto.setEditable(false);
        taProyecto.setColumns(20);
        taProyecto.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        taProyecto.setRows(5);
        jScrollPane5.setViewportView(taProyecto);

        btnBuscarProyecto.setText(org.openide.util.NbBundle.getMessage(diagProyectoResultado.class, "diagProyectoResultado.btnBuscarProyecto.text")); // NOI18N
        btnBuscarProyecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProyectoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscarProyecto)
                .addGap(32, 32, 32))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarProyecto, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabResultados, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tabResultados, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btAgregarLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAgregarLibroActionPerformed
        agregarLibro();
    }//GEN-LAST:event_btAgregarLibroActionPerformed

    private void btAgregarCapituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAgregarCapituloActionPerformed
        agregarCapitulo();

    }//GEN-LAST:event_btAgregarCapituloActionPerformed

    private void btnBuscarProyectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProyectoActionPerformed
        inicializarComponentes();
        buscarProyecto();
        cargarLibros();
        cargarCapitulos();
        cargarArticulosRevistas();
        cargarCongresos();
        cargarContratos();
        cargarPIndustriales();
        cargarPIntelectuales();
        cargarFormacionRRHH();
    }//GEN-LAST:event_btnBuscarProyectoActionPerformed

    private void btAgregarArticuloRevistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAgregarArticuloRevistaActionPerformed
        agregarArticuloRevista();
    }//GEN-LAST:event_btAgregarArticuloRevistaActionPerformed

    private void btAgregarCongresoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAgregarCongresoActionPerformed
        agregarCongreso();
    }//GEN-LAST:event_btAgregarCongresoActionPerformed

    private void btnEditarCongresoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarCongresoActionPerformed
        editarCongreso();

    }//GEN-LAST:event_btnEditarCongresoActionPerformed

    private void btAgregarContratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAgregarContratoActionPerformed
        agregarContrato();
    }//GEN-LAST:event_btAgregarContratoActionPerformed

    private void btnEditarContratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarContratoActionPerformed
        editarContrato();

    }//GEN-LAST:event_btnEditarContratoActionPerformed

    private void btAgregarPIntelectualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAgregarPIntelectualActionPerformed
        agregarPIntelectual();
    }//GEN-LAST:event_btAgregarPIntelectualActionPerformed

    private void btnEditarPIntelectualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarPIntelectualActionPerformed
        editarPintelectual();
        cargarPIntelectuales();
    }//GEN-LAST:event_btnEditarPIntelectualActionPerformed

    private void btAgregarPIndustrialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAgregarPIndustrialActionPerformed
        agregarPIndustrial();
    }//GEN-LAST:event_btAgregarPIndustrialActionPerformed

    private void btnEditarPIndustrialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarPIndustrialActionPerformed
        editarPIndustrial();

    }//GEN-LAST:event_btnEditarPIndustrialActionPerformed

    private void btModificarLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btModificarLibroActionPerformed
        editarLibro();



    }//GEN-LAST:event_btModificarLibroActionPerformed

    private void btEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEliminarActionPerformed
        eliminarRegistroLibro();


    }//GEN-LAST:event_btEliminarActionPerformed

    private void btnEliminarCapituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarCapituloActionPerformed
        eliminarRegistro(tblCapitulos);
    }//GEN-LAST:event_btnEliminarCapituloActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        editarRegistroCapitulo();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarArticuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarArticuloActionPerformed
        eliminarRegistro(tblArticulosRevistas);
    }//GEN-LAST:event_btnEliminarArticuloActionPerformed

    private void btnEliminarCongresoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarCongresoActionPerformed
        eliminarRegistro(tblCongresos);
    }//GEN-LAST:event_btnEliminarCongresoActionPerformed

    private void btnEliminarContratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarContratoActionPerformed
        eliminarRegistroContrato();
    }//GEN-LAST:event_btnEliminarContratoActionPerformed

    private void btnEliminarPIntelectualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarPIntelectualActionPerformed
        eliminarRegistroPropiedad(tblPIntelectual);
    }//GEN-LAST:event_btnEliminarPIntelectualActionPerformed

    private void btnEliminarPIndustrialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarPIndustrialActionPerformed
        eliminarRegistroPropiedad(tblPIndustrial);
    }//GEN-LAST:event_btnEliminarPIndustrialActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        editarRegistroArticuloRevista();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void btAgregarFormacionRRHHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAgregarFormacionRRHHActionPerformed
        agregarFormacionRH();
    }//GEN-LAST:event_btAgregarFormacionRRHHActionPerformed

    private void btnEditarFormacionRRHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarFormacionRRHActionPerformed
        modificarFormacionRH();
    }//GEN-LAST:event_btnEditarFormacionRRHActionPerformed

    private void btnEliminarFormacionRRHHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarFormacionRRHHActionPerformed
        eliminarFormacionRH();
    }//GEN-LAST:event_btnEliminarFormacionRRHHActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(diagProyectoResultado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(diagProyectoResultado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(diagProyectoResultado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(diagProyectoResultado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                diagProyectoResultado dialog = new diagProyectoResultado(new javax.swing.JFrame(), true, new Usuario());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAgregarArticuloRevista;
    private javax.swing.JButton btAgregarCapitulo;
    private javax.swing.JButton btAgregarCongreso;
    private javax.swing.JButton btAgregarContrato;
    private javax.swing.JButton btAgregarFormacionRRHH;
    private javax.swing.JButton btAgregarLibro;
    private javax.swing.JButton btAgregarPIndustrial;
    private javax.swing.JButton btAgregarPIntelectual;
    private javax.swing.JButton btEliminar;
    private javax.swing.JButton btModificarLibro;
    private javax.swing.JButton btnBuscarProyecto;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEditarCongreso;
    private javax.swing.JButton btnEditarContrato;
    private javax.swing.JButton btnEditarFormacionRRH;
    private javax.swing.JButton btnEditarPIndustrial;
    private javax.swing.JButton btnEditarPIntelectual;
    private javax.swing.JButton btnEliminarArticulo;
    private javax.swing.JButton btnEliminarCapitulo;
    private javax.swing.JButton btnEliminarCongreso;
    private javax.swing.JButton btnEliminarContrato;
    private javax.swing.JButton btnEliminarFormacionRRHH;
    private javax.swing.JButton btnEliminarPIndustrial;
    private javax.swing.JButton btnEliminarPIntelectual;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JPanel pnCapitulos;
    private javax.swing.JPanel pnLibros;
    private javax.swing.JTextArea taProyecto;
    private javax.swing.JTabbedPane tabResultados;
    private javax.swing.JTable tblArticulosRevistas;
    private javax.swing.JTable tblCapitulos;
    private javax.swing.JTable tblCongresos;
    private javax.swing.JTable tblContratos;
    private javax.swing.JTable tblFormacionRRHH;
    private javax.swing.JTable tblLibros;
    private javax.swing.JTable tblPIndustrial;
    private javax.swing.JTable tblPIntelectual;
    // End of variables declaration//GEN-END:variables

    private void inicializarComponentes() {
        modeloTablaLibros = new ModeloTablaNoEditable();
        modeloTablaCapitulos = new ModeloTablaNoEditable();
        modeloTablaArticuloRevista = new ModeloTablaNoEditable();
        modeloTablaCongreso = new ModeloTablaNoEditable();
        modeloTablaContrato = new ModeloTablaNoEditable();
        modeloTablaPIntelectual = new ModeloTablaNoEditable();
        modeloTablaPIndustrial = new ModeloTablaNoEditable();
        modeloTablaFormacionRRHH = new ModeloTablaNoEditable();


        cargarEncabezadosTablaLibros(modeloTablaLibros);
        cargarEncabezadosTablaCapitulos(modeloTablaCapitulos);
        cargarEncabezadosTablaArticuloRevista(modeloTablaArticuloRevista);
        cargarEncabezadosTablaCongresos(modeloTablaCongreso);
        cargarEncabezadosTablaContratos(modeloTablaContrato);
        cargarEncabezadosTablaPIntelectual(modeloTablaPIntelectual);
        cargarEncabezadosTablaPIndustrial(modeloTablaPIndustrial);
        cargarEncabezadosTablaFormacionRRHH(modeloTablaFormacionRRHH);


        Comunes.autoAjusteTextArea(taProyecto);

        configurarTabla(tblLibros);
        configurarTabla(tblCapitulos);
        configurarTabla(tblArticulosRevistas);
        configurarTabla(tblCongresos);
        configurarTabla(tblContratos);
        configurarTabla(tblPIntelectual);
        configurarTabla(tblPIndustrial);
        configurarTabla(tblFormacionRRHH);
    }

    private void agregarLibro() {
        if (proyecto != null) {
            diagProyectoResultadoLibro resultadoLibro = new diagProyectoResultadoLibro(null, true, "Alta", proyecto, usuario);
            resultadoLibro.setLocation(Comunes.centrarDialog(resultadoLibro));
            resultadoLibro.setVisible(true);
            if (resultadoLibro.getLibro() != null) {
                cargarLibro(resultadoLibro.getLibro());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un proyecto primero");
        }
    }

    private void cargarLibros() {

        modeloTablaLibros = new ModeloTablaNoEditable();
        cargarEncabezadosTablaLibros(modeloTablaLibros);
        if (proyecto != null) {
            for (Libro libro : PublicacionFacade.getInstance().getLibrosProyecto(proyecto)) {
                cargarLibro(libro);

            }
            tblLibros.setModel(modeloTablaLibros);
        }
    }

    private void cargarLibro(Libro libro) {

        Object[] fila = new Object[4];
        fila[0] = libro.getId();
        fila[1] = libro.getTitulo();
        StringBuilder strInvestigadores = new StringBuilder();
        for (Investigador investigador : libro.getInvestigadores()) {
            strInvestigadores.append(investigador.toString()).append(" / ");
        }
        fila[2] = strInvestigadores;
        fila[3] = libro.getEditor();
        modeloTablaLibros.addRow(fila);


    }

    private void cargarEncabezadosTablaLibros(DefaultTableModel modeloTabla) {
        modeloTabla.addColumn("Codigo");
        modeloTabla.addColumn("Titulo");
        modeloTabla.addColumn("Autores");
        modeloTabla.addColumn("Editor");
        tblLibros.setModel(modeloTabla);

    }

    private void configurarTabla(JTable tblProyectos) {
        JViewport scroll = (JViewport) tblProyectos.getParent();
        int ancho = scroll.getWidth();
        int anchoColumna = 0;
        TableColumnModel modeloColumna = tblProyectos.getColumnModel();
        TableColumn columnaTabla;
        for (int i = 0; i < tblProyectos.getColumnCount(); i++) {
            columnaTabla = modeloColumna.getColumn(i);
            switch (i) {
                case 0:
                    anchoColumna = (1 * ancho) / 100;
                    break;
                case 1:
                    anchoColumna = (20 * ancho) / 100;
                    break;
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                    anchoColumna = (5 * ancho) / 100;
                    break;
            }
            columnaTabla.setPreferredWidth(anchoColumna);
            tblProyectos.setColumnModel(modeloColumna);
        }
        tblProyectos.getTableHeader().setFont(new java.awt.Font("Dialog",
                java.awt.Font.PLAIN, 10));
        tblProyectos.getTableHeader().setBackground(java.awt.Color.WHITE);
        tblProyectos.getTableHeader().setForeground(Color.BLACK);
        //Si le queremos cambiar el tamaño a la tablita
        tblProyectos.setFont(new java.awt.Font("Dialog",
                java.awt.Font.PLAIN, 10));
    }

    private void agregarCapitulo() {
        if (proyecto != null) {
            diagProyectoResultadoCapitulo resultadoCapitulo = new diagProyectoResultadoCapitulo(null, true, "Alta", proyecto, usuario);
            resultadoCapitulo.setLocation(Comunes.centrarDialog(resultadoCapitulo));
            resultadoCapitulo.setVisible(true);
            if (resultadoCapitulo.getCapitulo() != null) {
                cargarCapitulo(resultadoCapitulo.getCapitulo());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un proyecto primero");
        }
    }

    private void cargarCapitulos() {
        if (proyecto != null) {
            for (Publicacion publicacion : PublicacionFacade.getInstance().getCapitulosLibro(proyecto)) {
                if (publicacion.getClass().getSimpleName().equals("CapituloLibro")) {
                    cargarCapitulo((CapituloLibro) publicacion);
                }
            }
        }
    }

    private void cargarCapitulo(CapituloLibro capitulolibro) {
        Object[] fila = new Object[5];
        fila[0] = capitulolibro.getId();
        fila[1] = capitulolibro.getTitulo();
        fila[2] = capitulolibro.getNombreLibro();
        StringBuilder strInvestigadores = new StringBuilder();
        for (Investigador investigador : capitulolibro.getInvestigadores()) {
            strInvestigadores.append(investigador.toString()).append(" / ");
        }
        fila[3] = strInvestigadores;
        fila[4] = capitulolibro.getEditor();
        modeloTablaCapitulos.addRow(fila);
    }

    private void cargarEncabezadosTablaCapitulos(ModeloTablaNoEditable modeloTablaCapitulos) {
        modeloTablaCapitulos.addColumn("Codigo");
        modeloTablaCapitulos.addColumn("Capitulo");
        modeloTablaCapitulos.addColumn("Libro");
        modeloTablaCapitulos.addColumn("Autores");
        modeloTablaCapitulos.addColumn("Editor");
        tblCapitulos.setModel(modeloTablaCapitulos);

    }

    private void buscarProyecto() {
        diagProyectoBusquedaSimple selecproyecto = new diagProyectoBusquedaSimple(null, true);
        selecproyecto.setLocation(Comunes.centrarDialog(selecproyecto));
        selecproyecto.setVisible(true);
        if (selecproyecto.getProyecto() != null) {
            proyecto = selecproyecto.getProyecto();
            taProyecto.setText(proyecto.toString());


        }

    }

    private void cargarArticulosRevistas() {
        if (proyecto != null) {
            for (Publicacion publicacion : PublicacionFacade.getInstance().getArticuloRevista(proyecto)) {
                if (publicacion.getClass().getSimpleName().equals("ArticuloRevista")) {
                    cargarArticuloRevista((ArticuloRevista) publicacion);
                }
            }
        }
    }

    private void cargarArticuloRevista(ArticuloRevista articuloRevista) {
        Object[] fila = new Object[5];
        fila[0] = articuloRevista.getId();
        fila[1] = articuloRevista.getTitulo();
        fila[2] = articuloRevista.getNombreRevista();
        StringBuilder strInvestigadores = new StringBuilder();
        for (Investigador investigador : articuloRevista.getInvestigadores()) {
            strInvestigadores.append(investigador.toString()).append(" / ");
        }
        fila[3] = strInvestigadores;
        fila[4] = articuloRevista.getAnioEdicion();
        modeloTablaArticuloRevista.addRow(fila);
    }

    private void cargarEncabezadosTablaArticuloRevista(ModeloTablaNoEditable modeloTablaArticuloRevista) {
        modeloTablaArticuloRevista.addColumn("Codigo");
        modeloTablaArticuloRevista.addColumn("Nombre articulo");
        modeloTablaArticuloRevista.addColumn("Nombre Revista");
        modeloTablaArticuloRevista.addColumn("Autores");
        modeloTablaArticuloRevista.addColumn("Año");
        tblArticulosRevistas.setModel(modeloTablaArticuloRevista);
    }

    private void agregarArticuloRevista() {
        if (proyecto != null) {
            diagProyectoResultadoArticuloRevista resultadoArticuloRevista = new diagProyectoResultadoArticuloRevista(null, true, "Alta", proyecto, usuario);
            resultadoArticuloRevista.setLocation(Comunes.centrarDialog(resultadoArticuloRevista));
            resultadoArticuloRevista.setVisible(true);
            if (!resultadoArticuloRevista.getArticuloRevista().getTitulo().isEmpty()) {
                cargarArticuloRevista(resultadoArticuloRevista.getArticuloRevista());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un proyecto primero");
        }
    }

    private void agregarCongreso() {
        if (proyecto != null) {
            diagProyectoResultadoCongreso resultadoCongreso = new diagProyectoResultadoCongreso(null, true, "Alta", proyecto, usuario);
            resultadoCongreso.setLocation(Comunes.centrarDialog(resultadoCongreso));
            resultadoCongreso.setVisible(true);
            if (resultadoCongreso.getCongreso() != null) {
                cargarCongreso(resultadoCongreso.getCongreso());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un proyecto primero");
        }
    }

    private void cargarCongreso(Congreso congreso) {

        Object[] fila = new Object[5];
        fila[0] = congreso.getId();
        fila[1] = congreso.getTitulo();
        fila[2] = congreso.getNombreEvento();
        StringBuilder strInvestigadores = new StringBuilder();
        for (Investigador investigador : congreso.getInvestigadores()) {
            strInvestigadores.append(investigador.toString()).append(" / ");
        }
        fila[3] = strInvestigadores;
        fila[4] = congreso.getLugar();
        modeloTablaCongreso.addRow(fila);
    }

    private void cargarEncabezadosTablaCongresos(ModeloTablaNoEditable modeloTablaCongreso) {
        modeloTablaCongreso.addColumn("Codigo");
        modeloTablaCongreso.addColumn("Congreso");
        modeloTablaCongreso.addColumn("Evento");
        modeloTablaCongreso.addColumn("Participantes");
        modeloTablaCongreso.addColumn("Lugar");
        tblCongresos.setModel(modeloTablaCongreso);
    }

    private void cargarEncabezadosTablaContratos(ModeloTablaNoEditable modeloTablaContrato) {
        modeloTablaContrato.addColumn("Codigo");
        modeloTablaContrato.addColumn("Objeto");
        modeloTablaContrato.addColumn("Tipo Contrato");
        modeloTablaContrato.addColumn("Destinatarios");
        modeloTablaContrato.addColumn("Fecha");
        modeloTablaContrato.addColumn("Monto");
        tblContratos.setModel(modeloTablaContrato);
    }

    private void cargarCongresos() {
        modeloTablaCongreso = new ModeloTablaNoEditable();
        cargarEncabezadosTablaCongresos(modeloTablaCongreso);
        configurarTabla(tblCongresos);
        if (proyecto != null) {
            for (Publicacion publicacion : PublicacionFacade.getInstance().getCongresos(proyecto)) {
                if (publicacion.getClass().getSimpleName().equals("Congreso")) {
                    cargarCongreso((Congreso) publicacion);
                }
            }
        }
    }

    private void editarCongreso() {
        congreso = new Congreso();

        if (proyecto != null) {
            if (tblCongresos.getSelectedRow() != -1) {
                congreso = (Congreso) PublicacionFacade.getInstance().buscar((Long) tblCongresos.getValueAt(tblCongresos.getSelectedRow(), 0));
                diagProyectoResultadoCongreso resultadoCongreso = new diagProyectoResultadoCongreso(null, true, "Modificación", proyecto, congreso, usuario);
                resultadoCongreso.setLocation(Comunes.centrarDialog(resultadoCongreso));
                resultadoCongreso.setVisible(true);
                cargarCongresos();
            } else {
                JOptionPane.showMessageDialog(null, "Debe seleccionar un congreso");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un proyecto");
        }
    }

    private void cargarContrato(Contrato contrato) {

        Object[] fila = new Object[6];
        fila[0] = contrato.getId();
        fila[1] = contrato.getObjeto();
        fila[2] = contrato.getTipoContrato();
        fila[3] = contrato.getDestinatarios();
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        try {
            fila[4] = formato.format(contrato.getFechaContrato());
        } catch (java.lang.NullPointerException ex) {
            fila[4] = "-";
        }
        fila[5] = contrato.getMontoObtenido();
        modeloTablaContrato.addRow(fila);
    }

    private void cargarContratos() {
        modeloTablaContrato = new ModeloTablaNoEditable();
        cargarEncabezadosTablaContratos(modeloTablaContrato);
        configurarTabla(tblContratos);
        if (proyecto != null) {
            for (Contrato contrato1 : ContratoFacade.getInstance().getContratosProyecto(proyecto)) {

                cargarContrato(contrato1);
            }

        }
    }

    private void agregarContrato() {
        if (proyecto != null) {
            diagProyectoResultadoContrato resultadoContrato = new diagProyectoResultadoContrato(null, true, "Alta", proyecto, usuario);
            resultadoContrato.setLocation(Comunes.centrarDialog(resultadoContrato));
            resultadoContrato.setVisible(true);
            if (resultadoContrato.getContrato() != null) {
                cargarContrato(resultadoContrato.getContrato());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un proyecto primero");
        }
    }

    private void editarContrato() {
        contrato = new Contrato();

        if (proyecto != null) {
            if (tblContratos.getSelectedRow() != -1) {
                contrato = (Contrato) ContratoFacade.getInstance().buscar((Long) tblContratos.getValueAt(tblContratos.getSelectedRow(), 0));
                diagProyectoResultadoContrato resultadoContrato = new diagProyectoResultadoContrato(null, true, "Modificación", proyecto, contrato, usuario);
                resultadoContrato.setLocation(Comunes.centrarDialog(resultadoContrato));
                resultadoContrato.setVisible(true);
                if (resultadoContrato.getContrato() != null) {
                    cargarContratos();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debe seleccionar un contrato");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un proyecto");
        }
    }

    private void cargarPIntelectuales() {
        modeloTablaPIntelectual = new ModeloTablaNoEditable();
        cargarEncabezadosTablaPIntelectual(modeloTablaPIntelectual);
        configurarTabla(tblPIntelectual);
        if (proyecto != null) {
            for (Propiedad propiedad : PropiedadFacade.getInstance().getIntelectualesProyecto(proyecto)) {
                if (propiedad.getClass().getSimpleName().equals("Intelectual")) {
                    cargarPIntelectual((Intelectual) propiedad);
                }

            }
        }
    }

    private void cargarEncabezadosTablaPIntelectual(ModeloTablaNoEditable modeloTablaPIntelectual) {
        modeloTablaPIntelectual.addColumn("Codigo");
        modeloTablaPIntelectual.addColumn("Titulo");
        modeloTablaPIntelectual.addColumn("Tipo de Registro");
        modeloTablaPIntelectual.addColumn("Titulares");
        modeloTablaPIntelectual.addColumn("Integrantes");
        modeloTablaPIntelectual.addColumn("País");
        modeloTablaPIntelectual.addColumn("Fecha");
        tblPIntelectual.setModel(modeloTablaPIntelectual);
    }

    private void cargarPIntelectual(Intelectual intelectual) {
        Object[] fila = new Object[7];
        fila[0] = intelectual.getId();
        fila[1] = intelectual.getTitulo();
        fila[2] = intelectual.getTipoRegistroIntelectual();
        fila[3] = intelectual.getTitulares();
        StringBuilder strInvestigadores = new StringBuilder();
        for (Investigador investigador : intelectual.getInvestigadores()) {
            strInvestigadores.append(investigador.toString()).append(" / ");
        }
        fila[4] = strInvestigadores;
        fila[5] = intelectual.getPais();
        fila[6] = intelectual.getFecha();
        modeloTablaPIntelectual.addRow(fila);
    }

    private void agregarPIntelectual() {
        if (proyecto != null) {
            diagProyectoResultadoPIntelectual resultadoPIntelectual = new diagProyectoResultadoPIntelectual(null, true, "Alta", proyecto, usuario);
            resultadoPIntelectual.setLocation(Comunes.centrarDialog(resultadoPIntelectual));
            resultadoPIntelectual.setVisible(true);
            if (resultadoPIntelectual.getpIntelectual() != null) {
                cargarPIntelectual(resultadoPIntelectual.getpIntelectual());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un proyecto primero");
        }
    }

    private void editarPintelectual() {
        pIntelectual = new Intelectual();
        if (proyecto != null) {
            if (tblPIntelectual.getSelectedRow() != -1) {
                pIntelectual = (Intelectual) PropiedadFacade.getInstance().buscar((Long) tblPIntelectual.getValueAt(tblPIntelectual.getSelectedRow(), 0));
                diagProyectoResultadoPIntelectual resultadoPIntelectual = new diagProyectoResultadoPIntelectual(null, true, "Modificación", proyecto, pIntelectual, usuario);
                resultadoPIntelectual.setLocation(Comunes.centrarDialog(resultadoPIntelectual));
                resultadoPIntelectual.setVisible(true);

            } else {
                JOptionPane.showMessageDialog(null, "Debe seleccionar una fila para editar");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un proyecto primero");
        }
    }

    private void cargarPIndustriales() {
        modeloTablaPIndustrial = new ModeloTablaNoEditable();
        cargarEncabezadosTablaPIndustrial(modeloTablaPIndustrial);
        configurarTabla(tblPIndustrial);
        if (proyecto != null) {
            for (Propiedad propiedad : PropiedadFacade.getInstance().getIndustrialesProyecto(proyecto)) {
                if (propiedad.getClass().getSimpleName().equals("Industrial")) {
                    cargarPIndustrial((Industrial) propiedad);
                }

            }
        }
    }

    private void cargarEncabezadosTablaPIndustrial(ModeloTablaNoEditable modeloTablaPIndustrial) {
        modeloTablaPIndustrial.addColumn("Codigo");
        modeloTablaPIndustrial.addColumn("Titulo");
        modeloTablaPIndustrial.addColumn("Tipo de Registro");
        modeloTablaPIndustrial.addColumn("Titulares");
        modeloTablaPIndustrial.addColumn("Integrantes");
        modeloTablaPIndustrial.addColumn("País");
        modeloTablaPIndustrial.addColumn("Fecha");
        tblPIndustrial.setModel(modeloTablaPIndustrial);
    }

    private void cargarPIndustrial(Industrial industrial) {
        Object[] fila = new Object[7];
        fila[0] = industrial.getId();
        fila[1] = industrial.getTitulo();
        fila[2] = industrial.getTipoRegistroIndustrial();
        fila[3] = industrial.getTitulares();
        StringBuilder strInvestigadores = new StringBuilder();
        for (Investigador investigador : industrial.getInvestigadores()) {
            strInvestigadores.append(investigador.toString()).append(" / ");
        }
        fila[4] = strInvestigadores;
        fila[5] = industrial.getPais();
        fila[6] = industrial.getFecha();
        modeloTablaPIndustrial.addRow(fila);
    }

    private void agregarPIndustrial() {
        if (proyecto != null) {
            diagProyectoResultadoPIndustrial resultadoPIndustrial = new diagProyectoResultadoPIndustrial(null, true, "Alta", proyecto, usuario);
            resultadoPIndustrial.setLocation(Comunes.centrarDialog(resultadoPIndustrial));
            resultadoPIndustrial.setVisible(true);
            if (resultadoPIndustrial.getpIndustrial() != null) {
                cargarPIndustrial(resultadoPIndustrial.getpIndustrial());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un proyecto primero");
        }
    }

    private void editarPIndustrial() {
        pIndustrial = new Industrial();
        if (proyecto != null) {
            if (tblPIndustrial.getSelectedRow() != -1) {
                pIndustrial = (Industrial) PropiedadFacade.getInstance().buscar((Long) tblPIndustrial.getValueAt(tblPIndustrial.getSelectedRow(), 0));
                diagProyectoResultadoPIndustrial resultadoPIndustrial = new diagProyectoResultadoPIndustrial(null, true, "Modificación", proyecto, pIndustrial, usuario);
                resultadoPIndustrial.setLocation(Comunes.centrarDialog(resultadoPIndustrial));
                resultadoPIndustrial.setVisible(true);
                if (resultadoPIndustrial.getpIndustrial() != null) {
                    inicializarComponentes();
                    cargarPIndustriales();
                }

            } else {
                JOptionPane.showMessageDialog(null, "Debe seleccionar una fila para editar");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un proyecto primero");
        }
    }

    private void editarLibro() {
        libro = new Libro();

        if (proyecto != null) {
            if (tblLibros.getSelectedRow() != -1) {
                libro = (Libro) PublicacionFacade.getInstance().buscar((Long) tblLibros.getValueAt(tblLibros.getSelectedRow(), 0));
                diagProyectoResultadoLibro resultadoLibro = new diagProyectoResultadoLibro(null, true, "Modificación", proyecto, libro, usuario);
                resultadoLibro.setLocation(Comunes.centrarDialog(resultadoLibro));
                resultadoLibro.setVisible(true);
                inicializarComponentes();
                cargarLibros();

            } else {
                JOptionPane.showMessageDialog(null, "Debe seleccionar un libro");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un proyecto");
        }
    }

    private void eliminarRegistro(JTable tabla) {
        if (proyecto != null) {
            if (tabla.getSelectedRow() != -1) {
                int i = JOptionPane.showConfirmDialog(null, "Confirmar la eliminacion", "Confirmar", JOptionPane.YES_NO_OPTION);
                if (i == 0) {

                    PublicacionFacade.getInstance().eliminar((Long) tabla.getValueAt(tabla.getSelectedRow(), 0));
                    inicializarComponentes();
                    cargarCapitulos();
                    cargarLibros();
                    cargarArticulosRevistas();
                    cargarCongresos();

                }
            } else {
                JOptionPane.showMessageDialog(null, "Debe seleccionar un registro");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe Seleccionar un Proyecto");
        }
    }

    private void eliminarRegistroLibro() {
        if (proyecto != null) {
            if (tblLibros.getSelectedRow() != -1) {
                int i = JOptionPane.showConfirmDialog(null, "Confirmar la eliminacion", "Confirmar", JOptionPane.YES_NO_OPTION);
                if (i == 0) {
                    if (validarCapitulos()) {
                        PublicacionFacade.getInstance().eliminar((Long) tblLibros.getValueAt(tblLibros.getSelectedRow(), 0));
                        inicializarComponentes();
                        cargarLibros();

                    } else {
                        JOptionPane.showMessageDialog(null, "Este Libro posee Capitulos \n debe eliminar los mismos "
                                + "para \n poder realizar esta operacion");
                    }


                }
            } else {
                JOptionPane.showMessageDialog(null, "Debe seleccionar un registro");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe Seleccionar un Proyecto");
        }
    }

    private void eliminarRegistroContrato() {
        if (proyecto != null) {
            if (tblContratos.getSelectedRow() != -1) {
                int i = JOptionPane.showConfirmDialog(null, "Confirmar la eliminacion", "Confirmar", JOptionPane.YES_NO_OPTION);
                if (i == 0) {

                    ContratoFacade.getInstance().eliminar((Long) tblContratos.getValueAt(tblContratos.getSelectedRow(), 0));
                    inicializarComponentes();
                    cargarContratos();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debe seleccionar un registro");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe Seleccionar un Proyecto");
        }
    }

    private void eliminarRegistroPropiedad(JTable tblPropiedad) {
        if (proyecto != null) {
            if (tblPropiedad.getSelectedRow() != -1) {
                int i = JOptionPane.showConfirmDialog(null, "Confirmar la eliminacion", "Confirmar", JOptionPane.YES_NO_OPTION);
                if (i == 0) {

                    PropiedadFacade.getInstance().eliminar((Long) tblPropiedad.getValueAt(tblPropiedad.getSelectedRow(), 0));

                }
            } else {
                JOptionPane.showMessageDialog(null, "Debe seleccionar un registro");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe Seleccionar un Proyecto");
        }
    }

    private boolean validarCapitulos() {
        Boolean flag;
        Libro lib = (Libro) PublicacionFacade.getInstance().buscar((Long) tblLibros.getValueAt(tblLibros.getSelectedRow(), 0));
        if (lib.getCapitulos().isEmpty()) {
            flag = true;
        } else {
            flag = false;
        }
        return flag;
    }

    private void editarRegistroCapitulo() {
        capituloLibro = new CapituloLibro();

        if (proyecto != null) {
            if (tblCapitulos.getSelectedRow() != -1) {
                capituloLibro = (CapituloLibro) PublicacionFacade.getInstance().buscar((Long) tblCapitulos.getValueAt(tblCapitulos.getSelectedRow(), 0));
                diagProyectoResultadoCapitulo resultadoCapitulo = new diagProyectoResultadoCapitulo(null, true, "Modificación", proyecto, capituloLibro, usuario);
                resultadoCapitulo.setLocation(Comunes.centrarDialog(resultadoCapitulo));
                resultadoCapitulo.setVisible(true);
                inicializarComponentes();
                cargarCapitulos();
            } else {
                JOptionPane.showMessageDialog(null, "Debe seleccionar un capitulo");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un proyecto");
        }
    }

    private void editarRegistroArticuloRevista() {
        articuloRevista = new ArticuloRevista();

        if (proyecto != null) {
            if (tblArticulosRevistas.getSelectedRow() != -1) {
                articuloRevista = (ArticuloRevista) PublicacionFacade.getInstance().buscar((Long) tblArticulosRevistas.getValueAt(tblArticulosRevistas.getSelectedRow(), 0));
                diagProyectoResultadoArticuloRevista resultadoArticuloRevista = new diagProyectoResultadoArticuloRevista(null, true, "Modificación", proyecto, articuloRevista, usuario);
                resultadoArticuloRevista.setLocation(Comunes.centrarDialog(resultadoArticuloRevista));
                resultadoArticuloRevista.setVisible(true);
                inicializarComponentes();
                cargarArticulosRevistas();
            } else {
                JOptionPane.showMessageDialog(null, "Debe seleccionar un capitulo");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un proyecto");
        }
    }

    private void agregarFormacionRH() {
        if (proyecto != null) {
            diagProyectoResultadoFormacionRRHH resultadoFormacionRH = new diagProyectoResultadoFormacionRRHH(null, true, "Alta", proyecto, usuario);
            resultadoFormacionRH.setLocation(Comunes.centrarDialog(resultadoFormacionRH));
            resultadoFormacionRH.setVisible(true);
            if (resultadoFormacionRH.getFormacionRRHH() != null) {
                cargarFormacionRRHH(resultadoFormacionRH.getFormacionRRHH());

            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un proyecto primero");
        }
    }

    private void cargarEncabezadosTablaFormacionRRHH(ModeloTablaNoEditable modeloTabla) {
        modeloTabla.addColumn("Codigo");
        modeloTabla.addColumn("Fecha");
        modeloTabla.addColumn("Nro Becarios alumnos");
        modeloTabla.addColumn("Nro Becarios graduados");
        modeloTabla.addColumn("Nro Tesis dirigidas");
        modeloTabla.addColumn("Tesis aprobadas Maestría");
        modeloTabla.addColumn("Tesis aprobadas doctorado");
        modeloTabla.addColumn("Tesinas de grado aprobadas");
        tblFormacionRRHH.setModel(modeloTabla);
    }

    private void cargarFormacionRRHH() {
        modeloTablaFormacionRRHH = new ModeloTablaNoEditable();
        cargarEncabezadosTablaFormacionRRHH(modeloTablaFormacionRRHH);
        if (proyecto != null) {
            for (FormacionRRHH formacionRH : FormacionRRHHFacade.getInstance().getFormacionesRRHHProyecto(proyecto)) {
                cargarFormacionRRHH(formacionRH);

            }
            tblFormacionRRHH.setModel(modeloTablaFormacionRRHH);
        }
    }

    private void cargarFormacionRRHH(FormacionRRHH formacionRH) {
        Object[] fila = new Object[8];
        fila[0] = formacionRH.getId();
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        try {
            fila[1] = formato.format(formacionRH.getFecha());
        } catch (java.lang.NullPointerException ex) {
            fila[1] = "-";
        }
        fila[2] = formacionRH.getBecariosAlumnos();
        fila[3] = formacionRH.getBecariosGraduados();
        fila[4] = formacionRH.getTesisDirigidas();
        fila[5] = formacionRH.getTesisAprobadasMaestria();
        fila[6] = formacionRH.getTesisAprobadasDoctorado();
        fila[7] = formacionRH.getTesinasGradoAprobadas();
        modeloTablaFormacionRRHH.addRow(fila);
    }

    private void modificarFormacionRH() {
        formacionRRHH = new FormacionRRHH();
        if (proyecto != null) {
            if (tblFormacionRRHH.getSelectedRow() != -1) {
                formacionRRHH = FormacionRRHHFacade.getInstance().buscar((Long) tblFormacionRRHH.getValueAt(tblFormacionRRHH.getSelectedRow(), 0));
                diagProyectoResultadoFormacionRRHH resultadoFormacionRH = new diagProyectoResultadoFormacionRRHH(null, true, "Modificación", proyecto, formacionRRHH, usuario);
                resultadoFormacionRH.setLocation(Comunes.centrarDialog(resultadoFormacionRH));
                resultadoFormacionRH.setVisible(true);
                if (resultadoFormacionRH.getFormacionRRHH() != null) {
                    inicializarComponentes();
                    cargarFormacionRRHH();
                }

            } else {
                JOptionPane.showMessageDialog(null, "Debe seleccionar una fila para editar");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un proyecto primero");
        }
    }

    private void eliminarFormacionRH() {
        if (proyecto != null) {
            if (tblFormacionRRHH.getSelectedRow() != -1) {
                int i = JOptionPane.showConfirmDialog(null, "Confirmar la eliminacion", "Confirmar", JOptionPane.YES_NO_OPTION);
                if (i == 0) {

                    FormacionRRHHFacade.getInstance().eliminar((Long) tblFormacionRRHH.getValueAt(tblFormacionRRHH.getSelectedRow(), 0));
                    inicializarComponentes();
                    cargarFormacionRRHH();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debe seleccionar un registro");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe Seleccionar un Proyecto");
        }
    }
}
