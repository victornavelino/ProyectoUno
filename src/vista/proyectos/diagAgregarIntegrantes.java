/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * diagAgregarIntegrantes.java
 *
 * Created on 22/08/2011, 09:51:12
 */
package vista.proyectos;

import entidades.operaciones.Operacion;
import entidades.persona.investigador.Investigador;
import entidades.proyecto.Proyecto;
import entidades.usuario.Usuario;
import facade.InvestigadorFacade;
import facade.OperacionFacade;
import facade.ParticipacionFacade;
import facade.ProyectoFacade;
import includes.Comunes;
import includes.SuperDialog;
import java.awt.Dimension;
import java.awt.Insets;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import vistas.investigadores.diagInvestigador;
import vista.participaciones.diagParticipacion;

/**
 *
 * @author carlos
 */
public class diagAgregarIntegrantes extends SuperDialog {

    private ProyectoFacade proyectoFacade = ProyectoFacade.getInstance();
    private ParticipacionFacade participacionFacade = new ParticipacionFacade();
    Usuario usuario;

    /**
     * Creates new form diagAgregarIntegrantes
     */
    public diagAgregarIntegrantes(java.awt.Frame parent, boolean modal, Usuario usuario) {
        super(parent, modal);
        this.usuario = usuario;
        initComponents();
        inicializarComponentes();
           //size of the screen
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
//height of the task bar
        Insets scnMax = Toolkit.getDefaultToolkit().getScreenInsets(getGraphicsConfiguration());
        int taskBarSize = scnMax.bottom;
//available size of the screen 
        this.setSize(screenSize.width, screenSize.height - taskBarSize);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListProyectos = new javax.swing.JList();
        jLabel4 = new javax.swing.JLabel();
        tfFiltroProyectos = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        pIntegrantes = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListIntegrantesDentro = new javax.swing.JList();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListIntegrantesFuera = new javax.swing.JList();
        jButton7 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        tfFiltroInvestigadores = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(diagAgregarIntegrantes.class, "diagAgregarIntegrantes.title")); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(diagAgregarIntegrantes.class, "diagAgregarIntegrantes.jLabel1.text")); // NOI18N

        jListProyectos.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListProyectosValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListProyectos);

        jLabel4.setText(org.openide.util.NbBundle.getMessage(diagAgregarIntegrantes.class, "diagAgregarIntegrantes.jLabel4.text")); // NOI18N

        tfFiltroProyectos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfFiltroProyectosActionPerformed(evt);
            }
        });

        jButton4.setText(org.openide.util.NbBundle.getMessage(diagAgregarIntegrantes.class, "diagAgregarIntegrantes.jButton4.text")); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton8.setText(org.openide.util.NbBundle.getMessage(diagAgregarIntegrantes.class, "diagAgregarIntegrantes.jButton8.text")); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText(org.openide.util.NbBundle.getMessage(diagAgregarIntegrantes.class, "diagAgregarIntegrantes.jButton9.text")); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        pIntegrantes.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagAgregarIntegrantes.class, "diagAgregarIntegrantes.pIntegrantes.border.title"))); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(diagAgregarIntegrantes.class, "diagAgregarIntegrantes.jLabel2.text")); // NOI18N

        jListIntegrantesDentro.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListIntegrantesDentroValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jListIntegrantesDentro);

        jButton2.setText(org.openide.util.NbBundle.getMessage(diagAgregarIntegrantes.class, "diagAgregarIntegrantes.jButton2.text")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText(org.openide.util.NbBundle.getMessage(diagAgregarIntegrantes.class, "diagAgregarIntegrantes.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText(org.openide.util.NbBundle.getMessage(diagAgregarIntegrantes.class, "diagAgregarIntegrantes.jLabel3.text")); // NOI18N

        jScrollPane3.setViewportView(jListIntegrantesFuera);

        jButton7.setText(org.openide.util.NbBundle.getMessage(diagAgregarIntegrantes.class, "diagAgregarIntegrantes.jButton7.text")); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton5.setText(org.openide.util.NbBundle.getMessage(diagAgregarIntegrantes.class, "diagAgregarIntegrantes.jButton5.text")); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        tfFiltroInvestigadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfFiltroInvestigadoresActionPerformed(evt);
            }
        });

        jButton6.setText(org.openide.util.NbBundle.getMessage(diagAgregarIntegrantes.class, "diagAgregarIntegrantes.jButton6.text")); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton3.setText(org.openide.util.NbBundle.getMessage(diagAgregarIntegrantes.class, "diagAgregarIntegrantes.jButton3.text")); // NOI18N
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel5.setText(org.openide.util.NbBundle.getMessage(diagAgregarIntegrantes.class, "diagAgregarIntegrantes.jLabel5.text")); // NOI18N

        javax.swing.GroupLayout pIntegrantesLayout = new javax.swing.GroupLayout(pIntegrantes);
        pIntegrantes.setLayout(pIntegrantesLayout);
        pIntegrantesLayout.setHorizontalGroup(
            pIntegrantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pIntegrantesLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(pIntegrantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pIntegrantesLayout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(tfFiltroInvestigadores, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pIntegrantesLayout.createSequentialGroup()
                        .addGroup(pIntegrantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pIntegrantesLayout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(pIntegrantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton1)
                                    .addComponent(jButton2)))
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(pIntegrantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pIntegrantesLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(32, 32, 32)
                                .addComponent(jButton7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        pIntegrantesLayout.setVerticalGroup(
            pIntegrantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pIntegrantesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pIntegrantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pIntegrantesLayout.createSequentialGroup()
                        .addGroup(pIntegrantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton5)
                            .addComponent(jButton7)
                            .addComponent(jLabel3))
                        .addGroup(pIntegrantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pIntegrantesLayout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jScrollPane3))
                            .addGroup(pIntegrantesLayout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addComponent(jButton2)
                                .addGap(36, 36, 36)
                                .addComponent(jButton1)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(pIntegrantesLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pIntegrantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addGroup(pIntegrantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfFiltroInvestigadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton6)
                        .addComponent(jLabel5)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(pIntegrantes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 41, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfFiltroProyectos, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jButton8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton9, javax.swing.GroupLayout.Alignment.LEADING)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(tfFiltroProyectos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9))
                    .addComponent(jScrollPane1))
                .addGap(64, 64, 64)
                .addComponent(pIntegrantes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jListProyectosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListProyectosValueChanged
        if (jListProyectos.getSelectedIndex() != -1) {
            cargarIntegrantes();
        } else {
            Comunes.cargarJList(jListIntegrantesDentro, new ArrayList());
            Comunes.cargarJList(jListIntegrantesFuera, new ArrayList());
        }
    }//GEN-LAST:event_jListProyectosValueChanged

    private void jListIntegrantesDentroValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListIntegrantesDentroValueChanged
        cambiarEstadoVerParticipaciones();
}//GEN-LAST:event_jListIntegrantesDentroValueChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        quitarIntegrante();
}//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        agregarIntegrante();
}//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        mostrarParticipaciones();
}//GEN-LAST:event_jButton3ActionPerformed

    private void tfFiltroProyectosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfFiltroProyectosActionPerformed
        filtrarProyecto();
}//GEN-LAST:event_tfFiltroProyectosActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        filtrarProyecto();
}//GEN-LAST:event_jButton4ActionPerformed

    private void tfFiltroInvestigadoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfFiltroInvestigadoresActionPerformed
        filtrarInvestigador();
}//GEN-LAST:event_tfFiltroInvestigadoresActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        filtrarInvestigador();
}//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        agregarNuevoInvestigador();
}//GEN-LAST:event_jButton5ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        agregarNuevoProyecto();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        modificarProyecto();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        modificarInvestigadorSeleccionado();
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                diagAgregarIntegrantes dialog = new diagAgregarIntegrantes(new javax.swing.JFrame(), true, new Usuario());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList jListIntegrantesDentro;
    private javax.swing.JList jListIntegrantesFuera;
    private javax.swing.JList jListProyectos;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel pIntegrantes;
    private javax.swing.JTextField tfFiltroInvestigadores;
    private javax.swing.JTextField tfFiltroProyectos;
    // End of variables declaration//GEN-END:variables

    private void inicializarComponentes() {
        //Comunes.cargarJList(jListProyectos, proyectoFacade.getCienPrimeros());
        List<Investigador> integrantesTodos = InvestigadorFacade.getInstance().getCienPrimerosInvestigadores();
        Comunes.cargarJList(jListIntegrantesFuera, integrantesTodos);
    }

    private void cargarIntegrantes() {
        if (jListProyectos.getSelectedIndex() != -1) {
            List<Investigador> integrantesDentro = proyectoFacade.getTodosIntegrantes((Proyecto) jListProyectos.getSelectedValue());
            List<Investigador> integrantesFuera = InvestigadorFacade.getInstance().getTodosInvestigador();
            integrantesFuera.removeAll(integrantesDentro);
            Comunes.cargarJList(jListIntegrantesDentro, integrantesDentro);
            Comunes.cargarJList(jListIntegrantesFuera, integrantesFuera);
        }
    }

    private void agregarIntegrante() {
        if (jListIntegrantesFuera.getSelectedIndex() != -1) {
            if (jListProyectos.getSelectedIndex() != -1) {
                Investigador investigadorSeleccionado = (Investigador) jListIntegrantesFuera.getSelectedValue();
                Proyecto proyectoSeleccionado = (Proyecto) jListProyectos.getSelectedValue();
                diagParticipacion participacionAlta = new diagParticipacion(null, true, investigadorSeleccionado, proyectoSeleccionado, usuario, "Alta");
                participacionAlta.setLocation(Comunes.centrarDialog(participacionAlta));
                participacionAlta.setVisible(true);
                if (participacionAlta.getInvestigador() != null) {
                    List<Investigador> integrantesDentro = proyectoFacade.getTodosIntegrantes((Proyecto) jListProyectos.getSelectedValue());
                    List<Investigador> integrantesFuera = InvestigadorFacade.getInstance().getTodosInvestigador();
                    integrantesFuera.removeAll(integrantesDentro);
                    Comunes.cargarJList(jListIntegrantesFuera, integrantesFuera);
                    Comunes.cargarJList(jListIntegrantesDentro, integrantesDentro);
                    Operacion operacion = new Operacion();
                    operacion.setFecha(Comunes.obtenerFechaActualDesdeDB());
                    operacion.setOperacion("Agregación de Integrante en Proyecto");
                    operacion.setUsuario(usuario);
                    OperacionFacade.getInstance().alta(operacion);
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Debe escoger proyecto", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(rootPane, "Debe escoger investigador", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void quitarIntegrante() {
        if (jListIntegrantesDentro.getSelectedIndex() != -1) {
            if (jListProyectos.getSelectedIndex() != -1) {
                Investigador investigadorSeleccionado = (Investigador) jListIntegrantesDentro.getSelectedValue();
                Proyecto proyectoSeleccionado = (Proyecto) jListProyectos.getSelectedValue();
                proyectoFacade.eliminarTodasParticipaciones(investigadorSeleccionado, proyectoSeleccionado);
                List<Investigador> integrantesDentro = proyectoFacade.getTodosIntegrantes((Proyecto) jListProyectos.getSelectedValue());
                List<Investigador> integrantesFuera = InvestigadorFacade.getInstance().getTodosInvestigador();
                integrantesFuera.removeAll(integrantesDentro);
                Comunes.cargarJList(jListIntegrantesFuera, integrantesFuera);
                Comunes.cargarJList(jListIntegrantesDentro, integrantesDentro);
            } else {
                JOptionPane.showMessageDialog(rootPane, "Debe escoger proyecto", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Debe escoger investigador", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void cambiarEstadoVerParticipaciones() {
        if (jListIntegrantesDentro.getSelectedIndex() != -1) {
            jButton3.setEnabled(true);
        } else {
            jButton3.setEnabled(false);
        }
    }

    private void mostrarParticipaciones() {
        if (jListIntegrantesDentro.getSelectedIndex() != -1) {
            if (jListProyectos.getSelectedIndex() != -1) {
                DiagDatosParticipaciones datosInvestigador = new DiagDatosParticipaciones(null, true,
                        (Investigador) jListIntegrantesDentro.getSelectedValue(),
                        (Proyecto) jListProyectos.getSelectedValue(), usuario);
                datosInvestigador.setLocation(Comunes.centrarDialog(datosInvestigador));
                datosInvestigador.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Debe escoger un investigador",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe escoger un proyecto",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
        cargarIntegrantes();
    }

    private void filtrarProyecto() {
        if (!tfFiltroProyectos.getText().equals("")) {
            Comunes.cargarJList(jListProyectos, proyectoFacade.buscar(tfFiltroProyectos.getText()));
        } else {
            Comunes.cargarJList(jListProyectos, proyectoFacade.getTodos());
        }
    }

    private void filtrarInvestigador() {
        if (jListProyectos.getSelectedIndex() != -1) {
            if (!tfFiltroInvestigadores.getText().equals("")) {
                List<Investigador> integrantesDentro = proyectoFacade.getTodosIntegrantes((Proyecto) jListProyectos.getSelectedValue());
                List<Investigador> integrantesFuera = InvestigadorFacade.getInstance().getTodosInvestigador();
                integrantesFuera.removeAll(integrantesDentro);
                Comunes.cargarJList(jListIntegrantesFuera, InvestigadorFacade.getInstance().filtrar(integrantesFuera, tfFiltroInvestigadores.getText()));
            } else {
                List<Investigador> integrantesDentro = proyectoFacade.getTodosIntegrantes((Proyecto) jListProyectos.getSelectedValue());
                List<Investigador> integrantesFuera = InvestigadorFacade.getInstance().getTodosInvestigador();
                integrantesFuera.removeAll(integrantesDentro);
                Comunes.cargarJList(jListIntegrantesFuera, integrantesFuera);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Debe elegir un Proyecto para recien poder elegir un integrante");
        }
    }

    private void agregarNuevoInvestigador() {
        diagInvestigador investigadorAlta = new diagInvestigador(null, true, "Alta", usuario);
        investigadorAlta.setLocation(Comunes.centrarDialog(investigadorAlta));
        investigadorAlta.setVisible(true);
        cargarIntegrantes();
    }

    private void agregarNuevoProyecto() {
        diagProyecto proyectoAlta = new diagProyecto(null, true, "Alta", usuario);
        proyectoAlta.setLocation(Comunes.centrarDialog(proyectoAlta));
        proyectoAlta.setVisible(true);
        filtrarProyecto();
    }

    private void modificarProyecto() {
        if (jListProyectos.getSelectedIndex() != -1) {
            modificarProyectoSeleccionado();
        } else {
            JOptionPane.showMessageDialog(null, "Debe escoger un proyecto", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void modificarProyectoSeleccionado() {
        diagProyecto proyectoModificacion = new diagProyecto(null, true, "Modificación", (Proyecto) jListProyectos.getSelectedValue(), usuario);
        proyectoModificacion.setLocation(Comunes.centrarDialog(proyectoModificacion));
        proyectoModificacion.setVisible(true);
        filtrarProyecto();
    }

    private void modificarInvestigadorSeleccionado() {
        if (jListIntegrantesFuera.getSelectedIndex() != -1) {
            diagInvestigador investigadorModificacion = new diagInvestigador(null, true, "Modificación", (Investigador) jListIntegrantesFuera.getSelectedValue(), usuario);
            investigadorModificacion.setLocation(Comunes.centrarDialog(investigadorModificacion));
            investigadorModificacion.setVisible(true);
            filtrarInvestigador();
        } else {
            JOptionPane.showMessageDialog(null, "Debe escoger un investigador", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
}
