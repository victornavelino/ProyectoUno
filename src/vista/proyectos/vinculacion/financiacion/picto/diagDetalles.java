/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * diagDetalles.java
 *
 * Created on 07/03/2013, 11:17:19
 */
package vista.proyectos.vinculacion.financiacion.picto;

import entidades.proyecto.vinculacion.financiacion.picto.AdministracionSubsidio;
import entidades.proyecto.vinculacion.financiacion.picto.Beca;
import entidades.proyecto.vinculacion.financiacion.picto.Bibliografia;
import entidades.proyecto.vinculacion.financiacion.picto.Equipamiento;
import entidades.proyecto.vinculacion.financiacion.picto.Honorarios;
import entidades.proyecto.vinculacion.financiacion.picto.MaterialesEInsumos;
import entidades.proyecto.vinculacion.financiacion.picto.Publicaciones;
import entidades.proyecto.vinculacion.financiacion.picto.RendicionDeCuentas;
import entidades.proyecto.vinculacion.financiacion.picto.Tecnicos;
import entidades.proyecto.vinculacion.financiacion.picto.ViajesViaticos;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ruben
 */
public class diagDetalles extends javax.swing.JDialog {
    
    private RendicionDeCuentas rendiciondecuenta;
    private DefaultTableModel modelohonorarios;
    private DefaultTableModel modelobecas;
    private DefaultTableModel modeloequipamiento;
    private DefaultTableModel modelomateriales;
    private DefaultTableModel modeloviajesviaticos;
    private DefaultTableModel modelotecnicos;
    private DefaultTableModel modelopublicaciones;
    private DefaultTableModel modeloadministracion;
    private DefaultTableModel modelobibliografia;
    private String tipo; 
    

    /** Creates new form diagDetalles */
    public diagDetalles(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public diagDetalles(java.awt.Frame parent, boolean modal,RendicionDeCuentas rendiciondecuenta,String tipo) {
        super(parent, modal);
        this.rendiciondecuenta=rendiciondecuenta;
        this.tipo=tipo;
        mostrar();
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabledetalle = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jScrollPane1.setViewportView(jTabledetalle);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(diagDetalles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(diagDetalles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(diagDetalles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(diagDetalles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                diagDetalles dialog = new diagDetalles(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTabledetalle;
    // End of variables declaration//GEN-END:variables

    public RendicionDeCuentas getRendiciondecuenta() {
        return rendiciondecuenta;
    }

    public void setRendiciondecuenta(RendicionDeCuentas rendiciondecuenta) {
        this.rendiciondecuenta = rendiciondecuenta;
    }


    
    
    private void modeloTablaHonorarios(){
        modelohonorarios=new DefaultTableModel();
        modelohonorarios.addColumn("Nombre y Apellido"); 
        modelohonorarios.addColumn("Fecha");
        modelohonorarios.addColumn("Aporte Institucion");
        modelohonorarios.addColumn("Otros Aportes");
        modelohonorarios.addColumn("Total");
    }
    
    private void modeloTablaBecas(){
        modelobecas=new DefaultTableModel();
        modelobecas.addColumn("Nombre y Apellido");
        modelobecas.addColumn("Fecha");
        modelobecas.addColumn("Aporte FONCYT");
        modelobecas.addColumn("Aporte Instutucion");
        modelobecas.addColumn("Otros Aportes");
        modelobecas.addColumn("Total");
    }
    
    private void modeloTablaEquipamiento(){
        modeloequipamiento=new DefaultTableModel();
        modeloequipamiento.addColumn("Datos Equipamiento");
        modeloequipamiento.addColumn("Datos Proveedor");
        modeloequipamiento.addColumn("Número Factura");
        modeloequipamiento.addColumn("Fecha");
        modeloequipamiento.addColumn("Aporte FONCYT");
        modeloequipamiento.addColumn("Aporte Institucion");
        modeloequipamiento.addColumn("OtrosAportes");
    }
    
    private void modeloTablaMateriales(){
        modelomateriales=new DefaultTableModel();
        modelomateriales.addColumn("Descripción");
        modelomateriales.addColumn("Datos Proveedor");
        modelomateriales.addColumn("Número Factura");
        modelomateriales.addColumn("Fecha");
        modelomateriales.addColumn("Aporte FONCYT");
        modelomateriales.addColumn("Aporte Institucion");
        modelomateriales.addColumn("OtrosAportes");
    }
    
    private void modeloTablaViajesViaticos(){
        modeloviajesviaticos=new DefaultTableModel();
        modeloviajesviaticos.addColumn("Nombre y Apellido");
        modeloviajesviaticos.addColumn("Lugar Destino");
        modeloviajesviaticos.addColumn("Fecha");
        modeloviajesviaticos.addColumn("Aporte FONCYT");
        modeloviajesviaticos.addColumn("Aporte Institucion");
        modeloviajesviaticos.addColumn("Otros Aportes");
    }
    
    private void modeloTablaTecnicos(){
        modelotecnicos=new DefaultTableModel();
        modelotecnicos.addColumn("Descripción");
        modelotecnicos.addColumn("Datos Proveedor");
        modelotecnicos.addColumn("Número Factura");
        modelotecnicos.addColumn("Fecha");
        modelotecnicos.addColumn("Aporte FONCYT");
        modelotecnicos.addColumn("Aporte Institucion");
        modelotecnicos.addColumn("OtrosAportes");
    }
    
    private void modeloTablaPublicaciones(){
        modelopublicaciones=new DefaultTableModel();
        modelopublicaciones.addColumn("Descripción");
        modelopublicaciones.addColumn("Datos Proveedor");
        modelopublicaciones.addColumn("Número Factura");
        modelopublicaciones.addColumn("Fecha");
        modelopublicaciones.addColumn("Aporte FONCYT");
        modelopublicaciones.addColumn("Aporte Institucion");
        modelopublicaciones.addColumn("OtrosAportes");
    }
    
    private void modeloTablaAdministracion(){
        modeloadministracion=new DefaultTableModel();
        modeloadministracion.addColumn("Número del Proyecto");
        modeloadministracion.addColumn("IB");
        modeloadministracion.addColumn("Número de Factura");
        modeloadministracion.addColumn("Fecha");
        modeloadministracion.addColumn("Aporte FONCYT");
        modeloadministracion.addColumn("Total");
    }
    
    private void modeloTablaBibliografia(){
        modelobibliografia=new DefaultTableModel();
        modelobibliografia.addColumn("Descripción");
        modelobibliografia.addColumn("Datos Proveedor");
        modelobibliografia.addColumn("Número Factura");
        modelobibliografia.addColumn("Fecha");
        modelobibliografia.addColumn("Aporte FONCYT");
        modelobibliografia.addColumn("Aporte Institucion");
        modelobibliografia.addColumn("OtrosAportes");
        modelobibliografia.addColumn("Total");
    }
    
    private void mostrar(){
        if(tipo.startsWith("a"))
            mostrarHonorarios();
        else if(tipo.startsWith("b"))
            mostrarBecas();
        else if(tipo.startsWith("c"))
            mostrarEquipamiento();
        else if(tipo.startsWith("d"))
            mostrarMateriales();
        else if(tipo.startsWith("e"))
            mostrarViajesViaticos();
        else if(tipo.startsWith("f"))
            mostrarTecnicos();
        else if(tipo.startsWith("g"))
            mostrarPublicaciones();
        else if(tipo.startsWith("h"))
            mostrarAdministracion();
        else if(tipo.startsWith("i"))
            mostrarBibliografia();
    }
    
    private void mostrarHonorarios(){
        try{
            Object[] fila=new Object[5];
            modeloTablaHonorarios();
            for(Honorarios e: rendiciondecuenta.getHonorarios()){
                //if(e!=null){
                fila[0]=e.getNombreyapellido();
                
                fila[1]=e.getFecha();
                
                fila[2]=e.getAporteinstitucion();
                fila[3]=e.getOtrosaportes();
                fila[4]=e.getTotal();
                modelohonorarios.addRow(fila);
               // }
                
            }
            jTabledetalle.setModel(modelohonorarios); 
        }catch(Exception ex){
            System.out.println(ex);
            
        }
    }

    private void mostrarBecas() {
        try{
            Object[] fila=new Object[5];
            modeloTablaBecas();
            for(Beca e: rendiciondecuenta.getBecas()){
                //if(e!=null){
                fila[0]=e.getNombreapellido();
                
                fila[1]=e.getFecha();
                
                fila[2]=e.getAportefoncyt();
                fila[3]=e.getAporteinstitucion();
                fila[4]=e.getOtrosaportes();
                 fila[5]=e.getTotal();
                modelobecas.addRow(fila);
               // }
                
            }
            jTabledetalle.setModel(modelobecas); 
        }catch(Exception ex){
            System.out.println(ex);
            
        }
    }

    private void mostrarEquipamiento() {
        try{
            Object[] fila=new Object[7];
            modeloTablaEquipamiento();
            for(Equipamiento e: rendiciondecuenta.getEquipamiento()){
                //if(e!=null){
                fila[0]=e.getDatosequipamiento();
                fila[1]=e.getDatosproveedor();
                fila[2]=e.getNumerofactura();
                fila[3]=e.getFecha();
                fila[4]=e.getAportefoncyt();
                fila[5]=e.getAporteinstitucion();
                fila[6]=e.getOtrosaportes();
                modeloequipamiento.addRow(fila);
               // }
                
            }
            jTabledetalle.setModel(modeloequipamiento); 
        }catch(Exception ex){
            System.out.println(ex);
            
        }
    }

    private void mostrarMateriales() {
        try{
            Object[] fila=new Object[7];
            modeloTablaMateriales();
            for(MaterialesEInsumos e: rendiciondecuenta.getMaterialeseinsumos()){
                if(e!=null){
                fila[0]=e.getDescripcion();
                fila[1]=e.getDatosproveedor();
                fila[2]=e.getNumerofactura();
                fila[3]=e.getFecha();
                fila[4]=e.getAportefoncyt();
                fila[5]=e.getAporteinstitucion();
                fila[6]=e.getOtrosaportes();
                modelomateriales.addRow(fila);
                }
                
            }
            jTabledetalle.setModel(modelomateriales); 
        }catch(Exception ex){
            System.out.println(ex);
            System.out.println(rendiciondecuenta.getMaterialeseinsumos());
        }
    }

    private void mostrarViajesViaticos() {
        try{
            Object[] fila=new Object[5];
            modeloTablaViajesViaticos();
            for(ViajesViaticos e: rendiciondecuenta.getViajesviaticos()){
                //if(e!=null){
                fila[0]=e.getNombreapellido();
                
                fila[1]=e.getDestino();
                
                fila[2]=e.getFecha();
                fila[3]=e.getAportefoncyt();
                fila[4]=e.getAporteinstitucion();
                 fila[5]=e.getOtrosaportes();
                modeloviajesviaticos.addRow(fila);
               // }
                
            }
            jTabledetalle.setModel(modeloviajesviaticos); 
        }catch(Exception ex){
            System.out.println(ex);
            
        }
    }

    private void mostrarTecnicos() {
        try{
            Object[] fila=new Object[7];
            modeloTablaTecnicos();
            for(Tecnicos e: rendiciondecuenta.getServiciostecnicos()){
                //if(e!=null){
                fila[0]=e.getDescripcion();
                fila[1]=e.getDatosproveedor();
                fila[2]=e.getNumerofactura();
                fila[3]=e.getFecha();
                fila[4]=e.getAportefoncyt();
                fila[5]=e.getAporteinstitucion();
                fila[6]=e.getOtrosaportes();
                modelotecnicos.addRow(fila);
               // }
                
            }
            jTabledetalle.setModel(modelotecnicos); 
        }catch(Exception ex){
            System.out.println(ex);
            
        }
    }

    private void mostrarPublicaciones() {
        try{
            Object[] fila=new Object[7];
            modeloTablaPublicaciones();
            for(Publicaciones e: rendiciondecuenta.getPublicaciones()){
                //if(e!=null){
                fila[0]=e.getDescripcion();
                fila[1]=e.getDatosproveedor();
                fila[2]=e.getNumerofactura();
                fila[3]=e.getFecha();
                fila[4]=e.getAportefoncyt();
                fila[5]=e.getAporteinstitucion();
                fila[6]=e.getOtrosaportes();
                modelopublicaciones.addRow(fila);
               // }
                
            }
            jTabledetalle.setModel(modelopublicaciones); 
        }catch(Exception ex){
            System.out.println(ex);
            
        }
    }

    private void mostrarAdministracion() {
        try{
            Object[] fila=new Object[5];
            modeloTablaAdministracion();
            for(AdministracionSubsidio e: rendiciondecuenta.getGastosadministracion()){
                //if(e!=null){
                fila[0]=e.getNumeroproyecto();
                
                fila[1]=e.getIb();
                
                fila[2]=e.getNumerofactura();
                fila[3]=e.getFecha();
                fila[4]=e.getAportefoncyt();
                 fila[5]=e.getTotal();
                modeloadministracion.addRow(fila);
               // }
                
            }
            jTabledetalle.setModel(modeloadministracion); 
        }catch(Exception ex){
            System.out.println(ex);
            
        }
    }

    private void mostrarBibliografia() {
        try{
            Object[] fila=new Object[7];
            modeloTablaBibliografia();
            for(Bibliografia e: rendiciondecuenta.getBibliografia()){
                //if(e!=null){
                fila[0]=e.getDescripcion();
                fila[1]=e.getDatosproveedor();
                fila[2]=e.getNumerofactura();
                fila[3]=e.getFecha();
                fila[4]=e.getAportefoncyt();
                fila[5]=e.getAporteinstitucion();
                fila[6]=e.getOtrosaportes();
                modelobibliografia.addRow(fila);
               // }
                
            }
            jTabledetalle.setModel(modelobibliografia); 
        }catch(Exception ex){
            System.out.println(ex);
            
        }
    }

}
