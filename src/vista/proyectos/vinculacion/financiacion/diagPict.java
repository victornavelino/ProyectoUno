/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * diagPict.java
 *
 * Created on 04/09/2012, 14:46:41
 */
package vista.proyectos.vinculacion.financiacion;

import entidades.proyecto.vinculacion.FondosySaldos;
import entidades.proyecto.vinculacion.Movimiento;
import entidades.proyecto.vinculacion.NotaExterna;
import entidades.proyecto.vinculacion.NotaInterna;
import entidades.proyecto.vinculacion.ProyectoVinculacion;
import entidades.proyecto.vinculacion.financiacion.FinanciacionPict;
import entidades.proyecto.vinculacion.financiacion.picto.*;
import entidades.usuario.Usuario;
import facade.ConexionFacade;
import facade.proyecto.vinculacion.PictFacade;
import includes.Comunes;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashSet;
import java.util.List;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import jxl.Cell;
import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;
import reportes.Maestro;
import vista.proyectos.vinculacion.financiacion.picto.*;
import vista.proyectos.vinculacion.seguimiento.diagNotaExterna;
import vista.proyectos.vinculacion.seguimiento.diagNotaInterna;

/**
 *
 * @author ruben
 */
public class diagPict extends javax.swing.JDialog {

    private String tipoOperacion;
    private Usuario usuario;
    private FinanciacionPict pict;
    private DefaultTableModel tablaPresupuesto;
    private DefaultTableModel modeloNotasExternas;
    private DefaultTableModel modeloNotasInternas;
    private List<GrupoColaborador> gc = new ArrayList<>();
    private List<GrupoResponsable> gr = new ArrayList<>();
    private List<Impacto> impacto = new ArrayList<>();
    private List<Item> items = new ArrayList<>();
    private List<NotaExterna> notasExternas = new ArrayList<>();
    private List<NotaInterna> notasInternas = new ArrayList<>();
    private List a単os;
    private ProyectoVinculacion proyectoVinculacion;
    private String patron = "dd/MM/yyyy";
    private SimpleDateFormat formato = new SimpleDateFormat(patron);
    private String rutaArchivo;
    private Movimiento op;
    private FondosySaldos fys;
    private DefaultTableModel tablaMovimientos;
    private List<FondosySaldos> fondos=new ArrayList();
    private EntityManagerFactory emf=Persistence.createEntityManagerFactory("ProyectoUnoPU", ConexionFacade.PROPIEDADES);
    private RendicionDeCuentas rendiciondecuentas;
    private List<RendicionDeCuentas> listaCuentas=new ArrayList();
    private DefaultTableModel tablaRendicionCuenta;
    
    private DefaultTableModel modelohonorarios;
    private DefaultTableModel modelobecas;
    private DefaultTableModel modeloequipamiento;
    private DefaultTableModel modelomateriales;
    private DefaultTableModel modeloviajesviaticos;
    private DefaultTableModel modelotecnicos;
    private DefaultTableModel modelopublicaciones;
    private DefaultTableModel modeloadministracion;
    private DefaultTableModel modelobibliografia;

    /**
     * Creates new form diagPict
     */
    public diagPict(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public diagPict(java.awt.Frame parent, boolean modal, String tipoOperacion,
            Usuario usuario) {
        super(parent, modal);
        this.tipoOperacion = tipoOperacion;
        this.usuario = usuario;
        initComponents();
        inicializarComponentes();

    }

    public diagPict(java.awt.Frame parent, boolean modal, String tipoOperacion,
            Usuario usuario, FinanciacionPict pict, ProyectoVinculacion ProyectoVinculacion) {
        super(parent, modal);
        this.tipoOperacion = tipoOperacion;
        this.usuario = usuario;
        this.pict = pict;
        this.proyectoVinculacion = ProyectoVinculacion;
        initComponents();
        inicializarComponentes();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTfareatematica = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTfcategoria = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTfinstben = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTfduracion = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTfrepinstben = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTainstproyecto = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListGR = new javax.swing.JList();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListGC = new javax.swing.JList();
        jBtnagregarGR = new javax.swing.JButton();
        jBtnagregarGC = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jListimpacto = new javax.swing.JList();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTAdescripcion = new javax.swing.JTextArea();
        jBtnagregarimpacto = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jTftotal = new javax.swing.JTextField();
        jBtnagregaritem = new javax.swing.JButton();
        jBtneliminarItem = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jTftotalxa単o = new javax.swing.JTextField();
        jBtntotalxa単o = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTfa単o = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jtfTotalContraparte = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jtfTotalSubsidio = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTableNE = new javax.swing.JTable();
        jBtnAgregarNE = new javax.swing.JButton();
        jBtnEliminarNE = new javax.swing.JButton();
        jBtnReporteNe = new javax.swing.JButton();
        jBtnEliminarNE1 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTableNI = new javax.swing.JTable();
        jBtnAgregarNI = new javax.swing.JButton();
        jBtnEliminarNI = new javax.swing.JButton();
        jBtnReporteNi = new javax.swing.JButton();
        jBtnEliminarNI1 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jBtnBuscarArchivo = new javax.swing.JButton();
        jBtnAceptarArchivo = new javax.swing.JButton();
        jTfrutaArchivo = new javax.swing.JTextField();
        jBtnCancelarArchivo = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTableMovimientos = new javax.swing.JTable();
        jScrollPane10 = new javax.swing.JScrollPane();
        jListFondos = new javax.swing.JList();
        jLabel14 = new javax.swing.JLabel();
        jBtnEliminarFondos = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTableRendicionCuenta = new javax.swing.JTable();
        jPanel12 = new javax.swing.JPanel();
        jBtnBuscarRendicion = new javax.swing.JButton();
        jBtnAceptarRendicion = new javax.swing.JButton();
        jBtnCancelarRendicion = new javax.swing.JButton();
        jTfRendicionCuenta = new javax.swing.JTextField();
        jScrollPane12 = new javax.swing.JScrollPane();
        jListRendicion = new javax.swing.JList();
        jLabel15 = new javax.swing.JLabel();
        jBtnEliminarRendicion = new javax.swing.JButton();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTabledetalle = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();
        jBtnaceptar = new javax.swing.JButton();
        jBtnreporte = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.title")); // NOI18N

        jPanel1.setEnabled(false);

        jLabel1.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jLabel1.text")); // NOI18N

        jTfareatematica.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jTfareatematica.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jLabel2.text")); // NOI18N

        jTfcategoria.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jTfcategoria.text")); // NOI18N

        jLabel3.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jLabel3.text")); // NOI18N

        jTfinstben.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jTfinstben.text")); // NOI18N

        jLabel4.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jLabel4.text")); // NOI18N

        jTfduracion.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jTfduracion.text")); // NOI18N

        jLabel5.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jLabel5.text")); // NOI18N

        jTfrepinstben.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jTfrepinstben.text")); // NOI18N

        jLabel6.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jLabel6.text")); // NOI18N

        jTainstproyecto.setColumns(20);
        jTainstproyecto.setLineWrap(true);
        jTainstproyecto.setRows(5);
        jScrollPane1.setViewportView(jTainstproyecto);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTfrepinstben, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)
                            .addComponent(jTfareatematica, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTfinstben)
                            .addComponent(jTfcategoria)
                            .addComponent(jTfduracion)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTfareatematica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTfcategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTfinstben, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTfduracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTfrepinstben, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(264, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        jLabel7.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jLabel7.text")); // NOI18N

        jScrollPane2.setViewportView(jListGR);

        jLabel8.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jLabel8.text")); // NOI18N

        jScrollPane3.setViewportView(jListGC);

        jBtnagregarGR.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jBtnagregarGR.text")); // NOI18N
        jBtnagregarGR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnagregarGRActionPerformed(evt);
            }
        });

        jBtnagregarGC.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jBtnagregarGC.text")); // NOI18N
        jBtnagregarGC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnagregarGCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnagregarGR))
                .addGap(53, 53, 53)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtnagregarGC)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
                    .addComponent(jLabel8))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnagregarGR)
                    .addComponent(jBtnagregarGC))
                .addContainerGap(296, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        jLabel9.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jLabel9.text")); // NOI18N

        jListimpacto.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListimpactoValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(jListimpacto);

        jLabel10.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jLabel10.text")); // NOI18N

        jTAdescripcion.setColumns(20);
        jTAdescripcion.setRows(5);
        jScrollPane5.setViewportView(jTAdescripcion);

        jBtnagregarimpacto.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jBtnagregarimpacto.text")); // NOI18N
        jBtnagregarimpacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnagregarimpactoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(59, 59, 59)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)))
                    .addComponent(jBtnagregarimpacto))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jBtnagregarimpacto)
                .addContainerGap(300, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane6.setViewportView(jTable1);

        jLabel11.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jLabel11.text")); // NOI18N

        jTftotal.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jTftotal.text")); // NOI18N

        jBtnagregaritem.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jBtnagregaritem.text")); // NOI18N
        jBtnagregaritem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnagregaritemActionPerformed(evt);
            }
        });

        jBtneliminarItem.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jBtneliminarItem.text")); // NOI18N
        jBtneliminarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtneliminarItemActionPerformed(evt);
            }
        });

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jPanel8.border.title"))); // NOI18N

        jTftotalxa単o.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jTftotalxa単o.text")); // NOI18N

        jBtntotalxa単o.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jBtntotalxa単o.text")); // NOI18N
        jBtntotalxa単o.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtntotalxa単oActionPerformed(evt);
            }
        });

        jLabel12.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jLabel12.text")); // NOI18N

        jLabel13.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jLabel13.text")); // NOI18N

        jTfa単o.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jTfa単o.text")); // NOI18N

        jLabel16.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jLabel16.text")); // NOI18N

        jtfTotalContraparte.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jtfTotalContraparte.text")); // NOI18N
        jtfTotalContraparte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfTotalContraparteActionPerformed(evt);
            }
        });

        jLabel17.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jLabel17.text")); // NOI18N

        jtfTotalSubsidio.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jtfTotalSubsidio.text")); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(26, 26, 26)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTfa単o, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtntotalxa単o)))
                    .addComponent(jLabel13)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfTotalContraparte, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                            .addComponent(jtfTotalSubsidio)
                            .addComponent(jTftotalxa単o))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTfa単o, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jBtntotalxa単o)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jtfTotalContraparte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfTotalSubsidio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTftotalxa単o, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(jTftotal, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jBtnagregaritem)
                            .addComponent(jBtneliminarItem))
                        .addGap(0, 224, Short.MAX_VALUE))
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jTftotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jBtnagregaritem)
                        .addGap(18, 18, 18)
                        .addComponent(jBtneliminarItem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(280, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jPanel4.TabConstraints.tabTitle"), jPanel4); // NOI18N

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jPanel6.border.title"))); // NOI18N

        jTableNE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane7.setViewportView(jTableNE);

        jBtnAgregarNE.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jBtnAgregarNE.text")); // NOI18N
        jBtnAgregarNE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAgregarNEActionPerformed(evt);
            }
        });

        jBtnEliminarNE.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jBtnEliminarNE.text")); // NOI18N
        jBtnEliminarNE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEliminarNEActionPerformed(evt);
            }
        });

        jBtnReporteNe.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jBtnReporteNe.text")); // NOI18N
        jBtnReporteNe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnReporteNeActionPerformed(evt);
            }
        });

        jBtnEliminarNE1.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jBtnEliminarNE1.text")); // NOI18N
        jBtnEliminarNE1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEliminarNE1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 697, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jBtnEliminarNE1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtnEliminarNE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtnReporteNe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jBtnAgregarNE, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jBtnAgregarNE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBtnEliminarNE1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBtnEliminarNE, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnReporteNe)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jPanel7.border.title"))); // NOI18N

        jScrollPane8.setViewportView(jTableNI);

        jBtnAgregarNI.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jBtnAgregarNI.text")); // NOI18N
        jBtnAgregarNI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAgregarNIActionPerformed(evt);
            }
        });

        jBtnEliminarNI.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jBtnEliminarNI.text")); // NOI18N
        jBtnEliminarNI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEliminarNIActionPerformed(evt);
            }
        });

        jBtnReporteNi.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jBtnReporteNi.text")); // NOI18N
        jBtnReporteNi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnReporteNiActionPerformed(evt);
            }
        });

        jBtnEliminarNI1.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jBtnEliminarNI1.text")); // NOI18N
        jBtnEliminarNI1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEliminarNI1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 696, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jBtnEliminarNI1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtnEliminarNI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtnAgregarNI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtnReporteNi, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jBtnAgregarNI)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnEliminarNI1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnEliminarNI)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnReporteNi)
                        .addGap(0, 98, Short.MAX_VALUE))
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(16, 16, 16))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(16, Short.MAX_VALUE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(93, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jPanel5.TabConstraints.tabTitle"), jPanel5); // NOI18N

        jPanel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jBtnBuscarArchivo.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jBtnBuscarArchivo.text")); // NOI18N
        jBtnBuscarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnBuscarArchivoActionPerformed(evt);
            }
        });

        jBtnAceptarArchivo.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jBtnAceptarArchivo.text")); // NOI18N
        jBtnAceptarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAceptarArchivoActionPerformed(evt);
            }
        });

        jTfrutaArchivo.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jTfrutaArchivo.text")); // NOI18N

        jBtnCancelarArchivo.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jBtnCancelarArchivo.text")); // NOI18N
        jBtnCancelarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCancelarArchivoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jBtnCancelarArchivo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtnAceptarArchivo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtnBuscarArchivo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTfrutaArchivo, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtnBuscarArchivo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnAceptarArchivo)
                    .addComponent(jTfrutaArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtnCancelarArchivo)
                .addContainerGap())
        );

        jScrollPane9.setViewportView(jTableMovimientos);

        jListFondos.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListFondosValueChanged(evt);
            }
        });
        jScrollPane10.setViewportView(jListFondos);

        jLabel14.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jLabel14.text")); // NOI18N

        jBtnEliminarFondos.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jBtnEliminarFondos.text")); // NOI18N
        jBtnEliminarFondos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEliminarFondosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 587, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtnEliminarFondos)
                        .addGap(94, 94, 94))))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBtnEliminarFondos)))
                .addContainerGap())
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jPanel9.TabConstraints.tabTitle"), jPanel9); // NOI18N

        jTableRendicionCuenta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableRendicionCuentaMouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(jTableRendicionCuenta);

        jPanel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jBtnBuscarRendicion.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jBtnBuscarRendicion.text")); // NOI18N
        jBtnBuscarRendicion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnBuscarRendicionActionPerformed(evt);
            }
        });

        jBtnAceptarRendicion.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jBtnAceptarRendicion.text")); // NOI18N
        jBtnAceptarRendicion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAceptarRendicionActionPerformed(evt);
            }
        });

        jBtnCancelarRendicion.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jBtnCancelarRendicion.text")); // NOI18N
        jBtnCancelarRendicion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCancelarRendicionActionPerformed(evt);
            }
        });

        jTfRendicionCuenta.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jTfRendicionCuenta.text")); // NOI18N

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jBtnCancelarRendicion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtnAceptarRendicion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtnBuscarRendicion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jTfRendicionCuenta, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtnBuscarRendicion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnAceptarRendicion)
                    .addComponent(jTfRendicionCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtnCancelarRendicion)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jListRendicion.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListRendicionValueChanged(evt);
            }
        });
        jScrollPane12.setViewportView(jListRendicion);

        jLabel15.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jLabel15.text")); // NOI18N

        jBtnEliminarRendicion.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jBtnEliminarRendicion.text")); // NOI18N
        jBtnEliminarRendicion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEliminarRendicionActionPerformed(evt);
            }
        });

        jScrollPane13.setViewportView(jTabledetalle);

        jLabel18.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jLabel18.text")); // NOI18N

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 860, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 608, Short.MAX_VALUE)
                            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                                .addComponent(jBtnEliminarRendicion)
                                .addGap(85, 85, 85))))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBtnEliminarRendicion))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18)
                .addGap(3, 3, 3)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jPanel11.TabConstraints.tabTitle"), jPanel11); // NOI18N

        jBtnaceptar.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jBtnaceptar.text")); // NOI18N
        jBtnaceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnaceptarActionPerformed(evt);
            }
        });

        jBtnreporte.setText(org.openide.util.NbBundle.getMessage(diagPict.class, "diagPict.jBtnreporte.text")); // NOI18N
        jBtnreporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnreporteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(305, 305, 305)
                .addComponent(jBtnaceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtnreporte)
                .addContainerGap())
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnaceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnreporte))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnagregarGRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnagregarGRActionPerformed
        agregarGR();
    }//GEN-LAST:event_jBtnagregarGRActionPerformed

    private void jBtnagregarGCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnagregarGCActionPerformed
        agregarGC();
    }//GEN-LAST:event_jBtnagregarGCActionPerformed

    private void jBtnagregarimpactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnagregarimpactoActionPerformed
        agregarImpacto();
    }//GEN-LAST:event_jBtnagregarimpactoActionPerformed

    private void jBtnagregaritemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnagregaritemActionPerformed
        agregarItem();
        mostrarPresupuesto();
    }//GEN-LAST:event_jBtnagregaritemActionPerformed

    private void jBtnaceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnaceptarActionPerformed
        aceptar();
    }//GEN-LAST:event_jBtnaceptarActionPerformed

    private void jListimpactoValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListimpactoValueChanged
        mostrarDetalleImpacto();
    }//GEN-LAST:event_jListimpactoValueChanged

    private void jBtnreporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnreporteActionPerformed
        if (tipoOperacion.equals("Modificacion")) {
            reporte();
        }
    }//GEN-LAST:event_jBtnreporteActionPerformed

    private void jBtnAgregarNEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAgregarNEActionPerformed
        agregarNotaExterna();
    }//GEN-LAST:event_jBtnAgregarNEActionPerformed

    private void jBtnEliminarNEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEliminarNEActionPerformed
        eliminarNotaExterna();
    }//GEN-LAST:event_jBtnEliminarNEActionPerformed

    private void jBtnAgregarNIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAgregarNIActionPerformed
        agregarNotaInterna();
    }//GEN-LAST:event_jBtnAgregarNIActionPerformed

    private void jBtnEliminarNIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEliminarNIActionPerformed
        eliminarNotaInterna();
    }//GEN-LAST:event_jBtnEliminarNIActionPerformed

    private void jBtneliminarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtneliminarItemActionPerformed
        eliminarItem();
    }//GEN-LAST:event_jBtneliminarItemActionPerformed

    private void jBtntotalxa単oActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtntotalxa単oActionPerformed
        cargarTotales();
    }//GEN-LAST:event_jBtntotalxa単oActionPerformed

    private void jBtnReporteNiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnReporteNiActionPerformed
        if(!notasInternas.isEmpty()){
            reporteSeguimientoNi();
        }
    }//GEN-LAST:event_jBtnReporteNiActionPerformed

    private void jBtnReporteNeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnReporteNeActionPerformed
        if(!notasExternas.isEmpty()){
            reporteSeguimientoNe();
        }
    }//GEN-LAST:event_jBtnReporteNeActionPerformed

    private void jBtnBuscarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnBuscarArchivoActionPerformed
        buscarArchivo();
    }//GEN-LAST:event_jBtnBuscarArchivoActionPerformed

    private void jBtnAceptarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAceptarArchivoActionPerformed
        if(rutaArchivo!=null){
        Importar();
        cargarFondos();
        }else{
            JOptionPane.showMessageDialog(rootPane, "Debe buscar el archivo a importar", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBtnAceptarArchivoActionPerformed

    private void jBtnCancelarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCancelarArchivoActionPerformed
        jTfrutaArchivo.setText("");
        rutaArchivo="";
    }//GEN-LAST:event_jBtnCancelarArchivoActionPerformed

    private void jListFondosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListFondosValueChanged
        mostrarMovimientos();
    }//GEN-LAST:event_jListFondosValueChanged

    private void jBtnEliminarFondosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEliminarFondosActionPerformed
        eliminarFondos();
    }//GEN-LAST:event_jBtnEliminarFondosActionPerformed

    private void jBtnBuscarRendicionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnBuscarRendicionActionPerformed
        buscarArchivoRendicion();
    }//GEN-LAST:event_jBtnBuscarRendicionActionPerformed

    private void jBtnCancelarRendicionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCancelarRendicionActionPerformed
        jTfRendicionCuenta.setText("");
        rutaArchivo="";
    }//GEN-LAST:event_jBtnCancelarRendicionActionPerformed

    private void jBtnAceptarRendicionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAceptarRendicionActionPerformed
        if(rutaArchivo!=null){
            ImportarExcel.getInstance().importar(rutaArchivo);
            rendiciondecuentas=ImportarExcel.getInstance().getRendicionDeCuentas();
            if(rendiciondecuentas!=null){
                listaCuentas.add(rendiciondecuentas);
                cargarRendiciones();
            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "Debe buscar el archivo a importar", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBtnAceptarRendicionActionPerformed

    private void jBtnEliminarRendicionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEliminarRendicionActionPerformed
        eliminarRendicion();
    }//GEN-LAST:event_jBtnEliminarRendicionActionPerformed

    private void jListRendicionValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListRendicionValueChanged
        mostrarRendiciones();
    }//GEN-LAST:event_jListRendicionValueChanged

    private void jTableRendicionCuentaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableRendicionCuentaMouseClicked
        mostrarDetalles();
    }//GEN-LAST:event_jTableRendicionCuentaMouseClicked

    private void jtfTotalContraparteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfTotalContraparteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfTotalContraparteActionPerformed

    private void jBtnEliminarNE1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEliminarNE1ActionPerformed
               modificarNotaExterna();        // TODO add your handling code here:
 // TODO add your handling code here:
    }//GEN-LAST:event_jBtnEliminarNE1ActionPerformed

    private void jBtnEliminarNI1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEliminarNI1ActionPerformed
        modificarNotaInterna();        // TODO add your handling code here:
    }//GEN-LAST:event_jBtnEliminarNI1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                diagPict dialog = new diagPict(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAceptarArchivo;
    private javax.swing.JButton jBtnAceptarRendicion;
    private javax.swing.JButton jBtnAgregarNE;
    private javax.swing.JButton jBtnAgregarNI;
    private javax.swing.JButton jBtnBuscarArchivo;
    private javax.swing.JButton jBtnBuscarRendicion;
    private javax.swing.JButton jBtnCancelarArchivo;
    private javax.swing.JButton jBtnCancelarRendicion;
    private javax.swing.JButton jBtnEliminarFondos;
    private javax.swing.JButton jBtnEliminarNE;
    private javax.swing.JButton jBtnEliminarNE1;
    private javax.swing.JButton jBtnEliminarNI;
    private javax.swing.JButton jBtnEliminarNI1;
    private javax.swing.JButton jBtnEliminarRendicion;
    private javax.swing.JButton jBtnReporteNe;
    private javax.swing.JButton jBtnReporteNi;
    private javax.swing.JButton jBtnaceptar;
    private javax.swing.JButton jBtnagregarGC;
    private javax.swing.JButton jBtnagregarGR;
    private javax.swing.JButton jBtnagregarimpacto;
    private javax.swing.JButton jBtnagregaritem;
    private javax.swing.JButton jBtneliminarItem;
    private javax.swing.JButton jBtnreporte;
    private javax.swing.JButton jBtntotalxa単o;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jListFondos;
    private javax.swing.JList jListGC;
    private javax.swing.JList jListGR;
    private javax.swing.JList jListRendicion;
    private javax.swing.JList jListimpacto;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextArea jTAdescripcion;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTableMovimientos;
    private javax.swing.JTable jTableNE;
    private javax.swing.JTable jTableNI;
    private javax.swing.JTable jTableRendicionCuenta;
    private javax.swing.JTable jTabledetalle;
    private javax.swing.JTextArea jTainstproyecto;
    private javax.swing.JTextField jTfRendicionCuenta;
    private javax.swing.JTextField jTfareatematica;
    private javax.swing.JTextField jTfa単o;
    private javax.swing.JTextField jTfcategoria;
    private javax.swing.JTextField jTfduracion;
    private javax.swing.JTextField jTfinstben;
    private javax.swing.JTextField jTfrepinstben;
    private javax.swing.JTextField jTfrutaArchivo;
    private javax.swing.JTextField jTftotal;
    private javax.swing.JTextField jTftotalxa単o;
    private javax.swing.JTextField jtfTotalContraparte;
    private javax.swing.JTextField jtfTotalSubsidio;
    // End of variables declaration//GEN-END:variables

    private void inicializarComponentes() {
        
            jTabbedPane1.setEnabledAt(0,false);
            jTabbedPane1.setEnabledAt(1,false);
            jTabbedPane1.setEnabledAt(2,false);
            jTabbedPane1.setEnabledAt(4,false);
            jTabbedPane1.setSelectedIndex(3);
        if (tipoOperacion.equals("Alta")) {
        } else if (tipoOperacion.equals("Modificacion")) {
            try{
            mostrarMasDatos();
            mostrarRecursosHumanos();
            mostrarImpactos();
            mostrarPresupuesto();
            cargarNotasExternas();
            cargarNotasInternas();
            cargarFondos();
            cargarRendiciones();

            }catch(Exception ex){
                System.out.println(ex.getMessage());
            }
        } else if (tipoOperacion.equals("Consulta")) {
        }
    }

    private void mostrarMasDatos() {
        try{
        if (pict != null) {
            if (pict.getAreaTematica() != null) {
                jTfareatematica.setText(pict.getAreaTematica());
            }
            if (pict.getCategoria() != null) {
                jTfcategoria.setText(pict.getCategoria());
            }
            if (pict.getDuracion() != 0) {
                jTfduracion.setText(String.valueOf(pict.getDuracion()));
            }
            if (pict.getInstitucionbeneficiaria() != null) {
                jTfinstben.setText(pict.getInstitucionbeneficiaria());
            }
            if (pict.getRepresentanteinstben() != null) {
                jTfrepinstben.setText(pict.getRepresentanteinstben());
            }
            if (pict.getInstitucionesproyecto() != null) {
                jTainstproyecto.setText(pict.getInstitucionesproyecto());
            }
            if (pict.getItems() != null){
                items = pict.getItems();
                
            }
        }
        }catch(Exception ex){
            System.out.println(ex.getMessage());
        }
    }

    private void mostrarRecursosHumanos() {
        try{
        if (pict != null) {
            if (!pict.getGr().isEmpty()) {
                Comunes.cargarJList(jListGR, pict.getGr());
                gr = pict.getGr();
            }
            if (!pict.getGc().isEmpty()) {
                Comunes.cargarJList(jListGC, pict.getGc());
                gc = pict.getGc();
            }
        } else {
            if (!gr.isEmpty()) {
                Comunes.cargarJList(jListGR, gr);
            }
            if (!gc.isEmpty()) {
                Comunes.cargarJList(jListGC, gc);
            }
        }
        }catch(Exception ex){
            System.out.println(ex.getMessage());
        }
    }

    private void mostrarImpactos() {
        try{
        if (pict != null) {
            if (!pict.getImpacto().isEmpty()) {
                Comunes.cargarJList(jListimpacto, pict.getImpacto());
                impacto = pict.getImpacto();
            }
        } else {
            Comunes.cargarJList(jListimpacto, impacto);

        }
        }catch(Exception ex){
            
        }
    }

    private void mostrarDetalleImpacto() {
        try{
        Impacto imp = (Impacto) jListimpacto.getSelectedValue();
        jTAdescripcion.setText(imp.getDescripcion());
        }catch(Exception ex){
            System.out.println(ex.getMessage());
        }
    }

    private void mostrarPresupuesto() {
        try{
        modeloTabla();
        Object[] fila = new Object[5];
        float total = 0;
        if (!items.isEmpty()) {
            for (Item i : items) {
                fila[0] = i.getA単o();
                fila[1] = i.getRubro().toString();
                fila[2] = i.getDescripcion();
                fila[3] = i.getMontosubsidio();
                fila[4] = i.getMontocontraparte();
                total += i.getMontocontraparte()
                        + i.getMontosubsidio();
                tablaPresupuesto.addRow(fila);
            }
        }
        jTable1.setModel(tablaPresupuesto);
        jTftotal.setText(String.valueOf(total));
        }catch(Exception ex){
            System.out.println(ex.getMessage());
        }
    }

    private void cargarTotales() {
        float total = 0;
        float totalContraparte = 0;
        float totalSubsidio = 0;
        try {
            int a単o = Integer.parseInt(jTfa単o.getText());
            if (!items.isEmpty()) {
                for (Item i : items) {
                    if (i.getA単o() == a単o) {
                        totalContraparte += i.getMontocontraparte();
                        totalSubsidio += i.getMontosubsidio();
                        total += i.getMontocontraparte()
                                + i.getMontosubsidio();
                    }
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "A単o Incorrecto", "Error", JOptionPane.ERROR_MESSAGE);
        }
        jTftotalxa単o.setText(String.valueOf(total));    
        jtfTotalContraparte.setText(String.valueOf(totalContraparte));    
        jtfTotalSubsidio.setText(String.valueOf(totalSubsidio));    

        
    }
    private void eliminarItem() {
        if (jTable1.getSelectedRow() != -1) {
            int i = jTable1.getSelectedRow();
            items.remove(i);
            mostrarPresupuesto();
        }
    }

    private void agregarNotaExterna() {
        diagNotaExterna notaExterna = new diagNotaExterna(null, true, "Alta", usuario);
        notaExterna.setLocation(Comunes.centrarDialog(notaExterna));
        notaExterna.setVisible(true);
        if (notaExterna.getNotaExternaCreada() != null) {
            notasExternas.add(notaExterna.getNotaExternaCreada());
            cargarNotasExternas();
        }
    }

    private void eliminarNotaExterna() {
        if (jTableNE.getSelectedRow() != -1) {
            int i = jTableNE.getSelectedRow();
            notasExternas.remove(i);
            cargarNotasExternas();
        }
    }

    private void agregarNotaInterna() {
        diagNotaInterna notaInterna = new diagNotaInterna(null, true, "Alta", usuario);
        notaInterna.setLocation(Comunes.centrarDialog(notaInterna));
        notaInterna.setVisible(true);
        if (notaInterna.getNotaInternaCreada() != null) {
            notasInternas.add(notaInterna.getNotaInternaCreada());
            cargarNotasInternas();
        }
    }

 private void modificarNotaExterna() {
        if (jTableNE.getSelectedRow() != -1) {
        
        //String nroNota = (Object) jTableNotasExternas.getValueAt(jTableNotasExternas.getSelectedRow(), selectedColumnIndex);
        NotaExterna ne = notasExternas.get(jTableNE.getSelectedRow());

        diagNotaExterna notaExterna = new diagNotaExterna(null, true, "Modificaci坦n", usuario, ne);
        notaExterna.setLocation(Comunes.centrarDialog(notaExterna));
        notaExterna.setVisible(true);
        if (notaExterna.getNotaExternaCreada() != null) {
          notasExternas.remove(ne);
                      
            notasExternas.add(notaExterna.getNotaExternaCreada());
            cargarNotasExternas();
        }
    }
    }

    private void modificarNotaInterna() {
        if (jTableNI.getSelectedRow() != -1) {
        
        //String nroNota = (Object) jTableNotasInternas.getValueAt(jTableNotasInternas.getSelectedRow(), selectedColumnIndex);
        NotaInterna ne = notasInternas.get(jTableNI.getSelectedRow());
        diagNotaInterna notaInterna = new diagNotaInterna(null, true, "Modificaci坦n", usuario, ne);
        notaInterna.setLocation(Comunes.centrarDialog(notaInterna));
        notaInterna.setVisible(true);
        if (notaInterna.getNotaInternaCreada() != null) {
            notasInternas.remove(ne);
            notasInternas.add(notaInterna.getNotaInternaCreada());
            cargarNotasInternas();
        }
    }
    }
    private void eliminarNotaInterna() {
        if (jTableNI.getSelectedRow() != -1) {
            int i = jTableNI.getSelectedRow();
            notasInternas.remove(i);
            cargarNotasInternas();
        }

    }
    
    Comparator<NotaExterna> comparadorNe=new Comparator<NotaExterna>(){
       
        public int compare(NotaExterna a,NotaExterna b){
            return(a.getFecha().compareTo(b.getFecha()));
        }

    };
    
    Comparator<NotaInterna> comparadorNi=new Comparator<NotaInterna>(){
       
        public int compare(NotaInterna a,NotaInterna b){
            return(a.getFecha().compareTo(b.getFecha()));
        }

    };

    private void cargarNotasExternas() {
        try{
        Object[] fila = new Object[6];
        modeloTablaNotasExternas();
        if (pict != null) {
            notasExternas = pict.getNotasExternas();
        }
        if (!notasExternas.isEmpty()) {
            Collections.sort(notasExternas,comparadorNe);
            for (NotaExterna n : notasExternas) {

                fila[0] = formato.format(n.getFecha());
                fila[1] = n.getNroNota();
                fila[2] = n.getMotivo();
                fila[3] = formato.format(n.getFechaDeRecibidoMesaDeEntrada());
                fila[4] = formato.format(n.getFechaAprobacion());
                fila[5] = formato.format(n.getFechaDesembolso());
                modeloNotasExternas.addRow(fila);

            }
        }
        jTableNE.setModel(modeloNotasExternas);
        }catch(Exception ex){
            System.out.println(ex.getMessage());
        }
    }

    private void cargarNotasInternas() {
        try{
        Object[] fila = new Object[5];
        modeloTablaNotasInternas();
        if (pict != null) {
            notasInternas = pict.getNotasInternas();
        }
        if (!notasInternas.isEmpty()) {
            Collections.sort(notasInternas,comparadorNi);
            for (NotaInterna n : notasInternas) {

                fila[0] = formato.format(n.getFecha());
                fila[1] = n.getNroNota();
                fila[2] = n.getMotivo();
                fila[3] = formato.format(n.getFechaDeRecibidoMesaDeEntrada());
                fila[4] = formato.format(n.getFechaDesembolso());
                modeloNotasInternas.addRow(fila);

            }
        }
        jTableNI.setModel(modeloNotasInternas);
        }catch(Exception ex){
            System.out.println(ex.getMessage());
        }
    }

    private void inhabilitarCampos() {
        jTAdescripcion.setEditable(false);
        jTainstproyecto.setEditable(false);
        jTfareatematica.setEditable(false);
        jTfcategoria.setEditable(false);
        jTfduracion.setEditable(false);
        jTfrepinstben.setEditable(false);
        jTfinstben.setEditable(false);
    }

    private void aceptar() {
        if (tipoOperacion.equals("Alta")) {
            if (cargar()) {
                PictFacade.getInstance().alta(pict);
                JOptionPane.showMessageDialog(rootPane, "Registro Creado con exito", tipoOperacion, JOptionPane.PLAIN_MESSAGE);
                this.dispose();
            }
        } else if (tipoOperacion.equals("Modificacion")) {
            if (cargar()) {
                PictFacade.getInstance().modificacion(pict);
                JOptionPane.showMessageDialog(rootPane, "Modificacion Exitosa", tipoOperacion, JOptionPane.PLAIN_MESSAGE);
                this.dispose();
            }
        } else if (tipoOperacion.equals("Consulta")) {
            this.dispose();
        }
    }

    private boolean cargar() {
        boolean bandera = true;
        try {
            if (tipoOperacion.equals("Alta")) {
                pict = new FinanciacionPict();
            }
            pict.setDescripcion("PICT");
            if (jTfareatematica.getText() != null) {
                pict.setAreaTematica(jTfareatematica.getText());
            } else {
                pict.setAreaTematica(null);
            }
            if (jTfcategoria.getText() != null) {
                pict.setCategoria(jTfcategoria.getText());
            } else {
                pict.setCategoria(null);
            }
//            if (jTfduracion.getText() != null) {
//                pict.setDuracion(Integer.parseInt(jTfduracion.getText()));
//            } else {
//                pict.setDuracion(0);
//            }
            if (jTfinstben.getText() != null) {
                pict.setInstitucionbeneficiaria(jTfinstben.getText());
            } else {
                pict.setInstitucionbeneficiaria(null);
            }
            if (jTfrepinstben.getText() != null) {
                pict.setRepresentanteinstben(jTfrepinstben.getText());
            } else {
                pict.setRepresentanteinstben(null);
            }
            if (jTainstproyecto.getText() != null) {
                pict.setInstitucionesproyecto(jTainstproyecto.getText());
            } else {
                pict.setInstitucionesproyecto(null);
            }
            if (!gr.isEmpty()) {
                pict.setGr(gr);
            } else {
                pict.setGr(null);
            }
            if (!gc.isEmpty()) {
                pict.setGc(gc);
            } else {
                pict.setGc(null);
            }
            if (!impacto.isEmpty()) {
                pict.setImpacto(impacto);
            } else {
                pict.setImpacto(null);
            }
            if (!items.isEmpty()) {
                pict.setItems(items);
            } else {
                pict.setItems(null);
            }
            if (!notasExternas.isEmpty()) {
                pict.setNotasExternas(notasExternas);
            } else {
                pict.setNotasExternas(null);
            }
            if (!notasInternas.isEmpty()) {
                pict.setNotasInternas(notasInternas);
            } else {
                pict.setNotasInternas(null);
            }
            if(!fondos.isEmpty()){
                pict.setRetiros(fondos);
            }else{
                pict.setRetiros(null);
            }
            if(!listaCuentas.isEmpty()){
                pict.setRendiciondecuentas(listaCuentas);
            }else{
                pict.setRendiciondecuentas(null);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Duraci坦n debe ser un campo numerico", "Error", JOptionPane.ERROR_MESSAGE);
            bandera = false;
        }
        return bandera;
    }

    private void agregarImpacto() {
        diagImpacto nuevoimpacto = new diagImpacto(null, true);
        nuevoimpacto.setLocationRelativeTo(this);
        nuevoimpacto.setVisible(true);
        impacto.add(nuevoimpacto.getImpacto());
        mostrarImpactos();
    }

    private void agregarGR() {
        diagGrupo grupoResponsable = new diagGrupo(null, true, usuario, "gr",pict);
        grupoResponsable.setLocationRelativeTo(this);
        grupoResponsable.setVisible(true);
        gr = grupoResponsable.getListaResponsables();
        mostrarRecursosHumanos();
    }

    private void agregarGC() {
        diagGrupo grupoColaborador = new diagGrupo(null, true, usuario, "gc",pict);
        grupoColaborador.setLocationRelativeTo(this);
        grupoColaborador.setVisible(true);
        gc = grupoColaborador.getListaColaboradores();
        mostrarRecursosHumanos();
    }

    private void agregarItem() {
        try {
            //int duracion = Integer.parseInt(jTfduracion.getText());
            diagPresupuesto presupuesto = new diagPresupuesto(null, true);
            presupuesto.setLocationRelativeTo(this);
            presupuesto.setVisible(true);
            items.add(presupuesto.getItem());
            //System.out.println(items);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(rootPane, "Duracion es un campo numerico", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void modeloTabla() {
        tablaPresupuesto = new DefaultTableModel();
        tablaPresupuesto.addColumn("A単o");
        tablaPresupuesto.addColumn("Rubro");
        tablaPresupuesto.addColumn("Detalle");
        tablaPresupuesto.addColumn("Subsidio");
        tablaPresupuesto.addColumn("Contraparte");

    }

    private void modeloTablaNotasExternas() {
        modeloNotasExternas = new DefaultTableModel();
        modeloNotasExternas.addColumn("Fecha");
        modeloNotasExternas.addColumn("Nro. de Nota");
        modeloNotasExternas.addColumn("Motivo");
        modeloNotasExternas.addColumn("Recibimiento en Mesa de Entrada");
        modeloNotasExternas.addColumn("Fecha de Aprobaci坦n");
        modeloNotasExternas.addColumn("Fecha de Desembolso");

    }

    private void modeloTablaNotasInternas() {
        modeloNotasInternas = new DefaultTableModel();
        modeloNotasInternas.addColumn("Fecha");
        modeloNotasInternas.addColumn("Nro. de Nota");
        modeloNotasInternas.addColumn("Motivo");
        modeloNotasInternas.addColumn("Recibimiento en Mesa de Entrada");
        modeloNotasInternas.addColumn("Fecha de Desembolso");

    }
    
    private void modeloTablaRendicionCuenta(){
        tablaRendicionCuenta= new DefaultTableModel();
        tablaRendicionCuenta.addColumn("Item");
        tablaRendicionCuenta.addColumn("Aporte FONCYT");
        tablaRendicionCuenta.addColumn("Aporte Instituciones");
        tablaRendicionCuenta.addColumn("Otros Aportes");
        tablaRendicionCuenta.addColumn("Total");
    }
    
    private void modeloTablaMovimientos(){
        tablaMovimientos= new DefaultTableModel();
        tablaMovimientos.addColumn("N属 de operaci坦n");
        tablaMovimientos.addColumn("Fecha");
        tablaMovimientos.addColumn("Monto");
        tablaMovimientos.addColumn("Saldo");
        tablaMovimientos.addColumn("Comentarios");
    }

    public FinanciacionPict getPicto() {
        return pict;
    }

    private void reporte() {
        // try {
        List<reportes.Item> lista = new ArrayList();
        Maestro m = new Maestro();

        m.setAreatematica(pict.getAreaTematica());
        m.setCategoria(pict.getCategoria());
        m.setDuracion(pict.getDuracion());
        m.setInstitucionbeneficiaria(pict.getInstitucionbeneficiaria());
        for (Item i : pict.getItems()) {
            reportes.Item it = new reportes.Item();
            it.setA単o(i.getA単o());
            it.setDescripcion(i.getDescripcion());
            it.setMontocontraparte(i.getMontocontraparte());
            it.setMontosubsidio(i.getMontosubsidio());
            it.setNombre(i.getRubro().toString());
            lista.add(it);
        }




        new reportes.Reporte().reportePict(proyectoVinculacion.getTitulo(), lista, m);
        // } catch(Exception ex){
        //    ex.printStackTrace();
        //}
    }
    
    public void reporteSeguimientoNi (){
        List<reportes.NotaIn> lista = new ArrayList();
        List<NotaInterna> listaordenada=pict.getNotasInternas();
        Collections.sort(listaordenada, comparadorNi);
        for(NotaInterna ni :  listaordenada){
            reportes.NotaIn nota = new reportes.NotaIn();
            nota.setFecha(ni.getFecha());
            nota.setNronota(ni.getNroNota());
            nota.setMotivo(ni.getMotivo());
            nota.setFechaentrada(ni.getFechaDeRecibidoMesaDeEntrada());
            nota.setFechadesembolso(ni.getFechaDesembolso());
            lista.add(nota);
        }
        new reportes.Reporte().reporteSeguimientoNi(proyectoVinculacion.getTitulo(), lista);
    }

    private void reporteSeguimientoNe() {
        List<reportes.NotaEx> lista = new ArrayList();
        List<NotaExterna> listaordenada=pict.getNotasExternas();
        Collections.sort(listaordenada, comparadorNe);
        for(NotaExterna ne : listaordenada){
            reportes.NotaEx nota = new reportes.NotaEx();
            nota.setFecha(ne.getFecha());
            nota.setNronota(ne.getNroNota());
            nota.setMotivo(ne.getMotivo());
            nota.setFechaentrada(ne.getFechaDeRecibidoMesaDeEntrada());
            nota.setFechadesembolso(ne.getFechaDesembolso());
            nota.setFechaaprovacion(ne.getFechaAprobacion());
            lista.add(nota);
        }
        new reportes.Reporte().reporteSeguimientoNe(proyectoVinculacion.getTitulo(), lista);
    }

    private void buscarArchivo() {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            rutaArchivo = fileChooser.getSelectedFile().getPath();
            if(rutaArchivo.endsWith("xls") || rutaArchivo.endsWith("xlsx")){
                jTfrutaArchivo.setText(rutaArchivo);
            }else{
                JOptionPane.showMessageDialog(rootPane, "Debe escoger el archivo excel correspondiente", "Error", JOptionPane.ERROR_MESSAGE);
                rutaArchivo="";
                jTfrutaArchivo.setText(rutaArchivo);
            }
        }
    }
    
    private void buscarArchivoRendicion() {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            rutaArchivo = fileChooser.getSelectedFile().getPath();
            if(rutaArchivo.endsWith("xls") || rutaArchivo.endsWith("xlsx")){
                jTfRendicionCuenta.setText(rutaArchivo);
            }else{
                JOptionPane.showMessageDialog(rootPane, "Debe escoger el archivo excel correspondiente", "Error", JOptionPane.ERROR_MESSAGE);
                rutaArchivo="";
                jTfRendicionCuenta.setText(rutaArchivo);
            }
        }
    }

    private void Importar() {
        boolean flag=true;
        InputStream in=null;
        try {
            in = new FileInputStream(rutaArchivo);
           
                Workbook workbook= Workbook.getWorkbook(in);
                Sheet sheet=workbook.getSheet(0);
                System.out.println(sheet.getRows());
                System.out.println(rutaArchivo);
                fys= new FondosySaldos();
                Cell celdan= sheet.getCell(1  , 1);
                String nombre=celdan.getContents();
                System.out.println(nombre);
                fys.setNombre(nombre);
                System.out.println(celdan.getContents());
                Cell celdap= sheet.getCell(1 , 2);
                fys.setProyecto(celdap.getContents());
                Cell celdac= sheet.getCell(1 , 3);
                fys.setCodigo(celdac.getContents());
                Cell celdaf= sheet.getCell(1 , 4);
                fys.setFechaEntrada(celdaf.getContents());
                Cell celdae= sheet.getCell(1 , 5);
                fys.setExpediente(celdae.getContents());
                List<Movimiento> lista= new ArrayList();
                for(int i=8 ; i<sheet.getRows() ; i++){
                    op= new  Movimiento();
                    Cell celda1= sheet.getCell(0 , i);
                    op.setNumeroOperacion(celda1.getContents());                   
                    Cell celda2= sheet.getCell(1 , i);
                    op.setFecha(celda2.getContents());                  
                    Cell celda3= sheet.getCell(2 , i);
                    if(!celda3.getContents().equals(""))
                    op.setMonto(Float.valueOf(ImportarExcel.getInstance().quitarComas(celda3.getContents())));                                       
                    Cell celda4=sheet.getCell(4 , i);
                    if(!celda4.getContents().equals(""))
                    op.setSaldo(Float.valueOf(ImportarExcel.getInstance().quitarComas(celda4.getContents())));               
                    Cell celda5=sheet.getCell(6 , i);
                    op.setComentarios(celda5.getContents());                    
                    lista.add(op);
                }
                fys.setMovimientos(lista);
                //new FondosySaldosJpaController(emf).create(fys);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(rootPane, "Problemas con el archivo, revisar excel", "Error", JOptionPane.ERROR_MESSAGE);
                flag=false;
            } catch (BiffException ex) {
                JOptionPane.showMessageDialog(rootPane, "Problemas con el archivo, revisar excel", "Error", JOptionPane.ERROR_MESSAGE);
                flag=false;
            }catch (Exception ex){
                JOptionPane.showMessageDialog(rootPane, "Problemas con el archivo, revisar excel", "Error", JOptionPane.ERROR_MESSAGE);
                flag=false;
            }finally{
            try {
                in.close();
            } catch (IOException ex) {
                ex.getMessage();
            }
        }
        if(flag){
            JOptionPane.showMessageDialog(rootPane, "Carga exitosa", "carga", JOptionPane.INFORMATION_MESSAGE);
            fondos.add(fys);
        }
    }

    private void cargarFondos() {
        try{
        if (pict != null) {
            if (!pict.getRetiros().isEmpty()) {
                Comunes.cargarJList(jListFondos , pict.getRetiros());
                fondos = pict.getRetiros();
            }else{
                Comunes.cargarJList(jListFondos, fondos);
            }
        } else {
            Comunes.cargarJList(jListFondos, fondos);
        }
        
        }catch(Exception ex){
            ex.getMessage();
        }
    }

    private void mostrarMovimientos() {
        try{
            Object[] fila=new Object[5];
            modeloTablaMovimientos();
            FondosySaldos fondo= (FondosySaldos) jListFondos.getSelectedValue();
            Collections.sort(fondo.getMovimientos(),comparador);
            for(Movimiento m:fondo.getMovimientos()){
                fila[0]=m.getNumeroOperacion();
                fila[1]=m.getFecha();
                fila[2]=m.getMonto();
                fila[3]=m.getSaldo();
                fila[4]=m.getComentarios();
                tablaMovimientos.addRow(fila);
            }
            jTableMovimientos.setModel(tablaMovimientos); 
        }catch(Exception ex){
            System.out.println(ex.getMessage());
        }
    }

    private void eliminarFondos() {
        try{
            if(jListFondos.getSelectedIndex()!=-1){
                FondosySaldos fys1=(FondosySaldos) jListFondos.getSelectedValue();
                fondos.remove(fys1);
                Comunes.cargarJList(jListFondos, fondos);
            }else{
                JOptionPane.showMessageDialog(rootPane, "Debe elegir un item de la lista superior", "Error", JOptionPane.ERROR_MESSAGE);
            }
            
        }catch(Exception ex){
            
        }
    }
    
    Comparator<Movimiento> comparador=new Comparator<Movimiento>(){
       
        @Override
        public int compare(Movimiento a,Movimiento b){
            if(!a.getNumeroOperacion().equals("") && !b.getNumeroOperacion().equals("")){
                return(Integer.decode(a.getNumeroOperacion())-Integer.decode(b.getNumeroOperacion()));
            }else{
                return -1;
            }
        }

    };

    private void cargarRendiciones() {
        try{
        if (pict != null) {
            if (!pict.getRendiciondecuentas().isEmpty()) {
                Comunes.cargarJList(jListRendicion , pict.getRendiciondecuentas());
                listaCuentas = pict.getRendiciondecuentas();
            }else{
                Comunes.cargarJList(jListRendicion, listaCuentas);
            }
        } else {
            Comunes.cargarJList(jListRendicion, listaCuentas);
        }
        if(listaCuentas!= null){
            Comunes.cargarJList(jListRendicion, listaCuentas);
        }
        }catch(Exception ex){
            ex.getMessage();
        }
    }

    private void eliminarRendicion() {
        try{
            if(jListRendicion.getSelectedIndex()!=-1){
                RendicionDeCuentas rdc=(RendicionDeCuentas) jListRendicion.getSelectedValue();
                listaCuentas.remove(rdc);
                Comunes.cargarJList(jListRendicion , listaCuentas);
            }else{
                JOptionPane.showMessageDialog(rootPane, "Debe elegir un item de la lista superior", "Error", JOptionPane.ERROR_MESSAGE);
            }
            
        }catch(Exception ex){
            
        }
    }
    
    Comparator<Resumen> comparadorRC=new Comparator<Resumen>(){
       
        public int compare(Resumen a,Resumen b){
            return(a.getItem().compareTo(b.getItem()));
        }

    };
    
    private void mostrarRendiciones(){
        try{
            Object[] fila=new Object[5];
            modeloTablaRendicionCuenta();
            RendicionDeCuentas rendicion= (RendicionDeCuentas) jListRendicion.getSelectedValue();
            //List<Resumen> resumenOrdenado= rendicion.getResumen();
            int indice = jListRendicion.getSelectedIndex();
            List<Resumen> resumenOrdenado= listaCuentas.get(indice).getResumen();
//esto es supuestamente para scar duplicados pero no  los hay, retorna la tabla entera.            
//            HashSet<Resumen> hashSet = new HashSet<Resumen>(resumenOrdenado);
//            resumenOrdenado.clear();
//            resumenOrdenado.addAll(hashSet);
            Collections.sort(resumenOrdenado, comparadorRC);
            for(Resumen m:resumenOrdenado){
                fila[0]=m.getItem();
                fila[1]=m.getAportefoncyt();
                fila[2]=m.getAporteinstituciones();
                fila[3]=m.getOtrosaportes();
                fila[4]=m.getTotal();
                tablaRendicionCuenta.addRow(fila);
            }
            jTableRendicionCuenta.setModel(tablaRendicionCuenta); 
        }catch(Exception ex){
            //System.out.println(ex.getMessage());
        }
    }

    private void mostrarDetalles() {
        if(jListRendicion.getSelectedIndex()!=-1){
            if(jTableRendicionCuenta.getSelectedRow()!=-1){
                RendicionDeCuentas rendicion=(RendicionDeCuentas) jListRendicion.getSelectedValue();
                TableModel modelo=jTableRendicionCuenta.getModel();
                String aux=(String)modelo.getValueAt(jTableRendicionCuenta.getSelectedRow(), 0);
                //System.out.println(aux);
                //System.out.println(rendicion.getEquipamiento());
                mostrar(aux,rendicion);
            }
        }
    }
    
    private void modeloTablaHonorarios(){
        modelohonorarios=new DefaultTableModel();
        modelohonorarios.addColumn("Nombre y Apellido"); 
        modelohonorarios.addColumn("Fecha");
        modelohonorarios.addColumn("Aporte Institucion");
        modelohonorarios.addColumn("Otros Aportes");
        modelohonorarios.addColumn("Total");
    }
    
    private void modeloTablaBecas(){
        modelobecas=new DefaultTableModel();
        modelobecas.addColumn("Nombre y Apellido");
        modelobecas.addColumn("Fecha");
        modelobecas.addColumn("Aporte FONCYT");
        modelobecas.addColumn("Aporte Instutucion");
        modelobecas.addColumn("Otros Aportes");
        modelobecas.addColumn("Total");
    }
    
    private void modeloTablaEquipamiento(){
        modeloequipamiento=new DefaultTableModel();
        modeloequipamiento.addColumn("Datos Equipamiento");
        modeloequipamiento.addColumn("Datos Proveedor");
        modeloequipamiento.addColumn("N炭mero Factura");
        modeloequipamiento.addColumn("Fecha");
        modeloequipamiento.addColumn("Aporte FONCYT");
        modeloequipamiento.addColumn("Aporte Institucion");
        modeloequipamiento.addColumn("OtrosAportes");
    }
    
    private void modeloTablaMateriales(){
        modelomateriales=new DefaultTableModel();
        modelomateriales.addColumn("Descripci坦n");
        modelomateriales.addColumn("Datos Proveedor");
        modelomateriales.addColumn("N炭mero Factura");
        modelomateriales.addColumn("Fecha");
        modelomateriales.addColumn("Aporte FONCYT");
        modelomateriales.addColumn("Aporte Institucion");
        modelomateriales.addColumn("OtrosAportes");
    }
    
    private void modeloTablaViajesViaticos(){
        modeloviajesviaticos=new DefaultTableModel();
        modeloviajesviaticos.addColumn("Nombre y Apellido");
        modeloviajesviaticos.addColumn("Lugar Destino");
        modeloviajesviaticos.addColumn("Fecha");
        modeloviajesviaticos.addColumn("Aporte FONCYT");
        modeloviajesviaticos.addColumn("Aporte Institucion");
        modeloviajesviaticos.addColumn("Otros Aportes");
    }
    
    private void modeloTablaTecnicos(){
        modelotecnicos=new DefaultTableModel();
        modelotecnicos.addColumn("Descripci坦n");
        modelotecnicos.addColumn("Datos Proveedor");
        modelotecnicos.addColumn("N炭mero Factura");
        modelotecnicos.addColumn("Fecha");
        modelotecnicos.addColumn("Aporte FONCYT");
        modelotecnicos.addColumn("Aporte Institucion");
        modelotecnicos.addColumn("OtrosAportes");
    }
    
    private void modeloTablaPublicaciones(){
        modelopublicaciones=new DefaultTableModel();
        modelopublicaciones.addColumn("Descripci坦n");
        modelopublicaciones.addColumn("Datos Proveedor");
        modelopublicaciones.addColumn("N炭mero Factura");
        modelopublicaciones.addColumn("Fecha");
        modelopublicaciones.addColumn("Aporte FONCYT");
        modelopublicaciones.addColumn("Aporte Institucion");
        modelopublicaciones.addColumn("OtrosAportes");
    }
    
    private void modeloTablaAdministracion(){
        modeloadministracion=new DefaultTableModel();
        modeloadministracion.addColumn("N炭mero del Proyecto");
        modeloadministracion.addColumn("IB");
        modeloadministracion.addColumn("N炭mero de Factura");
        modeloadministracion.addColumn("Fecha");
        modeloadministracion.addColumn("Aporte FONCYT");
        modeloadministracion.addColumn("Total");
    }
    
    private void modeloTablaBibliografia(){
        modelobibliografia=new DefaultTableModel();
        modelobibliografia.addColumn("Descripci坦n");
        modelobibliografia.addColumn("Datos Proveedor");
        modelobibliografia.addColumn("N炭mero Factura");
        modelobibliografia.addColumn("Fecha");
        modelobibliografia.addColumn("Aporte FONCYT");
        modelobibliografia.addColumn("Aporte Institucion");
        modelobibliografia.addColumn("OtrosAportes");
        modelobibliografia.addColumn("Total");
    }
    
    private void mostrar(String tipo, RendicionDeCuentas rendiciondecuenta){
        if(tipo.startsWith("a"))
            mostrarHonorarios(rendiciondecuenta);
        else if(tipo.startsWith("b"))
            mostrarBecas(rendiciondecuenta);
        else if(tipo.startsWith("c"))
            mostrarEquipamiento(rendiciondecuenta);
        else if(tipo.startsWith("d"))
            mostrarMateriales(rendiciondecuenta);
        else if(tipo.startsWith("e"))
            mostrarViajesViaticos(rendiciondecuenta);
        else if(tipo.startsWith("f"))
            mostrarTecnicos(rendiciondecuenta);
        else if(tipo.startsWith("g"))
            mostrarPublicaciones(rendiciondecuenta);
        else if(tipo.startsWith("h"))
            mostrarAdministracion(rendiciondecuenta);
        else if(tipo.startsWith("i"))
            mostrarBibliografia(rendiciondecuenta);
    }
    
    private void mostrarHonorarios(RendicionDeCuentas rendiciondecuenta){
        try{
            Object[] fila=new Object[5];
            modeloTablaHonorarios();
            for(Honorarios e: rendiciondecuenta.getHonorarios()){
                //if(e!=null){
                fila[0]=e.getNombreyapellido();
                
                fila[1]=e.getFecha();
                
                fila[2]=e.getAporteinstitucion();
                fila[3]=e.getOtrosaportes();
                fila[4]=e.getTotal();
                modelohonorarios.addRow(fila);
               // }
                
            }
            jTabledetalle.setModel(modelohonorarios); 
        }catch(Exception ex){
            System.out.println(ex);
            
        }
    }

    private void mostrarBecas(RendicionDeCuentas rendiciondecuenta) {
        try{
            Object[] fila=new Object[6];
            modeloTablaBecas();
            for(Beca e: rendiciondecuenta.getBecas()){
                //if(e!=null){
                fila[0]=e.getNombreapellido();
                
                fila[1]=e.getFecha();
                
                fila[2]=e.getAportefoncyt();
                fila[3]=e.getAporteinstitucion();
                fila[4]=e.getOtrosaportes();
                 fila[5]=e.getTotal();
                modelobecas.addRow(fila);
               // }
                
            }
            jTabledetalle.setModel(modelobecas); 
        }catch(Exception ex){
            System.out.println(ex);
            
        }
    }

    private void mostrarEquipamiento(RendicionDeCuentas rendiciondecuenta) {
        try{
            Object[] fila=new Object[7];
            modeloTablaEquipamiento();
            for(Equipamiento e: rendiciondecuenta.getEquipamiento()){
                //if(e!=null){
                fila[0]=e.getDatosequipamiento();
                fila[1]=e.getDatosproveedor();
                fila[2]=e.getNumerofactura();
                fila[3]=e.getFecha();
                fila[4]=e.getAportefoncyt();
                fila[5]=e.getAporteinstitucion();
                fila[6]=e.getOtrosaportes();
                modeloequipamiento.addRow(fila);
               // }
                
            }
            jTabledetalle.setModel(modeloequipamiento); 
        }catch(Exception ex){
            System.out.println(ex);
            
        }
    }

    private void mostrarMateriales(RendicionDeCuentas rendiciondecuenta) {
        try{
            Object[] fila=new Object[7];
            modeloTablaMateriales();
            for(MaterialesEInsumos e: rendiciondecuenta.getMaterialeseinsumos()){
                if(e!=null){
                fila[0]=e.getDescripcion();
                fila[1]=e.getDatosproveedor();
                fila[2]=e.getNumerofactura();
                fila[3]=e.getFecha();
                fila[4]=e.getAportefoncyt();
                fila[5]=e.getAporteinstitucion();
                fila[6]=e.getOtrosaportes();
                modelomateriales.addRow(fila);
                }
                
            }
            jTabledetalle.setModel(modelomateriales); 
        }catch(Exception ex){
            System.out.println(ex);
            System.out.println(rendiciondecuenta.getMaterialeseinsumos());
        }
    }

    private void mostrarViajesViaticos(RendicionDeCuentas rendiciondecuenta) {
        try{
            Object[] fila=new Object[6];
            modeloTablaViajesViaticos();
            for(ViajesViaticos e: rendiciondecuenta.getViajesviaticos()){
                //if(e!=null){
                fila[0]=e.getNombreapellido();
                
                fila[1]=e.getDestino();
                
                fila[2]=e.getFecha();
                fila[3]=e.getAportefoncyt();
                fila[4]=e.getAporteinstitucion();
                 fila[5]=e.getOtrosaportes();
                modeloviajesviaticos.addRow(fila);
               // }
                
            }
            jTabledetalle.setModel(modeloviajesviaticos); 
        }catch(Exception ex){
            System.out.println(ex);
            
        }
    }

    private void mostrarTecnicos(RendicionDeCuentas rendiciondecuenta) {
        try{
            Object[] fila=new Object[7];
            modeloTablaTecnicos();
            for(Tecnicos e: rendiciondecuenta.getServiciostecnicos()){
                //if(e!=null){
                fila[0]=e.getDescripcion();
                fila[1]=e.getDatosproveedor();
                fila[2]=e.getNumerofactura();
                fila[3]=e.getFecha();
                fila[4]=e.getAportefoncyt();
                fila[5]=e.getAporteinstitucion();
                fila[6]=e.getOtrosaportes();
                modelotecnicos.addRow(fila);
               // }
                
            }
            jTabledetalle.setModel(modelotecnicos); 
        }catch(Exception ex){
            System.out.println(ex);
            
        }
    }

    private void mostrarPublicaciones(RendicionDeCuentas rendiciondecuenta) {
        try{
            Object[] fila=new Object[7];
            modeloTablaPublicaciones();
            for(Publicaciones e: rendiciondecuenta.getPublicaciones()){
                //if(e!=null){
                fila[0]=e.getDescripcion();
                fila[1]=e.getDatosproveedor();
                fila[2]=e.getNumerofactura();
                fila[3]=e.getFecha();
                fila[4]=e.getAportefoncyt();
                fila[5]=e.getAporteinstitucion();
                fila[6]=e.getOtrosaportes();
                modelopublicaciones.addRow(fila);
               // }
                
            }
            jTabledetalle.setModel(modelopublicaciones); 
        }catch(Exception ex){
            System.out.println(ex);
            
        }
    }

    private void mostrarAdministracion(RendicionDeCuentas rendiciondecuenta) {
        try{
            Object[] fila=new Object[6];
            modeloTablaAdministracion();
            for(AdministracionSubsidio e: rendiciondecuenta.getGastosadministracion()){
                //if(e!=null){
                fila[0]=e.getNumeroproyecto();
                
                fila[1]=e.getIb();
                
                fila[2]=e.getNumerofactura();
                fila[3]=e.getFecha();
                fila[4]=e.getAportefoncyt();
                 fila[5]=e.getTotal();
                modeloadministracion.addRow(fila);
               // }
                
            }
            jTabledetalle.setModel(modeloadministracion); 
        }catch(Exception ex){
            System.out.println(ex);
            
        }
    }

    private void mostrarBibliografia(RendicionDeCuentas rendiciondecuenta) {
        try{
            Object[] fila=new Object[7];
            modeloTablaBibliografia();
            for(Bibliografia e: rendiciondecuenta.getBibliografia()){
                //if(e!=null){
                fila[0]=e.getDescripcion();
                fila[1]=e.getDatosproveedor();
                fila[2]=e.getNumerofactura();
                fila[3]=e.getFecha();
                fila[4]=e.getAportefoncyt();
                fila[5]=e.getAporteinstitucion();
                fila[6]=e.getOtrosaportes();
                modelobibliografia.addRow(fila);
               // }
                
            }
            jTabledetalle.setModel(modelobibliografia); 
        }catch(Exception ex){
            System.out.println(ex);
            
        }
    }
}
