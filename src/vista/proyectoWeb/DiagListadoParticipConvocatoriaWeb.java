/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.proyectoWeb;

import controladores.ConvocatoriaJpaController;
import entidades.proyecto.CampoAplicacion;
import entidades.proyecto.Participacion;
import entidades.proyecto.SubDisciplinaCientifica;
import entidades.proyecto.UnidadInvestigacion;
import entidades.proyectoWeb.Convocatoria;
import entidades.proyectoWeb.ParticipacionWeb;
import entidades.proyectoWeb.ProyectoWeb;
import facade.ConexionFacade;
import facade.ParticipacionWebFacade;
import facade.ProyectoWebFacade;
import includes.Comunes;
import includes.ExportarExcel;
import includes.ModeloTablaNoEditable;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JViewport;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author franco
 */
public class DiagListadoParticipConvocatoriaWeb extends javax.swing.JDialog {

    private ModeloTablaNoEditable modeloTablaParticipacionesWeb;
    private Vector headers = new Vector();
    private Vector data = new Vector();

    /**
     * Creates new form DiagListadoVentas
     *
     * @param parent
     * @param modal
     */
    public DiagListadoParticipConvocatoriaWeb(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        inicializarComponentes();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblParticipacionesWeb = new javax.swing.JTable();
        btnExportarArt = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        btnCargarConvocatorias = new javax.swing.JButton();
        cboConvocatoria = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblParticipacionesWeb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblParticipacionesWeb);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnExportarArt.setText(org.openide.util.NbBundle.getMessage(DiagListadoParticipConvocatoriaWeb.class, "DiagListadoParticipConvocatoriaWeb.btnExportarArt.text")); // NOI18N
        btnExportarArt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarArtActionPerformed(evt);
            }
        });

        btnCerrar.setText(org.openide.util.NbBundle.getMessage(DiagListadoParticipConvocatoriaWeb.class, "DiagListadoParticipConvocatoriaWeb.btnCerrar.text")); // NOI18N
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        btnCargarConvocatorias.setText(org.openide.util.NbBundle.getMessage(DiagListadoParticipConvocatoriaWeb.class, "DiagListadoParticipConvocatoriaWeb.btnCargarConvocatorias.text")); // NOI18N
        btnCargarConvocatorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarConvocatoriasActionPerformed(evt);
            }
        });

        cboConvocatoria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText(org.openide.util.NbBundle.getMessage(DiagListadoParticipConvocatoriaWeb.class, "DiagListadoParticipConvocatoriaWeb.jLabel1.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(567, 567, 567)
                        .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExportarArt, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 558, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboConvocatoria, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCargarConvocatorias, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(389, 389, 389))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCargarConvocatorias)
                    .addComponent(cboConvocatoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnExportarArt, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(btnCerrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExportarArtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarArtActionPerformed
        Exportar();
    }//GEN-LAST:event_btnExportarArtActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void btnCargarConvocatoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarConvocatoriasActionPerformed
        cargarConvocatorias();
    }//GEN-LAST:event_btnCargarConvocatoriasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DiagListadoParticipConvocatoriaWeb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DiagListadoParticipConvocatoriaWeb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DiagListadoParticipConvocatoriaWeb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DiagListadoParticipConvocatoriaWeb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DiagListadoParticipConvocatoriaWeb dialog = new DiagListadoParticipConvocatoriaWeb(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCargarConvocatorias;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnExportarArt;
    private javax.swing.JComboBox cboConvocatoria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblParticipacionesWeb;
    // End of variables declaration//GEN-END:variables

    private void Exportar() {
        new ExportarExcel().crearExcelJtable(tblParticipacionesWeb, "Listado de ProyectosWeb");
    }

    private void cargarTablaParticipacionesWeb(List<ParticipacionWeb> participacionesWeb) {
        modeloTablaParticipacionesWeb = new ModeloTablaNoEditable();
        cargarEncabezadosTablaParticipacionesWeb(modeloTablaParticipacionesWeb);
        configurarTabla(tblParticipacionesWeb);
        try {
            cargarParticipacionesWeb(participacionesWeb);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Error: " + ex);
        }
    }

    private void cargarEncabezadosTablaParticipacionesWeb(ModeloTablaNoEditable modeloTablaParticipacionesWeb) {
        modeloTablaParticipacionesWeb.addColumn("Apellido y Nombre");
        modeloTablaParticipacionesWeb.addColumn("Rol");
        modeloTablaParticipacionesWeb.addColumn("Codigo Incentivos");
        modeloTablaParticipacionesWeb.addColumn("Titulo Proyecto");
        modeloTablaParticipacionesWeb.addColumn("Disciplina");
        modeloTablaParticipacionesWeb.addColumn("Area Tematica");
        modeloTablaParticipacionesWeb.addColumn("Fecha Inicio");
        modeloTablaParticipacionesWeb.addColumn("Fecha Fin");
        modeloTablaParticipacionesWeb.addColumn("Finalizado");

        tblParticipacionesWeb.setModel(modeloTablaParticipacionesWeb);
    }

    private void cargarParticipacionWeb(ParticipacionWeb participacionWeb) {
        // JOptionPane.showMessageDialog(null, "va "+va.getCantidadPeso());
        SimpleDateFormat formats = new SimpleDateFormat("dd/MM/yyyy");
        Object[] fila = new Object[9];
        int n = 0;
        try {
            fila[n++] = participacionWeb.getInvestigador();
        } catch (Exception e) {
            fila[n++] = "";
        }

        if (participacionWeb.getRol() != null) {
            fila[n++] = participacionWeb.getRol();
        } else {
            fila[n++] = "";
        }

        if (participacionWeb.getProyectoWeb().getCodigo() != null) {
            fila[n++] = participacionWeb.getProyectoWeb().getCodigo();
        } else {
            fila[n++] = "";
        }
        if (participacionWeb.getProyectoWeb() != null) {
            fila[n++] = participacionWeb.getProyectoWeb().getTitulo();
        } else {
            fila[n++] = "";
        }
        try {
            if (!participacionWeb.getProyectoWeb().getSubDisciplinasCientificas().isEmpty()) {
                for (SubDisciplinaCientifica subDisciplinasCientifica : participacionWeb.getProyectoWeb().getSubDisciplinasCientificas()) {
                    fila[n++] = subDisciplinasCientifica.getDisciplinaCientifica() + "; ";
                }
            } else {
                fila[n++] = " ";
            }

        } catch (Exception e) {
            fila[n++] = " ";
        }
        try {
            if (!participacionWeb.getProyectoWeb().getSubDisciplinasCientificas().isEmpty()) {
                for (SubDisciplinaCientifica subDisciplinasCientifica : participacionWeb.getProyectoWeb().getSubDisciplinasCientificas()) {
                    fila[n++] = subDisciplinasCientifica.getDisciplinaCientifica().getAreaTematica() + "; ";
                }
            }else{
               fila[n++] = " "; 
            }

        } catch (Exception e) {
            fila[n++] = " ";
        }
        if (participacionWeb.getProyectoWeb().getFechaInicio() != null) {
            fila[n++] = formats.format(participacionWeb.getProyectoWeb().getFechaInicio());
        } else {
            fila[n++] = "";
        }
        if (participacionWeb.getProyectoWeb().getFechaFinalizacion() != null) {
            fila[n++] = formats.format(participacionWeb.getProyectoWeb().getFechaFinalizacion());
        } else {
            fila[n++] = "";
        }
        try {
            if (participacionWeb.getProyectoWeb().getFinalizado()) {
                fila[n++] = "SI";
            } else {
                fila[n++] = "NO";
            }
        } catch (Exception e) {

        }

        //
        modeloTablaParticipacionesWeb.addRow(fila);
    }

    private void configurarTabla(JTable tbl) {
        JViewport scroll = (JViewport) tbl.getParent();
        int ancho = scroll.getWidth();
        int anchoColumna = 0;
        TableColumnModel modeloColumna = tbl.getColumnModel();
        TableColumn columnaTabla;
        for (int i = 0; i < tbl.getColumnCount(); i++) {
            columnaTabla = modeloColumna.getColumn(i);
            switch (i) {
                case 0:
                    anchoColumna = (1 * ancho) / 100;
                    break;
                case 1:
                    anchoColumna = (20 * ancho) / 100;
                    break;
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                    anchoColumna = (5 * ancho) / 100;
                    break;
            }
            columnaTabla.setPreferredWidth(anchoColumna);
            tbl.setColumnModel(modeloColumna);
        }
        tbl.getTableHeader().setFont(new java.awt.Font("Dialog",
                java.awt.Font.PLAIN, 10));
        tbl.getTableHeader().setBackground(java.awt.Color.WHITE);
        tbl.getTableHeader().setForeground(Color.BLACK);
        //Si le queremos cambiar el tamaño a la tablita
        tbl.setFont(new java.awt.Font("Dialog",
                java.awt.Font.PLAIN, 10));
    }

    private void cargarParticipacionesWeb(List<ParticipacionWeb> participacionesWeb) {
        try {
            modeloTablaParticipacionesWeb = new ModeloTablaNoEditable();
            cargarEncabezadosTablaParticipacionesWeb(modeloTablaParticipacionesWeb);
            for (ParticipacionWeb participacionWeb : participacionesWeb) {
                cargarParticipacionWeb(participacionWeb);
            }
            tblParticipacionesWeb.setModel(modeloTablaParticipacionesWeb);
            // Comunes.setOcultarColumnasJTable(tblVentas, 0);
        } catch (Exception ex) {
            Logger.getLogger(DiagListadoParticipConvocatoriaWeb.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void inicializarComponentes() {
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("ProyectoUnoPU", ConexionFacade.PROPIEDADES);
        Comunes.cargarJCombo(cboConvocatoria, new ConvocatoriaJpaController(emf).findConvocatoriaEntities());
    }

    private void cargarConvocatorias() {
        try {
            cargarTablaParticipacionesWeb(ParticipacionWebFacade.getInstance().getParticipacionesWeb(((Convocatoria) cboConvocatoria.getSelectedItem())));
        } catch (Exception ex) {
            Logger.getLogger(DiagListadoParticipConvocatoriaWeb.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
