/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package vista.participaciones;

import entidades.persona.investigador.Investigador;
import entidades.proyecto.Participacion;
import facade.InvestigadorFacade;
import facade.ParticipacionFacade;
import includes.Comunes;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

/**
 *
 * @author panchi
 */
public class diagParticipacionesPorInvestigador extends javax.swing.JDialog {
private List<Participacion> participaciones = new ArrayList<Participacion>();
private Investigador investigador;
    /**
     * Creates new form diagParticipacionesPorInvestigador
     */
    public diagParticipacionesPorInvestigador(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        inicializarComponentes();
    }
    public diagParticipacionesPorInvestigador(java.awt.Frame parent, boolean modal, Investigador investigador) {
        super(parent, modal);
        initComponents();
        this.investigador = investigador;
        inicializarComponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListParticipaciones = new javax.swing.JList();
        chkParticipacionesActualesOUltimas = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        txtInvestigador = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagParticipacionesPorInvestigador.class, "diagParticipacionesPorInvestigador.jPanel1.border.title"))); // NOI18N

        jScrollPane1.setViewportView(jListParticipaciones);

        chkParticipacionesActualesOUltimas.setText(org.openide.util.NbBundle.getMessage(diagParticipacionesPorInvestigador.class, "diagParticipacionesPorInvestigador.chkParticipacionesActualesOUltimas.text")); // NOI18N
        chkParticipacionesActualesOUltimas.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkParticipacionesActualesOUltimasStateChanged(evt);
            }
        });

        jLabel1.setText(org.openide.util.NbBundle.getMessage(diagParticipacionesPorInvestigador.class, "diagParticipacionesPorInvestigador.jLabel1.text")); // NOI18N

        txtInvestigador.setText(org.openide.util.NbBundle.getMessage(diagParticipacionesPorInvestigador.class, "diagParticipacionesPorInvestigador.txtInvestigador.text")); // NOI18N

        jButton1.setText(org.openide.util.NbBundle.getMessage(diagParticipacionesPorInvestigador.class, "diagParticipacionesPorInvestigador.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(chkParticipacionesActualesOUltimas)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtInvestigador)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtInvestigador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkParticipacionesActualesOUltimas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(0, 33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chkParticipacionesActualesOUltimasStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkParticipacionesActualesOUltimasStateChanged
        cambiarEstado();        // TODO add your handling code here:
    }//GEN-LAST:event_chkParticipacionesActualesOUltimasStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(diagParticipacionesPorInvestigador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(diagParticipacionesPorInvestigador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(diagParticipacionesPorInvestigador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(diagParticipacionesPorInvestigador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                diagParticipacionesPorInvestigador dialog = new diagParticipacionesPorInvestigador(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkParticipacionesActualesOUltimas;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jListParticipaciones;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtInvestigador;
    // End of variables declaration//GEN-END:variables

    private void inicializarComponentes() {
        cargarInvestigador();
        cargarParticipaciones();
    }
    
    private void cargarParticipaciones(){
        participaciones = InvestigadorFacade.getInstance().getParticipacionesPorInvestigador(investigador);
        Comunes.cargarJList(jListParticipaciones , participaciones);
    }
    private void cargarInvestigador() {
        txtInvestigador.setText(investigador.getPersona().toString());
    }

    private void mostrarParticipacionesActualesOUltimas() {
        List<Participacion> listaP = new ArrayList<Participacion>();
        Iterator i = participaciones.iterator();
        while (i.hasNext()) {
            Participacion p = (Participacion) i.next();
            if (p.getFechaHasta() == null) {
                listaP.add(p);

            }
            Comunes.cargarJList(jListParticipaciones, listaP);

        }
    }

    private void cambiarEstado() {
        if (chkParticipacionesActualesOUltimas.isSelected()) {
            mostrarParticipacionesActualesOUltimas();
        } else {
            cargarParticipaciones();
        }

    }
}
