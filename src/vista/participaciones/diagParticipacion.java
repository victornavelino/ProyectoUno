/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * diagDatosInvestigador.java
 *
 * Created on 14/06/2011, 12:19:48
 */
package vista.participaciones;

import entidades.persona.investigador.Investigador;
import entidades.proyecto.Participacion;
import entidades.proyecto.Proyecto;
import entidades.proyecto.Rol;
import entidades.proyecto.vinculacion.ParticipacionVinculacion;
import entidades.proyecto.vinculacion.ProyectoVinculacion;
import entidades.usuario.Usuario;
import facade.ParticipacionFacade;
import facade.ProyectoFacade;
import facade.ProyectoVinculacionFacade;
import facade.RolFacade;
import includes.Comunes;
import java.util.Date;
import javax.swing.JOptionPane;
import org.apache.commons.validator.routines.IntegerValidator;
import vista.diagInvestigadorBusquedaSimple;

/**
 *
 * @author carlos
 */
public class diagParticipacion extends javax.swing.JDialog {

    private Participacion participacion = null;
    private ParticipacionVinculacion participacionVinculacion;
    private Investigador investigador;
    private Proyecto proyecto;
    private ProyectoVinculacion proyectoVinculacion;
    private ProyectoFacade proyectoFacade = ProyectoFacade.getInstance();
    private ProyectoVinculacionFacade proyectoVinculacionFacade = ProyectoVinculacionFacade.getInstance();
    private RolFacade rolFacade = new RolFacade();
    private boolean guardado = false;
    private Usuario usuario;
    private String operacion;
    private ParticipacionVinculacion p;

    /**
     * Creates new form diagDatosInvestigador
     */
    public diagParticipacion(java.awt.Frame parent, boolean modal, Investigador investigador, Proyecto proyecto, Usuario usuario,String operacion) {
        super(parent, modal);
        initComponents();
        this.investigador = investigador;
        this.proyecto = proyecto;
        this.usuario = usuario;
        this.operacion=operacion;
        inicializarComponentes();
        participacion = new Participacion();
    }

    public diagParticipacion(java.awt.Frame parent, boolean modal, Investigador investigador, ProyectoVinculacion proyectoVinculacion, Usuario usuario) {
        super(parent, modal);
        initComponents();
        this.investigador = investigador;
        this.proyectoVinculacion = proyectoVinculacion;
        this.usuario = usuario;
        inicializarComponentes();
        participacionVinculacion = new ParticipacionVinculacion();
    }

    /**
     * Creates new form diagDatosInvestigador
     */
    public diagParticipacion(java.awt.Frame parent, boolean modal, Proyecto proyecto, Usuario usuario, String operacion) {
        super(parent, modal);
        initComponents();
        this.investigador = new Investigador();
        this.proyecto = proyecto;
        this.usuario = usuario;
        this.operacion =operacion;
        inicializarComponentes();
        participacion = new Participacion();
    }

    public diagParticipacion(java.awt.Frame parent, boolean modal, ProyectoVinculacion proyectoVinculacion, Usuario usuario) {
        super(parent, modal);
        initComponents();
        this.investigador = new Investigador();
        this.proyectoVinculacion = proyectoVinculacion;
        this.usuario = usuario;
        inicializarComponentes();
        participacionVinculacion = new ParticipacionVinculacion();
    }

    public diagParticipacion(java.awt.Frame parent, boolean modal, Usuario usuario) {
        super(parent, modal);
        initComponents();
        this.investigador = new Investigador();

        this.usuario = usuario;
        inicializarComponentes();
        participacionVinculacion = new ParticipacionVinculacion();
    }

    public diagParticipacion(java.awt.Frame parent, boolean modal, Usuario usuario, String operacion,
            ParticipacionVinculacion participacionVinculacion) {
        super(parent, modal);
        initComponents();
        this.investigador = new Investigador();
        this.operacion = operacion;
                this.participacionVinculacion = participacionVinculacion;

        this.usuario = usuario;
        inicializarComponentes();
    }

    public diagParticipacion(java.awt.Frame parent, boolean modal, Usuario usuario, String operacion
            ) {
        super(parent, modal);
        initComponents();
        this.investigador = new Investigador();
        this.operacion = operacion;
        this.usuario = usuario;
        inicializarComponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jXDateFechaDesde = new org.jdesktop.swingx.JXDatePicker();
        jXDateFechaHasta = new org.jdesktop.swingx.JXDatePicker();
        cboRol = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        chkActualmente = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtfDedicacionSemanal = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jtfInvestigador = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTfResolucionAlta = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTfResolucionBaja = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Fecha Desde");

        jLabel2.setText("Fecha Hasta");

        jLabel3.setText("Rol");

        jXDateFechaDesde.setFormats("dd/MM/yyyy");

        jXDateFechaHasta.setFormats("dd/MM/yyyy");

        jButton1.setText("Guardar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        chkActualmente.setText("Sigue Participando Actualmente");
        chkActualmente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkActualmenteItemStateChanged(evt);
            }
        });
        chkActualmente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkActualmenteActionPerformed(evt);
            }
        });

        jLabel4.setText("Investigador");

        jLabel5.setText("Ded. Semanal (hs)");

        jButton2.setText("Buscar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel6.setText("Número resolucion alta");

        jLabel7.setText("Número resolucion baja");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 41, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jtfInvestigador, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2))
                            .addComponent(jXDateFechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jXDateFechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chkActualmente))
                            .addComponent(cboRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfDedicacionSemanal, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(21, 21, 21)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTfResolucionBaja)
                                    .addComponent(jTfResolucionAlta, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)))
                            .addComponent(jLabel6)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(189, 189, 189)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtfInvestigador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jXDateFechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jXDateFechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkActualmente))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfDedicacionSemanal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTfResolucionAlta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTfResolucionBaja, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (proyecto != null) {
            guardar();
        } else {
            guardarVinculacion();
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void chkActualmenteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkActualmenteItemStateChanged
        cambiarEstadoFechaHasta();
    }//GEN-LAST:event_chkActualmenteItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        buscarInvestigador();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void chkActualmenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkActualmenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkActualmenteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                diagParticipacion dialog = new diagParticipacion(new javax.swing.JFrame(), true, new Investigador(), new Proyecto(), new Usuario(),new String());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cboRol;
    private javax.swing.JCheckBox chkActualmente;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTfResolucionAlta;
    private javax.swing.JTextField jTfResolucionBaja;
    private org.jdesktop.swingx.JXDatePicker jXDateFechaDesde;
    private org.jdesktop.swingx.JXDatePicker jXDateFechaHasta;
    private javax.swing.JTextField jtfDedicacionSemanal;
    private javax.swing.JTextField jtfInvestigador;
    // End of variables declaration//GEN-END:variables

    public Investigador getInvestigador() {
        return investigador;
    }

    public Proyecto getProyecto() {
        return proyecto;
    }

    public ParticipacionVinculacion getParticipacionVinculacion() {
        // para asegurar que no se guarde sin estar completa
        return p;
    }

    public Participacion getParticipacion() {
        return participacion;
    }

    private void inicializarComponentes() {
        Comunes.cargarJCombo(cboRol, rolFacade.getTodos());
        if (investigador.getId() != null) {
            jtfInvestigador.setText(investigador.toString());
        }
        switch(operacion){
                case "Alta":
                    //participacionVinculacion = new ParticipacionVinculacion();

                    break;
                case "Modificacion":
                    try{
                    if(participacionVinculacion.getInvestigador() != null){
                        jtfInvestigador.setText(participacionVinculacion.getInvestigador().toString());
                    }
                      
                } catch (NullPointerException ex) {
                }
                    try{
                    if(participacionVinculacion.getFechaDesde()!= null){
                        jXDateFechaDesde.setDate(participacionVinculacion.getFechaDesde());
                    }
                      
                } catch (NullPointerException ex) {
                }
                    try{
                    if(participacionVinculacion.getFechaHasta()!= null){
                        jXDateFechaHasta.setDate(participacionVinculacion.getFechaHasta());
                    }
                    else{
                        jXDateFechaHasta.setEnabled(false);
                        chkActualmente.setSelected(true);
                    }
                      
                } catch (NullPointerException ex) {
                }
                    try{
                    if(participacionVinculacion.getRol()!= null){
                        cboRol.setSelectedItem(participacionVinculacion.getRol());
                    }
                      
                } catch (NullPointerException ex) {
                }
                    try{
                    if(participacionVinculacion.getDedicacionSemanal()!= null){
                        jtfDedicacionSemanal.setText(participacionVinculacion.getDedicacionSemanal().toString());
                    }
                      
                } catch (NullPointerException ex) {
                }
                    try{
                    if(participacionVinculacion.getResolucionAlta()!= null){
                        jTfResolucionAlta.setText(participacionVinculacion.getResolucionAlta().toString());
                    }
                      
                } catch (NullPointerException ex) {
                }
                    try{
                    if(participacionVinculacion.getResolucionBaja()!= null){
                        jTfResolucionBaja.setText(participacionVinculacion.getResolucionBaja().toString());
                    }
                      
                } catch (NullPointerException ex) {
                }
                    
                    break;
    }
    }
    private Boolean validar(){
        Boolean flag = false;
        if (investigador != null) {
            if (investigador.getId() != null) {
                if (jXDateFechaHasta.getDate().after(jXDateFechaDesde.getDate()) || chkActualmente.isSelected()) {
                    if (IntegerValidator.getInstance().isValid(jtfDedicacionSemanal.getText())) {
                        if(jTfResolucionAlta.getText() != null){
                            if(jTfResolucionBaja.getText() != null){
                                flag = true;
                        return flag;
                            }else {
                        JOptionPane.showMessageDialog(null, "Nro de resolución de baja incorrecta",
                                "Error", JOptionPane.ERROR_MESSAGE);
                    }
                        }else {
 
                    }
                        
                        } else {
                        JOptionPane.showMessageDialog(null, "Dedicación semanal incorrecta",
                                "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Fechas incorrectas. La fecha "
                            + "desde debe ser anterior a la fecha hasta",
                            "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debe seleccionar un investigador",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un investigador",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
        return flag;
    }
    private void guardarVinculacion() {
        if(validar()){
            switch(operacion){
                case "Alta":
                    participacionVinculacion = new ParticipacionVinculacion();
                    asignarDatos();
                    this.dispose();

                    break;
                case "Modificacion":
                    asignarDatos();
                    this.dispose();
                    break;
            }
            
        }
    }
//
//                    proyectoVinculacionFacade.agregarParticipacionVinculacion(investigador, proyectoVinculacion,
//                            jXDateFechaDesde.getDate(), fechaHasta,
//                            (Rol) cboRol.getSelectedItem(), Integer.parseInt(jtfDedicacionSemanal.getText()));
//                    guardado = true;
    private void asignarDatos(){
                        Date fechaHasta;
                        if (!chkActualmente.isSelected()) {
                            fechaHasta = jXDateFechaHasta.getDate();
                        } else {
                            fechaHasta = null;
                        }
//                    participacionVinculacion.setProyectoVinculacion(proyectoVinculacion);
                        participacionVinculacion.setFechaDesde(jXDateFechaDesde.getDate());
                        participacionVinculacion.setFechaHasta(fechaHasta);
                        participacionVinculacion.setDedicacionSemanal(Integer.parseInt(jtfDedicacionSemanal.getText()));
                        participacionVinculacion.setInvestigador(investigador);

                        participacionVinculacion.setRol((Rol) cboRol.getSelectedItem());
                        participacionVinculacion.setResolucionAlta(jTfResolucionAlta.getText());
                        participacionVinculacion.setResolucionBaja(jTfResolucionBaja.getText());
                        p  = participacionVinculacion;
                    
    }

    private void guardar() {

        if (investigador != null) {
            if (investigador.getId() != null) {
                if (jXDateFechaHasta.getDate().after(jXDateFechaDesde.getDate()) || chkActualmente.isSelected()) {
                    if (IntegerValidator.getInstance().isValid(jtfDedicacionSemanal.getText())) {
                        Date fechaHasta;
                        if (!chkActualmente.isSelected()) {
                            fechaHasta = jXDateFechaHasta.getDate();
                        } else {
                            fechaHasta = null;
                        }
                        String resolucionAlta;
                        String resolucionBaja;
                        if(jTfResolucionAlta.getText()!=null){
                            resolucionAlta=jTfResolucionAlta.getText();
                        }else{
                            resolucionAlta=null;
                        }
                        if(jTfResolucionBaja.getText()!=null){
                            resolucionBaja=jTfResolucionBaja.getText();
                        }else{
                            resolucionBaja=null;
                        }

                        proyectoFacade.agregarParticipacion(investigador, proyecto,
                                jXDateFechaDesde.getDate(), fechaHasta,
                                (Rol) cboRol.getSelectedItem(), Integer.parseInt(jtfDedicacionSemanal.getText()),
                                resolucionAlta,resolucionBaja);
                        guardado = true;



                        participacion.setFechaDesde(jXDateFechaDesde.getDate());
                        participacion.setFechaHasta(fechaHasta);
                        participacion.setDedicacionSemanal(Integer.parseInt(jtfDedicacionSemanal.getText()));
                        participacion.setInvestigador(investigador);

                        participacion.setProyecto(proyecto);
                        participacion.setRol((Rol) cboRol.getSelectedItem());
                        participacion.setResolucionAlta(jTfResolucionAlta.getText());
                        participacion.setResolucionBaja(jTfResolucionBaja.getText());

                        this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(null, "Dedicación semanal incorrecta",
                                "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Fechas incorrectas. La fecha "
                            + "desde debe ser anterior a la fecha hasta",
                            "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debe seleccionar un investigador",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un investigador",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    public boolean isGuardado() {
        return guardado;
    }

    private void cambiarEstadoFechaHasta() {
        if (chkActualmente.isSelected()) {
            jXDateFechaHasta.setEnabled(false);
        } else {
            jXDateFechaHasta.setEnabled(true);
        }
    }

    private void buscarInvestigador() {
        diagInvestigadorBusquedaSimple diagInvestigadorBusquedaSimple = new diagInvestigadorBusquedaSimple(null, true);
        diagInvestigadorBusquedaSimple.setLocation(Comunes.centrarDialog(diagInvestigadorBusquedaSimple));
        diagInvestigadorBusquedaSimple.setVisible(true);
        if (diagInvestigadorBusquedaSimple.getInvestigador() != null) {
            investigador = diagInvestigadorBusquedaSimple.getInvestigador();
            jtfInvestigador.setText(investigador.toString());
        }
    }
}
