/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * diagCategorizacionGestion.java
 *
 * Created on 19/11/2011, 11:31:58
 */
package vista.categorizacion;

import entidades.Resolucion;
import entidades.categorizacion.Categoria;
import entidades.categorizacion.CategoriaAnterior;
import entidades.categorizacion.CategoriaAsignada;
import entidades.categorizacion.CategoriaSolicitada;
import entidades.categorizacion.Categorizacion;
import entidades.categorizacion.Llamado;
import entidades.categorizacion.ValorCategoria;
import entidades.operaciones.Operacion;
import entidades.persona.investigador.Investigador;
import entidades.usuario.Usuario;
import facade.CategorizacionFacade;
import facade.LlamadoFacade;
import facade.OperacionFacade;
import facade.ValorCategoriaFacade;
import includes.Comunes;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author wbivanco
 */
public class diagCategorizacionGestion extends javax.swing.JDialog {
    // Arraylist de items que va a ser dinamico 
    private ArrayList<Llamado> datos;    
    // Defino aqui el modelo de la lista 
    DefaultListModel modeloLista = new DefaultListModel();    
    // Me permite saber si es un Alta o una Modifcaci√≥n
    private String accion;
    private Usuario usuario;

    public String getAccion() {
        return accion;
    }

    public void setAccion(String accion) {
        this.accion = accion;
    }
        
    /** Creates new form diagCategorizacionGestion */
    public diagCategorizacionGestion(java.awt.Frame parent, boolean modal, Usuario usuario) {
        super(parent, modal);
        initComponents();
        this.usuario=usuario;
        iniciarComponentes();
        cargarComboLlamado();
        cargarComboCategoriaAsignada();
        cargarComboCategoriaSolicitada();
        cargarComboCategoriaAnterior();
        cargarInvestigador();     
        datos = new ArrayList<Llamado>();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblInvestigador = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cmbLlamado = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        tfCondicion = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        dpSolicitada = new org.jdesktop.swingx.JXDatePicker();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cmbSolicitada = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstResoluciones = new javax.swing.JList();
        btnAgregarResolucion = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cmbAsignada = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        dpAsignada = new org.jdesktop.swingx.JXDatePicker();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        dpAnterior = new org.jdesktop.swingx.JXDatePicker();
        cmbAnterior = new javax.swing.JComboBox();
        btnGuardar = new javax.swing.JButton();
        btnQuitarResolucion = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(diagCategorizacionGestion.class, "diagCategorizacionGestion.title")); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagCategorizacionGestion.class, "diagCategorizacionGestion.jPanel1.border.title"))); // NOI18N

        lblInvestigador.setFont(new java.awt.Font("Tahoma", 1, 14));
        lblInvestigador.setText(org.openide.util.NbBundle.getMessage(diagCategorizacionGestion.class, "diagCategorizacionGestion.lblInvestigador.text")); // NOI18N

        btnAgregar.setText(org.openide.util.NbBundle.getMessage(diagCategorizacionGestion.class, "diagCategorizacionGestion.btnAgregar.text")); // NOI18N
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnModificar.setText(org.openide.util.NbBundle.getMessage(diagCategorizacionGestion.class, "diagCategorizacionGestion.btnModificar.text")); // NOI18N
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(lblInvestigador, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(btnAgregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addComponent(btnModificar)
                .addGap(73, 73, 73))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblInvestigador)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnModificar))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagCategorizacionGestion.class, "diagCategorizacionGestion.jPanel2.border.title"))); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(diagCategorizacionGestion.class, "diagCategorizacionGestion.jLabel1.text")); // NOI18N

        cmbLlamado.setEnabled(false);
        cmbLlamado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbLlamadoActionPerformed(evt);
            }
        });

        jLabel2.setText(org.openide.util.NbBundle.getMessage(diagCategorizacionGestion.class, "diagCategorizacionGestion.jLabel2.text")); // NOI18N

        tfCondicion.setText(org.openide.util.NbBundle.getMessage(diagCategorizacionGestion.class, "diagCategorizacionGestion.tfCondicion.text")); // NOI18N
        tfCondicion.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel3.setText(org.openide.util.NbBundle.getMessage(diagCategorizacionGestion.class, "diagCategorizacionGestion.jLabel3.text")); // NOI18N

        dpSolicitada.setEnabled(false);
        dpSolicitada.setFormats("dd/MM/yyyy");

        jLabel4.setText(org.openide.util.NbBundle.getMessage(diagCategorizacionGestion.class, "diagCategorizacionGestion.jLabel4.text")); // NOI18N

        jLabel5.setText(org.openide.util.NbBundle.getMessage(diagCategorizacionGestion.class, "diagCategorizacionGestion.jLabel5.text")); // NOI18N

        cmbSolicitada.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel6.setText(org.openide.util.NbBundle.getMessage(diagCategorizacionGestion.class, "diagCategorizacionGestion.jLabel6.text")); // NOI18N

        lstResoluciones.setEnabled(false);
        jScrollPane1.setViewportView(lstResoluciones);

        btnAgregarResolucion.setText(org.openide.util.NbBundle.getMessage(diagCategorizacionGestion.class, "diagCategorizacionGestion.btnAgregarResolucion.text")); // NOI18N
        btnAgregarResolucion.setEnabled(false);
        btnAgregarResolucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarResolucionActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel7.setText(org.openide.util.NbBundle.getMessage(diagCategorizacionGestion.class, "diagCategorizacionGestion.jLabel7.text")); // NOI18N

        jLabel8.setText(org.openide.util.NbBundle.getMessage(diagCategorizacionGestion.class, "diagCategorizacionGestion.jLabel8.text")); // NOI18N

        cmbAsignada.setEnabled(false);

        jLabel9.setText(org.openide.util.NbBundle.getMessage(diagCategorizacionGestion.class, "diagCategorizacionGestion.jLabel9.text")); // NOI18N

        dpAsignada.setEnabled(false);
        dpAsignada.setFormats("dd/MM/yyyy");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel10.setText(org.openide.util.NbBundle.getMessage(diagCategorizacionGestion.class, "diagCategorizacionGestion.jLabel10.text")); // NOI18N

        jLabel11.setText(org.openide.util.NbBundle.getMessage(diagCategorizacionGestion.class, "diagCategorizacionGestion.jLabel11.text")); // NOI18N

        jLabel12.setText(org.openide.util.NbBundle.getMessage(diagCategorizacionGestion.class, "diagCategorizacionGestion.jLabel12.text")); // NOI18N

        dpAnterior.setEnabled(false);
        dpAnterior.setFormats("dd/MM/yyyy");

        cmbAnterior.setEnabled(false);

        btnGuardar.setText(org.openide.util.NbBundle.getMessage(diagCategorizacionGestion.class, "diagCategorizacionGestion.btnGuardar.text")); // NOI18N
        btnGuardar.setEnabled(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnQuitarResolucion.setText(org.openide.util.NbBundle.getMessage(diagCategorizacionGestion.class, "diagCategorizacionGestion.btnQuitarResolucion.text")); // NOI18N
        btnQuitarResolucion.setEnabled(false);
        btnQuitarResolucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarResolucionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbLlamado, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfCondicion, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE))
                .addGap(50, 50, 50)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbSolicitada, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dpSolicitada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbAsignada, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dpAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dpAsignada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnAgregarResolucion)
                                .addGap(26, 26, 26)
                                .addComponent(btnQuitarResolucion))
                            .addComponent(jLabel6)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbLlamado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnGuardar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfCondicion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbSolicitada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregarResolucion)
                    .addComponent(btnQuitarResolucion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(dpSolicitada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbAsignada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(dpAsignada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(cmbAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dpAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        guardarCategorizacion();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        agregarCategorizacion();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        modificarCategorizacion();
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnAgregarResolucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarResolucionActionPerformed
        agregarResolucion();
    }//GEN-LAST:event_btnAgregarResolucionActionPerformed

    private void btnQuitarResolucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarResolucionActionPerformed
        quitarResolucion();
    }//GEN-LAST:event_btnQuitarResolucionActionPerformed

    private void cmbLlamadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbLlamadoActionPerformed
        editar();
    }//GEN-LAST:event_cmbLlamadoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(diagCategorizacionGestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(diagCategorizacionGestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(diagCategorizacionGestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(diagCategorizacionGestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                diagCategorizacionGestion dialog = new diagCategorizacionGestion(new javax.swing.JFrame(), true,new Usuario());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAgregarResolucion;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnQuitarResolucion;
    private javax.swing.JComboBox cmbAnterior;
    private javax.swing.JComboBox cmbAsignada;
    private javax.swing.JComboBox cmbLlamado;
    private javax.swing.JComboBox cmbSolicitada;
    private org.jdesktop.swingx.JXDatePicker dpAnterior;
    private org.jdesktop.swingx.JXDatePicker dpAsignada;
    private org.jdesktop.swingx.JXDatePicker dpSolicitada;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblInvestigador;
    private javax.swing.JList lstResoluciones;
    private javax.swing.JTextField tfCondicion;
    // End of variables declaration//GEN-END:variables

    // MANEJO DE COMPONENTES
    private void gestionararComponentes(boolean estado) {        
        tfCondicion.setEnabled(estado);
        cmbAnterior.setEnabled(estado);
        dpAnterior.setEnabled(estado);
        cmbAsignada.setEnabled(estado);
        dpAsignada.setEnabled(estado);
        cmbSolicitada.setEnabled(estado);
        dpSolicitada.setEnabled(estado);
        btnAgregarResolucion.setEnabled(estado);
        btnQuitarResolucion.setEnabled(estado);
        lstResoluciones.setEnabled(estado);
        btnGuardar.setEnabled(estado);                
    }
    
    private void iniciarComponentes() {
       this.setLocationRelativeTo(null);
       gestionararComponentes(false);
    }    
   
    private void agregarCategorizacion() {
        // Habilito Componentes
        gestionararComponentes(true);
        cmbLlamado.setEnabled(true);
        btnModificar.setEnabled(false);
        btnAgregar.setEnabled(false);       
        tfCondicion.requestFocus();
        setAccion("Agregar");
    }
    
    private void modificarCategorizacion() {
        cmbLlamado.setEnabled(true);
        btnAgregar.setEnabled(false);
        btnModificar.setEnabled(false);
        setAccion("Modificar");
    }       
    
    // MANEJO DE DATOS
    private void cargarInvestigador() {         
        Investigador inve = diagInvestigadorBusqueda.investigadorSeleccionado;
        String ape = inve.getPersona().getApellido();
        String nom = inve.getPersona().getNombre();
        String cuil = inve.getPersona().getCuil();
        lblInvestigador.setText(ape + ", " + nom + " - CUIL: " + cuil);
    }
    
    private void cargarComboLlamado() {
        Comunes.cargarJComboConBlanco(cmbLlamado, LlamadoFacade.getInstance().llamadoTraerTodosOrdenadosFecha());
    }

    private void cargarComboCategoriaAsignada() {        
        Comunes.cargarJCombo(cmbAsignada, ValorCategoriaFacade.getInstance().listarTodosValorCategoria());
    }

    private void cargarComboCategoriaSolicitada() {        
        Comunes.cargarJCombo(cmbSolicitada, ValorCategoriaFacade.getInstance().listarTodosValorCategoria());
    }

    private void cargarComboCategoriaAnterior() {        
        Comunes.cargarJCombo(cmbAnterior, ValorCategoriaFacade.getInstance().listarTodosValorCategoria());
    }

    private void guardarCategorizacion() {
        Categorizacion categorizacion = new Categorizacion();
        
        Llamado llamado = (Llamado) cmbLlamado.getSelectedItem();
        
        CategoriaAnterior cateAnterior = new CategoriaAnterior();        
        ValorCategoria valeCateAnterior = (ValorCategoria) cmbAnterior.getSelectedItem();
        cateAnterior.setValorCategoria(valeCateAnterior);
        cateAnterior.setFechaCategoria(dpAnterior.getDate());
        
        CategoriaSolicitada cateSolicitada = new CategoriaSolicitada();
        ValorCategoria valeCateSolicitada = (ValorCategoria) cmbSolicitada.getSelectedItem();
        cateSolicitada.setValorCategoria(valeCateSolicitada);
        cateSolicitada.setFechaCategoria(dpSolicitada.getDate());
        
        CategoriaAsignada cateAsignada = new CategoriaAsignada();
        ValorCategoria valeCateAsignada = (ValorCategoria) cmbAsignada.getSelectedItem();
        cateAsignada.setValorCategoria(valeCateAsignada);
        cateAsignada.setFechaCategoria(dpAsignada.getDate());        
        
        categorizacion.setLlamado(llamado);
        categorizacion.setCondicion(tfCondicion.getText());
        categorizacion.setCategoriaSolicitada(cateSolicitada);
        categorizacion.setCategoriaAnterior(cateAnterior);
        categorizacion.setCategoriaAsignada(cateAsignada);
        categorizacion.setResoluciones(null);
        
        CategorizacionFacade.getInstance().alta(categorizacion);
        Operacion operacion = new Operacion();
        operacion.setFecha(Comunes.obtenerFechaActualDesdeDB());
        operacion.setOperacion("Alta de Categorizacion");
        operacion.setUsuario(usuario);
        OperacionFacade.getInstance().alta(operacion);
        
        Investigador inve = diagInvestigadorBusqueda.investigadorSeleccionado;
        String ape = inve.getPersona().getApellido();
        String nom = inve.getPersona().getNombre();        
        
        JOptionPane.showMessageDialog(rootPane, "La categorizaci√≥n de \"" + 
                ape + ", " + nom + "\" ha sido guardada con √©xito");
        
    }
    
    
    
    
    
    
    public ArrayList<Llamado> agregarFila(Llamado resolucion){       
        datos.add(resolucion);        
        return datos;
    }
    
    public ArrayList<Llamado> quitarFila(int fila){ 
        datos.remove(fila);        
        return datos;
    }
    
    public void cargarLista(){
       Comunes.cargarJList(lstResoluciones, datos);
    }     
     
    public void limpiarLista(){
          for(int j = modeloLista.getSize()-1; j >= 0; j--){  
               modeloLista.remove(j);               
          }
    }

    private void agregarResolucion() {       
        diagLlamadoBusqueda buscado = new diagLlamadoBusqueda(null, true, usuario);
        buscado.setVisible(true);
                
        Llamado llamadoBuscado = buscado.getLlamadoSeleccionado();        
        agregarFila(llamadoBuscado);
        cargarLista();        
    }

    private void quitarResolucion() {
        quitarFila(lstResoluciones.getSelectedIndex());
        cargarLista();
    }

    // LO COMENTE PORQUE HICE UNIDIRECCIONAL LA RELACION ENTRE CATEGORIZACION Y LLAMADO
    private void editar() {
//        gestionararComponentes(true);              
//        Llamado llamadoSeleccionado = (Llamado) cmbLlamado.getSelectedItem();
//        tfCondicion.setText(llamadoSeleccionado.getDescripcion());
//        cargarComboCategoriaAnterior();           
//        cmbAnterior.setSelectedItem(llamadoSeleccionado.getCategorizacion().getCategoriaAnterior().getValorCategoria());
//        dpAnterior.setDate(llamadoSeleccionado.getCategorizacion().getCategoriaAnterior().getFechaCategoria());
//        cargarComboCategoriaAsignada();
//        cmbAsignada.setSelectedItem(llamadoSeleccionado.getCategorizacion().getCategoriaAsignada().getValorCategoria());
//        dpAsignada.setDate(llamadoSeleccionado.getCategorizacion().getCategoriaAsignada().getFechaCategoria());
//        cargarComboCategoriaSolicitada();
//        cmbSolicitada.setSelectedItem(llamadoSeleccionado.getCategorizacion().getCategoriaSolicitada().getValorCategoria());
//        dpSolicitada.setDate(llamadoSeleccionado.getCategorizacion().getCategoriaSolicitada().getFechaCategoria());
        /*
         * ***************************************
         * 
         FALTA LA CARGA DE LA LISTA DE RESOLUCIONES
         * 
         * ****************************************
         
         */        
    }
    
}
