/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.categorizacion;

import entidades.Documento;
import entidades.categorizacion.Categorizacion;
import entidades.categorizacion.EvaluacionWinsip;
import entidades.categorizacion.EvaluacionWinsipIntegrantes;
import entidades.categorizacion.Winsip;
import entidades.persona.CorreoElectronico;
import entidades.persona.investigador.Investigador;
import facade.CategorizacionFacade;
import facade.ConexionFacade;
import facade.DocumentoFacade;
import facade.InvestigadorFacade;
import facade.ParticipacionFacade;
import facade.ProyectoFacade;
import facade.WinsipFacade;
import includes.Comunes;
import includes.ExportarExcel;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import jxl.Workbook;
import jxl.format.Colour;
import jxl.write.Label;
import jxl.write.WritableCellFormat;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.write.WriteException;
import vista.proyectoWeb.DiagListadoProyectosWeb;

/**
 *
 * @author huguito
 */
public class diagReportesCategorizacion extends javax.swing.JDialog {

    EntityManagerFactory emf = Persistence.createEntityManagerFactory("ProyectoUnoPU", ConexionFacade.PROPIEDADES);
    EntityManager em = emf.createEntityManager();

    /**
     * Creates new form diagReportesCategorizacion
     */
    public diagReportesCategorizacion(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        btnReporteWinsip = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        btnExportarProyectosWeb = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagReportesCategorizacion.class, "diagReportesCategorizacion.jPanel1.border.title"))); // NOI18N

        jButton3.setText(org.openide.util.NbBundle.getMessage(diagReportesCategorizacion.class, "diagReportesCategorizacion.jButton3.text")); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText(org.openide.util.NbBundle.getMessage(diagReportesCategorizacion.class, "diagReportesCategorizacion.jButton4.text")); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton9.setText(org.openide.util.NbBundle.getMessage(diagReportesCategorizacion.class, "diagReportesCategorizacion.jButton9.text")); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton8.setText(org.openide.util.NbBundle.getMessage(diagReportesCategorizacion.class, "diagReportesCategorizacion.jButton8.text")); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), org.openide.util.NbBundle.getMessage(diagReportesCategorizacion.class, "diagReportesCategorizacion.jPanel2.border.title"))); // NOI18N

        jButton1.setText(org.openide.util.NbBundle.getMessage(diagReportesCategorizacion.class, "diagReportesCategorizacion.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnReporteWinsip.setText(org.openide.util.NbBundle.getMessage(diagReportesCategorizacion.class, "diagReportesCategorizacion.btnReporteWinsip.text")); // NOI18N
        btnReporteWinsip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteWinsipActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(btnReporteWinsip, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(btnReporteWinsip))
                .addContainerGap(57, Short.MAX_VALUE))
        );

        jButton5.setText(org.openide.util.NbBundle.getMessage(diagReportesCategorizacion.class, "diagReportesCategorizacion.jButton5.text")); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        btnExportarProyectosWeb.setText(org.openide.util.NbBundle.getMessage(diagReportesCategorizacion.class, "diagReportesCategorizacion.btnExportarProyectosWeb.text")); // NOI18N
        btnExportarProyectosWeb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarProyectosWebActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(51, 51, 51)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnExportarProyectosWeb, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton8))
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton4))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jButton9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnExportarProyectosWeb)))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnCerrar.setText(org.openide.util.NbBundle.getMessage(diagReportesCategorizacion.class, "diagReportesCategorizacion.btnCerrar.text")); // NOI18N
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(255, 255, 255)
                .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnCerrar)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        new reportes.Reporte().reporteCategorizacion();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Comunes.ventanaCargando(InvestigadorFacade.getInstance(), "exportarAExcelDatosDocentesCatTelMail", "Preparandose para Exportar a Excel", null);

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        new reportes.Reporte().mostrarReporteCategorizacionInvestigador();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        new reportes.Reporte().reporteGraficoCategorizaciones();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Comunes.ventanaCargando(this, "exportar", "Preparandose para Exportar a Excel", null);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        new reportes.Reporte().reporteCategorizacionesInvestigador();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void btnReporteWinsipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporteWinsipActionPerformed
        Comunes.ventanaCargando(this, "exportarWinsip", "Preparandose para Exportar a Excel", null);

    }//GEN-LAST:event_btnReporteWinsipActionPerformed

    private void btnExportarProyectosWebActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarProyectosWebActionPerformed
        exportarProyectosWeb();
    }//GEN-LAST:event_btnExportarProyectosWebActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(diagReportesCategorizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(diagReportesCategorizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(diagReportesCategorizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(diagReportesCategorizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                diagReportesCategorizacion dialog = new diagReportesCategorizacion(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnExportarProyectosWeb;
    private javax.swing.JButton btnReporteWinsip;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

    public void exportar() {
        //List<Investigador> lista = CategorizacionFacade.getInstance().CategorizacionesInvestigador();

        JFileChooser fc = new JFileChooser(System.getProperty("user.dir"));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos Excel", "xls");
        fc.setFileFilter(filter);
        fc.showSaveDialog(null);
        File guardar = fc.getSelectedFile();
        if (guardar != null) {
            try {
                FileOutputStream archivo = new FileOutputStream(guardar.toString() + ".xls");
                WritableWorkbook workbook = Workbook.createWorkbook(archivo);
                WritableSheet sheet = workbook.createSheet("hoja 1", 0);
                WritableCellFormat formato = new WritableCellFormat();
                formato.setBackground(Colour.AQUA);
                int fila = 3;
                addLabel(sheet, 0, 0, "Universidad Nacional de Catamarca", formato);
                addLabel(sheet, 0, 1, "Categorizaciones", formato);
                addLabel(sheet, 0, 2, "Unidad Académica", formato);
                addLabel(sheet, 1, 2, "Disciplina", formato);
                addLabel(sheet, 2, 2, "Apellido", formato);
                addLabel(sheet, 3, 2, "Nombre", formato);
                addLabel(sheet, 4, 2, "CUIL/CUIT", formato);
                addLabel(sheet, 5, 2, "Email", formato);
                addLabel(sheet, 6, 2, "Llamado", formato);
                addLabel(sheet, 7, 2, "Condición", formato);
                addLabel(sheet, 8, 2, "Categoría Solicitada", formato);
                addLabel(sheet, 9, 2, "Categoría Asignada", formato);
                addLabel(sheet, 10, 2, "Categoría Anterior", formato);
                addLabel(sheet, 11, 2, "Resoluciones", formato);

                Query quCategorizaciones = em.createQuery("select i from Investigador i where"
                        + " i.categorizaciones is not empty");
                int primerresultado = 0;
                int tamaño = 100;
                quCategorizaciones.setFirstResult(primerresultado);
                quCategorizaciones.setMaxResults(tamaño);
                List<Investigador> lista = quCategorizaciones.getResultList();
                boolean bandera = false;
                DocumentoFacade documentoFacade = DocumentoFacade.getInstance();

                while (!bandera) {
                    if (lista.size() < tamaño) {
                        bandera = true;
                    }
                    for (Investigador inve : lista) {
                        try {
                            for (Categorizacion cate : inve.getCategorizaciones()) {

                                try {
                                    addLabelif(sheet, 0, fila, cate.getUnidadAcademica().toString());
                                } catch (Exception ex) {
                                }
                                try {
                                    addLabelif(sheet, 1, fila, cate.getComision().toString());
                                } catch (Exception ex) {
                                }
                                try {
                                    addLabelif(sheet, 2, fila, inve.getPersona().getApellido());
                                } catch (Exception ex) {
                                }
                                try {
                                    addLabelif(sheet, 3, fila, inve.getPersona().getNombre());
                                } catch (Exception ex) {
                                }
                                try {
                                    addLabelif(sheet, 4, fila, inve.getPersona().getCuil());
                                } catch (Exception ex) {
                                }
                                try {
                                    StringBuilder sbMail = new StringBuilder();
                                    for (CorreoElectronico mail : inve.getPersona().getCorreosElectronicos()) {
                                        sbMail.append(mail.getDireccion());
                                        sbMail.append("; ");
                                    }
                                    addLabelif(sheet, 5, fila, sbMail.toString());
                                } catch (Exception ex) {
                                }
                                try {
                                    addLabelif(sheet, 6, fila, cate.getLlamado().toString());
                                } catch (Exception ex) {
                                }
                                try {
                                    addLabelif(sheet, 7, fila, cate.getCondicion().toString());
                                } catch (Exception ex) {
                                }
                                try {
                                    addLabelif(sheet, 8, fila, cate.getCategoriaSolicitada().toString());
                                } catch (Exception ex) {
                                }
                                try {
                                    addLabelif(sheet, 9, fila, cate.getCategoriaAsignada().toString());
                                } catch (Exception ex) {
                                }
                                try {
                                    addLabelif(sheet, 10, fila, cate.getCategoriaAnterior().toString());
                                } catch (Exception ex) {
                                }
                                try {
                                    String resol = documentoFacade.getDocumentosDeCategorizacion(cate);

                                    addLabelif(sheet, 11, fila, resol);
                                } catch (Exception ex) {
                                }
                                fila++;
                            }
                        } catch (Exception ex) {
                        }
                    }
                    primerresultado = primerresultado + tamaño;
                    quCategorizaciones.setFirstResult(primerresultado);
                    if (!bandera) {
                        lista = quCategorizaciones.getResultList();
                    }
                }
                workbook.write();
                workbook.close();
                archivo.close();
                JOptionPane.showMessageDialog(null, "Exportado Correctamente");

            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Error al Exportar", "Error", JOptionPane.ERROR_MESSAGE);
            } catch (WriteException ex) {
                System.out.println("Error guardando " + ex);
            } catch (NullPointerException ex) {
                System.out.println("Error " + ex.getMessage());
            }
        }
    }

    private void addLabel(WritableSheet sheet, int column, int row, String s, WritableCellFormat formato) throws WriteException {
        Label label;
        label = new Label(column, row, s, formato);
        sheet.addCell(label);
    }

    private void addLabelif(WritableSheet sheet, int column, int row, String s) throws WriteException {
        Label label;
        if (s != null) {
            label = new Label(column, row, s);
            sheet.addCell(label);
        } else {
            label = new Label(column, row, "");
            sheet.addCell(label);
        }
    }

    public void exportar2() {
        //Datos a escribir
        List<String> lista = new ArrayList<>();
        DocumentoFacade documentoFacade = DocumentoFacade.getInstance();
        lista.add("Universidad Nacional de Catamarca|Categorizaciones|Unidad Académica|Disciplina|Apellido|Nombre|CUIL/CUIT|Llamado|Condición|Categoría Solicitada|Categoría Asignada|Categoría Anterior|Resoluciones");

        StringBuilder stringBuider = new StringBuilder();

        for (Investigador inve : CategorizacionFacade.getInstance().CategorizacionesInvestigador()) {
            {
                try {
                    for (Categorizacion cate : inve.getCategorizaciones()) {

                        try {
                            stringBuider.append(cate.getUnidadAcademica().toString());

                        } catch (Exception ex) {
                            stringBuider.append(" ");
                        }
                        stringBuider.append("|");

                        try {
                            stringBuider.append(cate.getComision().toString());
                        } catch (Exception ex) {
                            stringBuider.append(" ");
                        }
                        stringBuider.append("|");
                        try {
                            stringBuider.append(inve.getPersona().getApellido());
                        } catch (Exception ex) {
                            stringBuider.append(" ");

                        }
                        stringBuider.append("|");
                        try {
                            stringBuider.append(inve.getPersona().getNombre());
                        } catch (Exception ex) {
                            stringBuider.append(" ");

                        }
                        stringBuider.append("|");
                        try {
                            stringBuider.append(inve.getPersona().getCuil());

                        } catch (Exception ex) {
                            stringBuider.append(" ");

                        }
                        stringBuider.append("|");
                        try {
                            stringBuider.append(cate.getLlamado().toString());
                        } catch (Exception ex) {
                            stringBuider.append(" ");

                        }
                        stringBuider.append("|");
                        try {
                            stringBuider.append(cate.getCondicion().toString());

                        } catch (Exception ex) {
                            stringBuider.append(" ");

                        }
                        stringBuider.append("|");
                        try {
                            stringBuider.append(cate.getCategoriaSolicitada().toString());

                        } catch (Exception ex) {
                            stringBuider.append(" ");

                        }
                        stringBuider.append("|");
                        try {
                            stringBuider.append(cate.getCategoriaAsignada().toString());

                        } catch (Exception ex) {
                            stringBuider.append(" ");

                        }
                        stringBuider.append("|");
                        try {
                            stringBuider.append(cate.getCategoriaAnterior().toString());

                        } catch (Exception ex) {
                            stringBuider.append(" ");

                        }
                        stringBuider.append("|");
                        try {
                            String resol = documentoFacade.getDocumentosDeCategorizacion(cate);

                            stringBuider.append(resol);

                        } catch (Exception ex) {
                            stringBuider.append(" ");

                        }
                        stringBuider.append("|");
                        lista.add(stringBuider.toString());

                    }

                } catch (Exception ex) {
                }
            }

        }

        // Generar el fichero
        new ExportarExcel().crearExcel(lista, "Investigadores");

    }

    public void exportarWinsip() {
        //Datos a escribir
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        List<String> lista = new ArrayList<>();
        DocumentoFacade documentoFacade = DocumentoFacade.getInstance();
        lista.add("COD. PROYECTO|TITULO PROYECTO|DIRECTOR|TIPO DE INFORME|AÑO DEL INFORME|FECHA DE EVALUACION|RESULTADO DE LA EVALUACION|LUGAR DE LA EVALUACION|EVALUACION|PDF DE EVALUACION DEL INFORME|PDF DE EVALUACION DE INTEGRANTES");

        for (Object[] winsip : WinsipFacade.getInstance().getListaReporteWinsip()) {

            StringBuilder stringBuider = new StringBuilder();
            try {
                //stringBuider.append(winsip[0]);
                stringBuider.append(winsip[0]);
            } catch (Exception ex) {
                stringBuider.append(" ");
            }
            stringBuider.append("|");

            try {
                stringBuider.append(winsip[1]);
            } catch (Exception ex) {
                stringBuider.append(" ");
            }
            stringBuider.append("|");
            try {
                //stringBuider.append(winsip[2]);
                stringBuider.append(winsip[2]);
            } catch (Exception ex) {
                stringBuider.append(" ");

            }
            stringBuider.append("|");
            try {
                stringBuider.append(winsip[3]);
            } catch (Exception ex) {
                stringBuider.append(" ");

            }
            stringBuider.append("|");
            try {
                stringBuider.append(winsip[4]);

            } catch (Exception ex) {
                stringBuider.append(" ");

            }
            stringBuider.append("|");
            try {
                stringBuider.append(formato.format(winsip[5]));
            } catch (Exception ex) {
                stringBuider.append(" ");

            }
            stringBuider.append("|");
            try {
                stringBuider.append(winsip[6]);
            } catch (Exception ex) {
                stringBuider.append(" ");

            }
            stringBuider.append("|");
            try {
                stringBuider.append(winsip[7]);
            } catch (Exception ex) {
                stringBuider.append(" ");

            }
            stringBuider.append("|");
            try {
                stringBuider.append(winsip[8]);
            } catch (Exception ex) {
                stringBuider.append(" ");

            }
            stringBuider.append("|");
            try {
                stringBuider.append(winsip[9]);
            } catch (Exception ex) {
                stringBuider.append(" ");

            }
            stringBuider.append("|");
            try {
                stringBuider.append(winsip[10]);
            } catch (Exception ex) {
                stringBuider.append(" ");

            }
            stringBuider.append("|");

//            try {
//                /*
//                for (EvaluacionWinsipIntegrantes evaluacionWinsip : ((Winsip) winsip[7]).getEvaluacionesIntegrantes()) {
//                    stringBuider.append(evaluacionWinsip.getInvestigador());
//                    stringBuider.append("; ");
//                }*/
//                //con el fetch join no hace falta hacer de esa consulta.
//                stringBuider.append(((Winsip) winsip[0]).getEvaluacionesIntegrantes());
//            } catch (Exception ex) {
//                stringBuider.append(" ");
//
//            }
//            stringBuider.append("|");
//
//            try {
//                stringBuider.append(winsip[2]);
//               
//            } catch (Exception ex) {
//                stringBuider.append(" ");
//            }
//            stringBuider.append("|");
//            try {
//                stringBuider.append(winsip[3]);
//
//            } catch (Exception ex) {
//                stringBuider.append(" ");
//
//            }
//            stringBuider.append("|");
            lista.add(stringBuider.toString());

        }

        // Generar el fichero
        new ExportarExcel().crearExcel(lista, "Winsip");

    }

    public void exportarWinsipEvaluacion() {

    }

    private void exportarProyectosWeb() {
        DiagListadoProyectosWeb diagListadoProyectosWeb = new DiagListadoProyectosWeb(null, true);
        diagListadoProyectosWeb.setLocation(Comunes.centrarDialog(diagListadoProyectosWeb));
        diagListadoProyectosWeb.setVisible(true);
    }

}
