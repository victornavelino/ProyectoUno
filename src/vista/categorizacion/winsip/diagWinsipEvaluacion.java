/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * diagEvaluacionWinsip.java
 *
 * Created on 20/08/2011, 10:20:28
 */
package vista.categorizacion.winsip;

import entidades.categorizacion.EvaluacionWinsip;
import entidades.categorizacion.Winsip;
import vistas.evaluaciones.*;
import entidades.persona.Evaluador;
import entidades.proyecto.Nota;
import entidades.proyecto.Proyecto;
import entidades.usuario.Usuario;
import facade.EvaluacionWinsipFacade;
import facade.NotaFacade;
import facade.ProyectoFacade;
import includes.Comunes;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.zip.DataFormatException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import vista.diagEvaluadorBusqueda;
import vista.proyectos.diagNota;

/**
 *
 * @author carlos
 */
public class diagWinsipEvaluacion extends javax.swing.JDialog {

    private Evaluador evaluador;
    private EvaluacionWinsip evaluacion;
    private Nota nota;
    private Usuario usuario;
    private String tipoOperacion;
    private Winsip winsip;

    /**
     * Creates new form diagEvaluacionWinsip
     */
    public diagWinsipEvaluacion(java.awt.Frame parent, boolean modal, String tipoOperacion, Usuario usuario, Winsip winsip) {
        super(parent, modal);
        this.tipoOperacion = tipoOperacion;
        this.usuario = usuario;
        this.winsip = winsip;

        initComponents();
        iniciarComponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfEvaluador = new javax.swing.JTextField();
        btSeleccionarEvaluador = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cboNota = new javax.swing.JComboBox();
        btAgregarNuevaEvaluacion = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        dataPickerFecha = new org.jdesktop.swingx.JXDatePicker();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        taSugerencias = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagWinsipEvaluacion.class, "diagWinsipEvaluacion.jPanel1.border.title"))); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(diagWinsipEvaluacion.class, "diagWinsipEvaluacion.jLabel1.text")); // NOI18N

        tfEvaluador.setText(org.openide.util.NbBundle.getMessage(diagWinsipEvaluacion.class, "diagWinsipEvaluacion.tfEvaluador.text")); // NOI18N

        btSeleccionarEvaluador.setText(org.openide.util.NbBundle.getMessage(diagWinsipEvaluacion.class, "diagWinsipEvaluacion.btSeleccionarEvaluador.text")); // NOI18N
        btSeleccionarEvaluador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSeleccionarEvaluadorActionPerformed(evt);
            }
        });

        jLabel2.setText(org.openide.util.NbBundle.getMessage(diagWinsipEvaluacion.class, "diagWinsipEvaluacion.jLabel2.text")); // NOI18N

        cboNota.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboNotaItemStateChanged(evt);
            }
        });

        btAgregarNuevaEvaluacion.setText(org.openide.util.NbBundle.getMessage(diagWinsipEvaluacion.class, "diagWinsipEvaluacion.btAgregarNuevaEvaluacion.text")); // NOI18N
        btAgregarNuevaEvaluacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAgregarNuevaEvaluacionActionPerformed(evt);
            }
        });

        jLabel3.setText(org.openide.util.NbBundle.getMessage(diagWinsipEvaluacion.class, "diagWinsipEvaluacion.jLabel3.text")); // NOI18N

        dataPickerFecha.setFormats("dd/MM/yyyy");

        jButton2.setText(org.openide.util.NbBundle.getMessage(diagWinsipEvaluacion.class, "diagWinsipEvaluacion.jButton2.text")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        taSugerencias.setColumns(20);
        taSugerencias.setRows(5);
        jScrollPane2.setViewportView(taSugerencias);

        jLabel4.setText(org.openide.util.NbBundle.getMessage(diagWinsipEvaluacion.class, "diagWinsipEvaluacion.jLabel4.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cboNota, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(tfEvaluador))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btSeleccionarEvaluador)
                                .addGap(16, 16, 16))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(btAgregarNuevaEvaluacion)
                                .addContainerGap())))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dataPickerFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(199, 199, 199))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jLabel1)
                    .addComponent(tfEvaluador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSeleccionarEvaluador))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cboNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAgregarNuevaEvaluacion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dataPickerFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btSeleccionarEvaluadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSeleccionarEvaluadorActionPerformed
        seleccionarEvaluador();        // TODO add your handling code here:
    }//GEN-LAST:event_btSeleccionarEvaluadorActionPerformed

    private void btAgregarNuevaEvaluacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAgregarNuevaEvaluacionActionPerformed
        agregarNuevaNota();        // TODO add your handling code here:
    }//GEN-LAST:event_btAgregarNuevaEvaluacionActionPerformed

private void cboNotaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboNotaItemStateChanged
    cambiarNotaSeleccionada();
}//GEN-LAST:event_cboNotaItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        aceptar();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAgregarNuevaEvaluacion;
    private javax.swing.JButton btSeleccionarEvaluador;
    private javax.swing.JComboBox cboNota;
    private org.jdesktop.swingx.JXDatePicker dataPickerFecha;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea taSugerencias;
    private javax.swing.JTextField tfEvaluador;
    // End of variables declaration//GEN-END:variables

    private void seleccionarEvaluador() {
        diagEvaluadorBusqueda evaluadorEleccion = new diagEvaluadorBusqueda(null, true, usuario);
        evaluadorEleccion.setLocation(Comunes.centrarDialog(evaluadorEleccion));
        evaluadorEleccion.setVisible(true);

        if (evaluadorEleccion.getEvaluador() != null) {
            evaluador = evaluadorEleccion.getEvaluador();
            tfEvaluador.setText(evaluador.toString());
        }

    }

    public EvaluacionWinsip getEvaluacionWinsipCreada() {
        return evaluacion;
    }

    private void cambiarNotaSeleccionada() {
        if (cboNota.getSelectedIndex() > 0) {
            nota = (Nota) cboNota.getSelectedItem();
        } else {
            nota = null;
        }
    }

    private void agregarNuevaNota() {
        diagNota diagNota = new diagNota(null, true, "Alta");
        diagNota.setTitle("Esto agregará un nuevo tipo de nota al sistema");
        diagNota.setLocation(Comunes.centrarDialog(diagNota));
        diagNota.setVisible(true);
        if (diagNota.getNotaCreada() != null) {
            nota = diagNota.getNotaCreada();
            cboNota.setSelectedItem(nota);
        }
        cargarNotas();
    }

    private boolean validar() {
        if (evaluador == null) {
            JOptionPane.showMessageDialog(null, "Debe elegir un evaluador");
            return false;
        }
        if (nota == null) {
            JOptionPane.showMessageDialog(null, "Debe elegir una nota");
            return false;
        }
        if (dataPickerFecha.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Debe elegir una fecha");
            return false;
        }
//        if (taSugerencias.getText().isEmpty()) {
//            JOptionPane.showMessageDialog(null, "Debe ingresar una sugerencia");
//            return false;
//        }
        return true;
    }

    public EvaluacionWinsip getEvaluacion() {
        return evaluacion;
    }

    public void setWinsip(Winsip winsip) {
        this.winsip = winsip;
    }

    private void aceptar() {
        if (validar()) {
            evaluacion = new EvaluacionWinsip();
            evaluacion.setEvaluador(evaluador);
            evaluacion.setFecha(dataPickerFecha.getDate());
            evaluacion.setNota(nota);
            evaluacion.setSugerencias(taSugerencias.getText());
           // EvaluacionWinsipFacade.getInstance().alta(evaluacion);
            this.dispose();
        }
    }

    private void cargarNotas() {
        Comunes.cargarJComboConBlanco(cboNota, NotaFacade.getInstance().getTodos());

    }

    private void iniciarComponentes() {
        cargarNotas();
        if (tipoOperacion.equals("Modificación")) {
            try {
                dataPickerFecha.setDate(evaluacion.getFecha());
            } catch (Exception ex) {
                dataPickerFecha.setDate(null);
            }

        }
    }
}
