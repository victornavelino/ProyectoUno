/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.categorizacion.winsip;

import entidades.Documento;
import entidades.Resolucion;
import entidades.categorizacion.EvaluacionWinsip;
import entidades.categorizacion.EvaluacionWinsipIntegrantes;
import entidades.categorizacion.TipoInforme;
import entidades.categorizacion.TipoResultadoEvaluacion;
import entidades.categorizacion.TipoResultadoInforme;
import entidades.categorizacion.Winsip;
import entidades.persona.investigador.Investigador;
import entidades.proyecto.Participacion;
import entidades.proyecto.Proyecto;
import entidades.usuario.Usuario;
import facade.EvaluacionWinsipFacade;
import facade.InvestigadorFacade;
import facade.ParticipacionFacade;
import facade.ProyectoFacade;
import facade.WinsipFacade;
import includes.Comunes;
import includes.ModeloTablaNoEditable;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.NoResultException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.JViewport;
import javax.swing.SpinnerListModel;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import vista.resoluciones.diagResolucionAlta;
import vista.resoluciones.diagResolucionEleccion;

/**
 *
 * @author panchi
 */
public class diagWinsipAlta extends javax.swing.JDialog {

    private String tipoOperacion;
    private Usuario usuario;
    private Proyecto proyecto;
    private Winsip winsip;
    private Resolucion resolucionProyecto = null;
    private Resolucion resolucionIntegrantes = null;
    private DefaultTableModel modeloEvaluacionIntegrantes = new ModeloTablaNoEditable();
    private List<EvaluacionWinsip> evaluacionesWinsip = new ArrayList<>();
    private List<EvaluacionWinsipIntegrantes> evaluacionesIntegrantes = new ArrayList<>();
    private String patron = "dd/MM/yyyy";
    private SimpleDateFormat formato = new SimpleDateFormat(patron);
    private ModeloTablaNoEditable modeloTablaEvaluaciones = new ModeloTablaNoEditable();

    /**
     * Creates new form diagWinsipAlta
     */
    public diagWinsipAlta(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        cargarSpinnerA単o();

    }

    public diagWinsipAlta(java.awt.Frame parent, boolean modal, String tipoOperacion,
            Usuario usuario, Proyecto proyecto) {
        super(parent, modal);
        this.tipoOperacion = tipoOperacion;
        this.proyecto = proyecto;
        this.usuario = usuario;
        initComponents();
        this.setSize(new Dimension(Toolkit.getDefaultToolkit().getScreenSize()));
        cargarSpinnerA単o();
        inicializarComponentes();

    }

    public diagWinsipAlta(java.awt.Frame parent, boolean modal, String tipoOperacion,
            Usuario usuario, Proyecto proyecto, Winsip winsip) {
        super(parent, modal);
        this.tipoOperacion = tipoOperacion;
        this.proyecto = proyecto;
        this.winsip = winsip;
        this.usuario = usuario;
        initComponents();
        this.setSize(new Dimension(Toolkit.getDefaultToolkit().getScreenSize()));
        cargarSpinnerA単o();
        inicializarComponentes();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableEvaluacionesWinsip = new javax.swing.JTable();
        jtfLugarEvaluacion = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableEvaluacionesIntegrantes = new javax.swing.JTable();
        jBtnAgregarEvaluacionIntegrante = new javax.swing.JButton();
        jBtnQuitarEvaluacionIntegrante = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        lbDirector = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jtfFechaEvaluacion = new org.jdesktop.swingx.JXDatePicker();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTfResolucionProyecto = new javax.swing.JTextField();
        jTfResolucionIntegrantes = new javax.swing.JTextField();
        jBtnAgregarResolucionProyecto = new javax.swing.JButton();
        jBtnModificarResolucionProyecto = new javax.swing.JButton();
        jBtnAgregarResolucionIntegrantes = new javax.swing.JButton();
        jBtnModificarResolicionIntegrantes = new javax.swing.JButton();
        jBtnVerResolucionIntegrantes = new javax.swing.JButton();
        jBtnVerResolucionProyecto = new javax.swing.JButton();
        btnQuitarResProyeto = new javax.swing.JButton();
        btnQuitarResIntegrante = new javax.swing.JButton();
        btAgregarEvaluacion = new javax.swing.JButton();
        btnEliminarEvaluacion = new javax.swing.JButton();
        cbTipoResultadoEvaluacion = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        taProyecto = new javax.swing.JTextArea();
        cbTipoInforme = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jspA単oInforme = new javax.swing.JSpinner();
        jbuttonGuardar = new javax.swing.JButton();
        jbuttonCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jPanel1.border.title"))); // NOI18N

        jLabel3.setText(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jLabel3.text")); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jPanel2.border.title"))); // NOI18N

        jTableEvaluacionesWinsip.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTableEvaluacionesWinsip);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );

        jtfLugarEvaluacion.setText(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jtfLugarEvaluacion.text")); // NOI18N
        jtfLugarEvaluacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfLugarEvaluacionActionPerformed(evt);
            }
        });

        jLabel4.setText(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jLabel4.text")); // NOI18N

        jLabel6.setText(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jLabel6.text")); // NOI18N

        jLabel5.setText(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jLabel5.text")); // NOI18N

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jPanel3.border.title"))); // NOI18N

        jTableEvaluacionesIntegrantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ));
        jScrollPane4.setViewportView(jTableEvaluacionesIntegrantes);
        jTableEvaluacionesIntegrantes.getColumnModel().getColumn(0).setHeaderValue(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jTableEvaluacionesIntegrantes.columnModel.title0")); // NOI18N
        jTableEvaluacionesIntegrantes.getColumnModel().getColumn(1).setHeaderValue(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jTableEvaluacionesIntegrantes.columnModel.title1")); // NOI18N
        jTableEvaluacionesIntegrantes.getColumnModel().getColumn(2).setHeaderValue(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jTableEvaluacionesIntegrantes.columnModel.title2")); // NOI18N
        jTableEvaluacionesIntegrantes.getColumnModel().getColumn(3).setHeaderValue(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jTableEvaluacionesIntegrantes.columnModel.title3")); // NOI18N

        jBtnAgregarEvaluacionIntegrante.setText(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jBtnAgregarEvaluacionIntegrante.text")); // NOI18N
        jBtnAgregarEvaluacionIntegrante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAgregarEvaluacionIntegranteActionPerformed(evt);
            }
        });

        jBtnQuitarEvaluacionIntegrante.setText(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jBtnQuitarEvaluacionIntegrante.text")); // NOI18N
        jBtnQuitarEvaluacionIntegrante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnQuitarEvaluacionIntegranteActionPerformed(evt);
            }
        });

        jLabel9.setText(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jLabel9.text")); // NOI18N

        lbDirector.setText(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.lbDirector.text")); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 703, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBtnAgregarEvaluacionIntegrante, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                            .addComponent(jBtnQuitarEvaluacionIntegrante, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbDirector, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(lbDirector, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jBtnAgregarEvaluacionIntegrante)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBtnQuitarEvaluacionIntegrante)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        jLabel1.setText(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jLabel1.text")); // NOI18N

        jtfFechaEvaluacion.setFormats("dd/MM/yyyy");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jPanel4.border.title"))); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jLabel2.text")); // NOI18N

        jLabel7.setText(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jLabel7.text")); // NOI18N

        jTfResolucionProyecto.setText(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jTfResolucionProyecto.text")); // NOI18N

        jTfResolucionIntegrantes.setText(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jTfResolucionIntegrantes.text")); // NOI18N

        jBtnAgregarResolucionProyecto.setText(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jBtnAgregarResolucionProyecto.text")); // NOI18N
        jBtnAgregarResolucionProyecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAgregarResolucionProyectoActionPerformed(evt);
            }
        });

        jBtnModificarResolucionProyecto.setText(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jBtnModificarResolucionProyecto.text")); // NOI18N
        jBtnModificarResolucionProyecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnModificarResolucionProyectoActionPerformed(evt);
            }
        });

        jBtnAgregarResolucionIntegrantes.setText(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jBtnAgregarResolucionIntegrantes.text")); // NOI18N
        jBtnAgregarResolucionIntegrantes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAgregarResolucionIntegrantesActionPerformed(evt);
            }
        });

        jBtnModificarResolicionIntegrantes.setText(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jBtnModificarResolicionIntegrantes.text")); // NOI18N
        jBtnModificarResolicionIntegrantes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnModificarResolicionIntegrantesActionPerformed(evt);
            }
        });

        jBtnVerResolucionIntegrantes.setText(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jBtnVerResolucionIntegrantes.text")); // NOI18N
        jBtnVerResolucionIntegrantes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnVerResolucionIntegrantesActionPerformed(evt);
            }
        });

        jBtnVerResolucionProyecto.setText(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jBtnVerResolucionProyecto.text")); // NOI18N
        jBtnVerResolucionProyecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnVerResolucionProyectoActionPerformed(evt);
            }
        });

        btnQuitarResProyeto.setText(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.btnQuitarResProyeto.text")); // NOI18N
        btnQuitarResProyeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarResProyetoActionPerformed(evt);
            }
        });

        btnQuitarResIntegrante.setText(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.btnQuitarResIntegrante.text")); // NOI18N
        btnQuitarResIntegrante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarResIntegranteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel7))
                .addGap(8, 8, 8)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTfResolucionProyecto, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                    .addComponent(jTfResolucionIntegrantes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtnAgregarResolucionProyecto)
                    .addComponent(jBtnAgregarResolucionIntegrantes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnQuitarResProyeto, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnQuitarResIntegrante, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jBtnVerResolucionIntegrantes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                        .addComponent(jBtnModificarResolicionIntegrantes))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jBtnVerResolucionProyecto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtnModificarResolucionProyecto)))
                .addGap(30, 30, 30))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTfResolucionProyecto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnAgregarResolucionProyecto)
                    .addComponent(jBtnModificarResolucionProyecto)
                    .addComponent(jBtnVerResolucionProyecto)
                    .addComponent(btnQuitarResProyeto))
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTfResolucionIntegrantes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnAgregarResolucionIntegrantes)
                    .addComponent(jBtnModificarResolicionIntegrantes)
                    .addComponent(jBtnVerResolucionIntegrantes)
                    .addComponent(btnQuitarResIntegrante))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btAgregarEvaluacion.setText(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.btAgregarEvaluacion.text")); // NOI18N
        btAgregarEvaluacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAgregarEvaluacionActionPerformed(evt);
            }
        });

        btnEliminarEvaluacion.setText(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.btnEliminarEvaluacion.text")); // NOI18N
        btnEliminarEvaluacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarEvaluacionActionPerformed(evt);
            }
        });

        cbTipoResultadoEvaluacion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        taProyecto.setColumns(20);
        taProyecto.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        taProyecto.setRows(5);
        jScrollPane1.setViewportView(taProyecto);

        cbTipoInforme.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel8.setText(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jLabel8.text")); // NOI18N

        jbuttonGuardar.setText(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jbuttonGuardar.text")); // NOI18N
        jbuttonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuttonGuardarActionPerformed(evt);
            }
        });

        jbuttonCancelar.setText(org.openide.util.NbBundle.getMessage(diagWinsipAlta.class, "diagWinsipAlta.jbuttonCancelar.text")); // NOI18N
        jbuttonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuttonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnEliminarEvaluacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btAgregarEvaluacion, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jScrollPane1))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel8))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(cbTipoInforme, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(29, 29, 29)
                                            .addComponent(jLabel4)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jspA単oInforme, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(98, 98, 98)
                                            .addComponent(jLabel1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jtfFechaEvaluacion, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(cbTipoResultadoEvaluacion, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jLabel5)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jtfLugarEvaluacion, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(27, 27, 27)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(407, 407, 407)
                        .addComponent(jbuttonGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbuttonCancelar)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtfFechaEvaluacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(cbTipoInforme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)
                        .addComponent(jspA単oInforme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbTipoResultadoEvaluacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jtfLugarEvaluacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(btAgregarEvaluacion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarEvaluacion))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbuttonGuardar)
                    .addComponent(jbuttonCancelar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbuttonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuttonGuardarActionPerformed
        aceptar();
    }//GEN-LAST:event_jbuttonGuardarActionPerformed

    private void jBtnAgregarEvaluacionIntegranteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAgregarEvaluacionIntegranteActionPerformed
        agregarEvaluacionIntegrante();
    }//GEN-LAST:event_jBtnAgregarEvaluacionIntegranteActionPerformed

    private void jBtnQuitarEvaluacionIntegranteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnQuitarEvaluacionIntegranteActionPerformed
        quitarEvaluacionIntegrante();
    }//GEN-LAST:event_jBtnQuitarEvaluacionIntegranteActionPerformed

    private void jBtnAgregarResolucionProyectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAgregarResolucionProyectoActionPerformed
        diagResolucionEleccion res = new diagResolucionEleccion(null, true);
        res.setLocationRelativeTo(this);
        res.setVisible(true);
        if (res.getResolucion() != null) {
            resolucionProyecto = res.getResolucion();
            jTfResolucionProyecto.setText(resolucionProyecto.toString());
        }

    }//GEN-LAST:event_jBtnAgregarResolucionProyectoActionPerformed

    private void jBtnAgregarResolucionIntegrantesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAgregarResolucionIntegrantesActionPerformed
        diagResolucionEleccion res = new diagResolucionEleccion(null, true);
        res.setLocationRelativeTo(this);
        res.setVisible(true);
        if (res.getResolucion() != null) {
            resolucionIntegrantes = res.getResolucion();
            jTfResolucionIntegrantes.setText(resolucionIntegrantes.toString());
        }


    }//GEN-LAST:event_jBtnAgregarResolucionIntegrantesActionPerformed

    private void jBtnModificarResolucionProyectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnModificarResolucionProyectoActionPerformed
        if (resolucionProyecto != null) {
            diagResolucionAlta res = new diagResolucionAlta(null, true, "Modificacion", resolucionProyecto);
            res.setLocationRelativeTo(this);
            res.setVisible(true);
            resolucionProyecto = res.getResolucion();
        }
    }//GEN-LAST:event_jBtnModificarResolucionProyectoActionPerformed

    private void jBtnModificarResolicionIntegrantesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnModificarResolicionIntegrantesActionPerformed
        if (resolucionIntegrantes != null) {
            diagResolucionAlta res = new diagResolucionAlta(null, true, "Modificacion", resolucionIntegrantes);
            res.setLocationRelativeTo(this);
            res.setVisible(true);
            resolucionIntegrantes = res.getResolucion();
        }
    }//GEN-LAST:event_jBtnModificarResolicionIntegrantesActionPerformed

    private void jBtnVerResolucionProyectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnVerResolucionProyectoActionPerformed
        if (resolucionProyecto != null) {
            abrirDocumento(resolucionProyecto);
        }
    }//GEN-LAST:event_jBtnVerResolucionProyectoActionPerformed

    private void jBtnVerResolucionIntegrantesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnVerResolucionIntegrantesActionPerformed
        if (resolucionIntegrantes != null) {
            abrirDocumento(resolucionIntegrantes);
        }
    }//GEN-LAST:event_jBtnVerResolucionIntegrantesActionPerformed

    private void jbuttonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuttonCancelarActionPerformed
        winsip = new Winsip();

        this.dispose();
    }//GEN-LAST:event_jbuttonCancelarActionPerformed

    private void btAgregarEvaluacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAgregarEvaluacionActionPerformed
        agregarNuevaEvaluacionWinsip();        // TODO add your handling code here:
    }//GEN-LAST:event_btAgregarEvaluacionActionPerformed

    private void btnEliminarEvaluacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarEvaluacionActionPerformed
        eliminarEvaluacion();
    }//GEN-LAST:event_btnEliminarEvaluacionActionPerformed

    private void btnQuitarResProyetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarResProyetoActionPerformed
        quitarResolucionProyectos();
    }//GEN-LAST:event_btnQuitarResProyetoActionPerformed

    private void btnQuitarResIntegranteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarResIntegranteActionPerformed
        quitarResolucionIntegrante();
    }//GEN-LAST:event_btnQuitarResIntegranteActionPerformed

    private void jtfLugarEvaluacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfLugarEvaluacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfLugarEvaluacionActionPerformed
    private void agregarNuevaEvaluacionWinsip() {
        diagWinsipEvaluacion evaluacion = new diagWinsipEvaluacion(null, true, "Alta", usuario, winsip);
        evaluacion.setLocation(Comunes.centrarDialog(evaluacion));
        evaluacion.setVisible(true);
        if (evaluacion.getEvaluacion() != null) {
            evaluacionesWinsip.add(evaluacion.getEvaluacion());
            cargarTablaEvaluaciones(evaluacionesWinsip);
        }

    }

    private void eliminarEvaluacion() {
        if (jTableEvaluacionesWinsip.getSelectedRow() != -1) {
            int i = JOptionPane.showConfirmDialog(null, "Se eliminara la evaluaci坦n correspondiente. "
                    + "Esta usted Seguro?", "Confirmar", JOptionPane.YES_NO_CANCEL_OPTION);
            if (i == JOptionPane.YES_OPTION) {
                quitarEvaluacionWinsip();
                JOptionPane.showMessageDialog(null, "Evaluacion Eliminada!");
                cargarTablaEvaluaciones(evaluacionesWinsip);

            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fila!");
        }
    }

    private void cargarTablaEncabezadosEvaluaciones(DefaultTableModel modeloTabla) {
        modeloTabla.addColumn("Codigo");
        modeloTabla.addColumn("Fecha");
        modeloTabla.addColumn("Evaluador");
        modeloTabla.addColumn("Nota");
        modeloTabla.addColumn("Sugerencias");

        jTableEvaluacionesWinsip.setModel(modeloTabla);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(diagWinsipAlta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(diagWinsipAlta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(diagWinsipAlta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(diagWinsipAlta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                diagWinsipAlta dialog = new diagWinsipAlta(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAgregarEvaluacion;
    private javax.swing.JButton btnEliminarEvaluacion;
    private javax.swing.JButton btnQuitarResIntegrante;
    private javax.swing.JButton btnQuitarResProyeto;
    private javax.swing.JComboBox cbTipoInforme;
    private javax.swing.JComboBox cbTipoResultadoEvaluacion;
    private javax.swing.JButton jBtnAgregarEvaluacionIntegrante;
    private javax.swing.JButton jBtnAgregarResolucionIntegrantes;
    private javax.swing.JButton jBtnAgregarResolucionProyecto;
    private javax.swing.JButton jBtnModificarResolicionIntegrantes;
    private javax.swing.JButton jBtnModificarResolucionProyecto;
    private javax.swing.JButton jBtnQuitarEvaluacionIntegrante;
    private javax.swing.JButton jBtnVerResolucionIntegrantes;
    private javax.swing.JButton jBtnVerResolucionProyecto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTableEvaluacionesIntegrantes;
    private javax.swing.JTable jTableEvaluacionesWinsip;
    private javax.swing.JTextField jTfResolucionIntegrantes;
    private javax.swing.JTextField jTfResolucionProyecto;
    private javax.swing.JButton jbuttonCancelar;
    private javax.swing.JButton jbuttonGuardar;
    private javax.swing.JSpinner jspA単oInforme;
    private org.jdesktop.swingx.JXDatePicker jtfFechaEvaluacion;
    private javax.swing.JTextField jtfLugarEvaluacion;
    private javax.swing.JLabel lbDirector;
    private javax.swing.JTextArea taProyecto;
    // End of variables declaration//GEN-END:variables

    private void inicializarComponentes() {

        cargarComboBox();
        try {
            lbDirector.setText(new ParticipacionFacade().getDirector(winsip.getProyecto()).getInvestigador().toString());
        } catch (Exception e) {
            lbDirector.setText(" ");
        }
        taProyecto.setEditable(false);
        Comunes.autoAjusteTextArea(taProyecto);
        if (proyecto != null) {
            taProyecto.setText(proyecto.toString());
        }
        jTfResolucionIntegrantes.setEditable(false);
        jTfResolucionProyecto.setEditable(false);
        jBtnModificarResolicionIntegrantes.setVisible(false);
        jBtnModificarResolucionProyecto.setVisible(false);
        switch (tipoOperacion) {
            case "Alta":
                cargarListaEvaluacionesAlta();//integrantes
                LlenarTablaEvaluacionesModificacion();//integrantes
                cargarEncabezadosTablaEvaluaciones(modeloTablaEvaluaciones);//Tabla evaluaciones winsip
                configurarTabla(jTableEvaluacionesWinsip);//Tabla evaluaciones winsip
                //btnEliminarEvaluacion.setVisible(false);
                break;
            case "Modificaci坦n":
                cargarListaEvaluaciones();//integrantes
                LlenarTablaEvaluacionesModificacion();//integrantes
                cargarTablaEncabezadosEvaluaciones(modeloTablaEvaluaciones);
                if (winsip.getEvaluaciones() != null) {
                    evaluacionesWinsip = new ArrayList<>();
                    evaluacionesWinsip = winsip.getEvaluaciones();
                    cargarTablaEvaluaciones(evaluacionesWinsip);
                } else {
                    cargarEncabezadosTablaEvaluaciones(modeloTablaEvaluaciones);
                    configurarTabla(jTableEvaluacionesWinsip);

                }

                try {
                    jspA単oInforme.setValue(winsip.getA単o());
                } catch (Exception e) {
                    System.out.println("Error al cargar a単o del informe: " + e);

                }
                try {
                    if (winsip.getTipoInforme() != null) {
                        cbTipoInforme.setSelectedItem(winsip.getTipoInforme());

                    }
                } catch (Exception e) {
                    System.out.println("Error al cargar tipo de informe: " + e);

                }
                try {
                    if (winsip.getEvaluacionWinsip() != null) {
                        cbTipoResultadoEvaluacion.setSelectedItem(winsip.getEvaluacionWinsip());
                    }
                } catch (Exception e) {
                    System.out.println("Error al cargar evaluacion winsip: " + e);

                }
                try {
                    if (winsip.getLugarEvaluacion() != null) {
                        jtfLugarEvaluacion.setText(winsip.getLugarEvaluacion());
                    }
                } catch (Exception e) {
                    System.out.println("Error al cargar lugar evaluacion: " + e);

                }
                try {
                    if (winsip.getFechaEvaluacion() != null) {
                        jtfFechaEvaluacion.setDate(winsip.getFechaEvaluacion());
                    }
                } catch (Exception e) {
                    System.out.println("Error al cargar fecha evaluacion: " + e);

                }
                try {
                    if (winsip.getEvaluacionProyecto() != null) {
                        resolucionProyecto = winsip.getEvaluacionProyecto();
                        jTfResolucionProyecto.setText(resolucionProyecto.toString());
                    }
                } catch (Exception e) {
                    System.out.println("Error al cargar resolucion proyecto: " + e);

                }
                try {
                    if (winsip.getEvaluacionIntegrantes() != null) {
                        resolucionIntegrantes = winsip.getEvaluacionIntegrantes();
                        jTfResolucionIntegrantes.setText(resolucionIntegrantes.toString());
                    }
                } catch (Exception e) {
                    System.out.println("Error al cargar resolucion integrantes: " + e);

                }

                break;

        }
    }

    private void aceptar() {
        if (validar()) {
            switch (tipoOperacion) {
                case "Alta":
                    winsip = new Winsip();
                    cargarDatos();
                    WinsipFacade.getInstance().alta(winsip);
                    break;
                case "Modificaci坦n":
                    cargarDatos();
                    WinsipFacade.getInstance().modificar(winsip);
                    break;
            }
        }

        this.dispose();
    }

    private boolean validar() {
        if (jtfFechaEvaluacion.getDate() != null) {
            return true;
        } else {
            return false;
        }
    }

    private void cargarDatos() {

        winsip.setA単o((int) jspA単oInforme.getValue());
        winsip.setEvaluacionWinsip((TipoResultadoEvaluacion) cbTipoResultadoEvaluacion.getSelectedItem());
        winsip.setTipoInforme((TipoInforme) cbTipoInforme.getSelectedItem());

        if (jtfLugarEvaluacion.getText() != null) {
            winsip.setLugarEvaluacion(jtfLugarEvaluacion.getText());

        } else {
        }
        if (jtfFechaEvaluacion.getDate() != null) {
            winsip.setFechaEvaluacion(jtfFechaEvaluacion.getDate());

        } else {
        }
        if (evaluacionesIntegrantes.size() > 0) {//esto en realidad es de los integrantes
            winsip.setEvaluacionesIntegrantes(borrarVacias(evaluacionesIntegrantes));
        } else {
            winsip.setEvaluacionesIntegrantes(null);
        }
        if (evaluacionesWinsip.size() > 0) {//esto en realidad es de los integrantes
            winsip.setEvaluaciones(evaluacionesWinsip);
        } else {
            winsip.setEvaluaciones(null);
        }
        if (resolucionProyecto != null) {
            winsip.setEvaluacionProyecto(resolucionProyecto);
        } else {
            winsip.setEvaluacionProyecto(null);
        }
        if (resolucionIntegrantes != null) {
            winsip.setEvaluacionIntegrantes(resolucionIntegrantes);
        } else {
            winsip.setEvaluacionIntegrantes(null);
        }
        try {
            winsip.setProyecto(proyecto);
        } catch (Exception e) {

        }

        // evaluaciones de los integrantes falta
    }

//    aca van las evaluaciones del proyecto existentes. hay que sacarlo aparte con consultas
//    private void cargarEvaluacionesWinsip() {
//        Object[] fila = new Object[5];
//        cargarTablaEncabezadosEvaluacionesWinsip();
//        if (!evaluacionesWinsip.isEmpty()) {
//
//            for (int i = 0; i < evaluacionesWinsip.size(); i++) {
//
//                fila[0] = evaluacionesWinsip.get(i).getInvestigador();
//                fila[1] = evaluacionesWinsip.get(i).getInforme();
//                fila[2] = evaluacionesWinsip.get(i).getEvaluacion();
//                fila[3] = evaluacionesWinsip.get(i).getFecha();
//                modeloEvaluacionesWinsip.addRow(fila);
//            }
//        }
//    }
//    private void cargarEvaluacionesIntegrantes() {
//        Object[] fila = new Object[6];
//        cargarTablaEncabezadosEvaluacionesIntegrantes();
//        if (!evaluacionesIntegrantes.isEmpty()) {
//
//            for (int i = 0; i < evaluacionesIntegrantes.size(); i++) {
//
////aca van datos de Resolucion...(falta)
//                fila[0] = evaluacionesIntegrantes.get(i).getInvestigador();
//                fila[1] = evaluacionesIntegrantes.get(i).getInforme();
//                fila[2] = evaluacionesIntegrantes.get(i).getEvaluacion();
//                fila[3] = evaluacionesIntegrantes.get(i).getFecha();
//                modeloEvaluacionesIntegrantes.addRow(fila);
//            }
//        }
//    }    
//
//    private void cargarTablaEncabezadosEvaluacionesWinsip() {
//        modeloEvaluacionesWinsip = new DefaultTableModel();
//        modeloEvaluacionesWinsip.addColumn("Nombre y Apellido");
//
//        modeloEvaluacionesWinsip.addColumn("Informe");
//        modeloEvaluacionesWinsip.addColumn("Evaluacion");
//        modeloEvaluacionesWinsip.addColumn("Fecha");
//        jTableEvaluacionesWinsip.setModel(modeloEvaluacionesWinsip);
//
//    }
//    private void cargarTablaEncabezadosEvaluacionesIntegrantes() {
//        modeloEvaluacionesIntegrantes = new DefaultTableModel();
//        modeloEvaluacionesIntegrantes.addColumn("Nombre y Apellido");
//
//        modeloEvaluacionesIntegrantes.addColumn("Rol");
//        modeloEvaluacionesIntegrantes.addColumn("CUIL");
//        modeloEvaluacionesIntegrantes.addColumn("Informe");
//        modeloEvaluacionesIntegrantes.addColumn("Evaluacion");
//        modeloEvaluacionesIntegrantes.addColumn("Fecha");
//        jTableEvaluacionesIntegrantes.setModel(modeloEvaluacionesIntegrantes);
//
//    }
    private void modeloTabla() {
        modeloEvaluacionIntegrantes = new ModeloTablaNoEditable();
        modeloEvaluacionIntegrantes.addColumn("Integrante");
        modeloEvaluacionIntegrantes.addColumn("Rol");
        modeloEvaluacionIntegrantes.addColumn("Cuil");
        modeloEvaluacionIntegrantes.addColumn("Evaluaci坦n del Winsip");
        modeloEvaluacionIntegrantes.addColumn("Evaluaci坦n del Director");
        modeloEvaluacionIntegrantes.addColumn("Fecha Evaluaci坦n del Director");

    }

//    private void LlenarTablaEvaluacionesAlta() {
//        try{
//            List<Participacion> integrantes =ProyectoFacade.getInstance().getTodosIntegrantesSinDirector(proyecto);
//            Object[] fila=new Object[6];
//            modeloTabla();
//            for(Participacion i: integrantes){
//                if(i!=null){
//                fila[0]=i.getInvestigador().toString();
//                fila[1]=i.getRol();
//                fila[2]=i.getInvestigador().getPersona().getCuil();
//                fila[3]="";
//                fila[4]="";
//                fila[5]="";
//                modeloEvaluacionIntegrantes.addRow(fila);
//                }
//                
//            }
//            jTableEvaluacionesIntegrantes.setModel(modeloEvaluacionIntegrantes); 
//        }catch(Exception ex){
//            System.out.println(ex);
//        }
//    }
    private String devolverRol(Investigador investigador) {
        List<Participacion> integrantes = ProyectoFacade.getInstance().getTodosIntegrantesSinDirector(proyecto);
        for (Participacion p : integrantes) {
            if (p.getInvestigador().equals(investigador)) {
                return p.getRol().toString();
            }
        }
        return "";
    }

    private void cargarListaEvaluaciones() {
        evaluacionesIntegrantes = winsip.getEvaluacionesIntegrantes();
        List<Participacion> integrantes = ProyectoFacade.getInstance().getTodosIntegrantesSinDirector(proyecto);
        List<Investigador> integrantesNuevos = new ArrayList();
        if (!evaluacionesIntegrantes.isEmpty()) {
            List<Investigador> integrantesViejos = new ArrayList();
            for (EvaluacionWinsipIntegrantes eva : evaluacionesIntegrantes) {
                integrantesViejos.add(eva.getInvestigador());
            }
            for (Participacion i : integrantes) {
                if (!integrantesViejos.contains(i.getInvestigador())) {
                    integrantesNuevos.add(i.getInvestigador());
                }
            }
            HashSet<Investigador> hashSet = new HashSet<>(integrantesNuevos);
            integrantesNuevos.clear();
            integrantesNuevos.addAll(hashSet);
            for (Investigador i : integrantesNuevos) {
                EvaluacionWinsipIntegrantes ew = new EvaluacionWinsipIntegrantes();
                ew.setInvestigador(i);
                evaluacionesIntegrantes.add(ew);
            }
        } else {
            for (Participacion i : integrantes) {
                EvaluacionWinsipIntegrantes ew = new EvaluacionWinsipIntegrantes();
                ew.setInvestigador(i.getInvestigador());
                evaluacionesIntegrantes.add(ew);
            }
        }
    }

    private void cargarListaEvaluacionesAlta() {
        List<Participacion> integrantes = ProyectoFacade.getInstance().getTodosIntegrantesSinDirector(proyecto);
        System.out.println("integrantes: " + integrantes);
        for (Participacion i : integrantes) {
            EvaluacionWinsipIntegrantes ew = new EvaluacionWinsipIntegrantes();
            if (i != null) {
                ew.setInvestigador(i.getInvestigador());
            }
            evaluacionesIntegrantes.add(ew);
        }
    }

    private void LlenarTablaEvaluacionesModificacion() {
//        try {

        Object[] fila = new Object[6];
        modeloTabla();
        for (EvaluacionWinsipIntegrantes e : evaluacionesIntegrantes) {
            if (e != null && e.getInvestigador() != null) {
                fila[0] = e.getInvestigador().toString();
                try {
                    fila[1] = devolverRol(e.getInvestigador());
                } catch (Exception ex) {

                }

                fila[2] = e.getInvestigador().getPersona().getCuil();
                try {
                    fila[3] = e.getInforme();
                } catch (Exception ex) {

                }
                try {
                    fila[4] = e.getEvaluacion();
                } catch (Exception ex) {

                }

                if (e.getFecha() != null) {
                    fila[5] = formato.format(e.getFecha());
                } else {
                    fila[5] = e.getFecha();
                }
                modeloEvaluacionIntegrantes.addRow(fila);
            }

        }
        jTableEvaluacionesIntegrantes.setModel(modeloEvaluacionIntegrantes);
//        } catch (Exception ex) {
//            System.out.println("Error llenando tabla evaluaciones modificacion: " + ex);
//        }
    }

    private void agregarEvaluacionIntegrante() {
        int indice = 0;
        if (jTableEvaluacionesIntegrantes.getSelectedRow() != -1) {
            indice = jTableEvaluacionesIntegrantes.getSelectedRow();
            diagEvaluacionInvestigador dialog = new diagEvaluacionInvestigador(null, true, evaluacionesIntegrantes, indice);
            dialog.setLocationRelativeTo(this);
            dialog.setVisible(true);
            evaluacionesIntegrantes = dialog.getEvaluacionesIntegrantes();
            LlenarTablaEvaluacionesModificacion();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Debe Elegir una fila", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void quitarEvaluacionIntegrante() {
        if (jTableEvaluacionesIntegrantes.getSelectedRow() != -1) {
            evaluacionesIntegrantes.get(jTableEvaluacionesIntegrantes.getSelectedRow()).setEvaluacion(null);
            evaluacionesIntegrantes.get(jTableEvaluacionesIntegrantes.getSelectedRow()).setInforme(null);
            evaluacionesIntegrantes.get(jTableEvaluacionesIntegrantes.getSelectedRow()).setFecha(null);
            LlenarTablaEvaluacionesModificacion();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Debe Elegir una fila", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void abrirDocumento(Resolucion res) {

        try {

            Documento documento = res.getDocumento();
            byte[] archivoInterno = documento.getContenidoArchivo();
            File archivo = File.createTempFile("tmp", documento.getNombreArchivo());
            archivo.deleteOnExit();
            try (FileOutputStream fos = new FileOutputStream(archivo)) {
                fos.write(archivoInterno);
            }
            // Open the file
            if (Desktop.isDesktopSupported() == true) {
                Desktop desktop = Desktop.getDesktop();
                try {
                    if (archivo.exists() == true) {
                        desktop.open(archivo);
                    } else {
                        JOptionPane.showMessageDialog(null, "No se encontrar el archivo: " + archivo.getAbsolutePath(), "Aviso", JOptionPane.WARNING_MESSAGE);
                    }
                } catch (IOException e) {
                }
            } else {
                JOptionPane.showMessageDialog(null, "No se puede ejecutar el comando de apertura en este sistema operativo", "Aviso", JOptionPane.WARNING_MESSAGE);
            }
        } catch (IOException ex) {
            System.out.println("Error abriendo documento: " + ex);
        }
    }

    private void quitarResolucionProyectos() {
        resolucionProyecto = null;
        jTfResolucionProyecto.setText("");
    }

    private void quitarResolucionIntegrante() {
        resolucionIntegrantes = null;
        jTfResolucionIntegrantes.setText("");
    }

    private void quitarEvaluacionWinsip() {
// Esto es solo para quitarlo de la lista que carga la tabla
        EvaluacionWinsip evaluacionWinsipEliminar;
        evaluacionWinsipEliminar = (EvaluacionWinsip) jTableEvaluacionesWinsip.getValueAt(jTableEvaluacionesWinsip.getSelectedRow(), 0);
        evaluacionesWinsip.remove(evaluacionWinsipEliminar);
    }

    private void cargarTablaEvaluaciones(List<EvaluacionWinsip> evaluaciones) {
        modeloTablaEvaluaciones = new ModeloTablaNoEditable();
        cargarEncabezadosTablaEvaluaciones(modeloTablaEvaluaciones);
        configurarTabla(jTableEvaluacionesWinsip);
        try {
            cargarEvaluaciones(evaluaciones);
            // ocultarPrimeraColumna(jTableEvaluacionesWinsip);//no andubo
        } catch (Exception ex) {
            System.out.println("Error al cargar tabla evaluaciones: " + ex);
        }
    }

    private void cargarEncabezadosTablaEvaluaciones(ModeloTablaNoEditable modeloTablaEvaluaciones) {
        modeloTablaEvaluaciones.addColumn("Codigo");
        modeloTablaEvaluaciones.addColumn("Fecha");
        modeloTablaEvaluaciones.addColumn("Evaluador");
        modeloTablaEvaluaciones.addColumn("Nota");
        modeloTablaEvaluaciones.addColumn("Sugerencias");
        jTableEvaluacionesWinsip.setModel(modeloTablaEvaluaciones);
    }

    private void ocultarPrimeraColumna(JTable tabla) {
        int[] columnas = {1};
        Comunes.ocultarColumnasJTable(tabla, columnas);
    }

    private void configurarTabla(JTable tbl) {
        JViewport scroll = (JViewport) tbl.getParent();
        int ancho = scroll.getWidth();
        int anchoColumna = 0;
        TableColumnModel modeloColumna = tbl.getColumnModel();
        TableColumn columnaTabla;
        for (int i = 0; i < tbl.getColumnCount(); i++) {
            columnaTabla = modeloColumna.getColumn(i);
            switch (i) {
                case 0:
                    anchoColumna = (1 * ancho) / 100;
                    break;
                case 1:
                    anchoColumna = (20 * ancho) / 100;
                    break;
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                    anchoColumna = (5 * ancho) / 100;
                    break;
            }
            columnaTabla.setPreferredWidth(anchoColumna);
            tbl.setColumnModel(modeloColumna);
        }
        tbl.getTableHeader().setFont(new java.awt.Font("Dialog",
                java.awt.Font.PLAIN, 10));
        tbl.getTableHeader().setBackground(java.awt.Color.WHITE);
        tbl.getTableHeader().setForeground(Color.BLACK);
        //Si le queremos cambiar el tama単o a la tablita
        tbl.setFont(new java.awt.Font("Dialog",
                java.awt.Font.PLAIN, 10));
    }

    private void cargarEvaluaciones(List<EvaluacionWinsip> lista) {
        try {
            modeloTablaEvaluaciones = new ModeloTablaNoEditable();
            cargarEncabezadosTablaEvaluaciones(modeloTablaEvaluaciones);
            for (EvaluacionWinsip evaluacionWinsip : lista) {
                cargarEvaluacionWinsip(evaluacionWinsip);

            }

            jTableEvaluacionesWinsip.setModel(modeloTablaEvaluaciones);
            Comunes.setOcultarColumnasJTable(jTableEvaluacionesWinsip, 0);
        } catch (Exception ex) {
            Logger.getLogger(diagWinsip.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void cargarEvaluacionWinsip(EvaluacionWinsip evaluacionWinsip) {
        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        Object[] fila = new Object[6];
        fila[0] = evaluacionWinsip;
        try {
            fila[1] = format.format(evaluacionWinsip.getFecha());
        } catch (Exception ex) {

        }
        fila[2] = evaluacionWinsip.getEvaluador();
        fila[3] = evaluacionWinsip.getNota();
        fila[4] = evaluacionWinsip.getSugerencias();

        modeloTablaEvaluaciones.addRow(fila);
    }

    private void cargarComboBox() {
        cbTipoResultadoEvaluacion.setModel(new javax.swing.DefaultComboBoxModel(TipoResultadoEvaluacion.values()));
        cbTipoInforme.setModel(new javax.swing.DefaultComboBoxModel(TipoInforme.values()));

    }

    private void cargarSpinnerA単o() {
        SimpleDateFormat formatoA単o = new SimpleDateFormat("yyyy");
        String fecha = formatoA単o.format(Comunes.obtenerFechaActualDesdeDB());
        Integer a単o = Integer.valueOf(fecha);
        SpinnerNumberModel model = new SpinnerNumberModel(
                new Integer(a単o), // Dato visualizado al inicio en el spinner 
                new Integer(1990), // L鱈mite inferior 
                new Integer(a単o), // L鱈mite superior 
                new Integer(1) // incremento-decremento 
        );
        jspA単oInforme.setModel(model);
    }

    private List<EvaluacionWinsipIntegrantes> borrarVacias(List<EvaluacionWinsipIntegrantes> evaluacionesIntegrantes) {
        List<EvaluacionWinsipIntegrantes> lista = new ArrayList<>();
        for (EvaluacionWinsipIntegrantes eva : evaluacionesIntegrantes) {
            if (eva.getEvaluacion() != null && eva.getInforme() != null) {
                lista.add(eva);
            }
        }
        return lista;
    }
}
