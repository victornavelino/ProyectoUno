/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.EntradasSalidas;

import controladores.DocumentoJpaController;
import entidades.Documento;
import entidades.EntradasSalidas.Correspondencia;
import entidades.EntradasSalidas.Expediente;
import facade.ConexionFacade;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.util.Date;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author vouilloz
 */
public class DialogRegistroCorrespondencia extends javax.swing.JDialog {

    public Correspondencia corresp;

    public Correspondencia getCorresp() {
        return corresp;
    }

    public void setCorresp(Correspondencia corresp) {
        this.corresp = corresp;
    }

    /**
     * Creates new form DialogRegistroDictamen
     */
    public DialogRegistroCorrespondencia(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        tfRemitente.grabFocus();
        tfRutaCargaCorrespondencia.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tfDestinatario = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnCancelNota = new javax.swing.JButton();
        btnGuardarNota = new javax.swing.JButton();
        tfRemitente = new javax.swing.JTextField();
        pnArchivo = new javax.swing.JPanel();
        btnCargarCorrespondencia = new javax.swing.JButton();
        tfRutaCargaCorrespondencia = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(DialogRegistroCorrespondencia.class, "DialogRegistroCorrespondencia.title")); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DialogRegistroCorrespondencia.class, "DialogRegistroCorrespondencia.jPanel1.border.title"))); // NOI18N

        tfDestinatario.setText(org.openide.util.NbBundle.getMessage(DialogRegistroCorrespondencia.class, "DialogRegistroCorrespondencia.tfDestinatario.text")); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(DialogRegistroCorrespondencia.class, "DialogRegistroCorrespondencia.jLabel1.text")); // NOI18N

        jLabel5.setText(org.openide.util.NbBundle.getMessage(DialogRegistroCorrespondencia.class, "DialogRegistroCorrespondencia.jLabel5.text")); // NOI18N

        btnCancelNota.setText(org.openide.util.NbBundle.getMessage(DialogRegistroCorrespondencia.class, "DialogRegistroCorrespondencia.btnCancelNota.text")); // NOI18N
        btnCancelNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelNotaActionPerformed(evt);
            }
        });

        btnGuardarNota.setText(org.openide.util.NbBundle.getMessage(DialogRegistroCorrespondencia.class, "DialogRegistroCorrespondencia.btnGuardarNota.text")); // NOI18N
        btnGuardarNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarNotaActionPerformed(evt);
            }
        });

        tfRemitente.setText(org.openide.util.NbBundle.getMessage(DialogRegistroCorrespondencia.class, "DialogRegistroCorrespondencia.tfRemitente.text")); // NOI18N

        btnCargarCorrespondencia.setText(org.openide.util.NbBundle.getMessage(DialogRegistroCorrespondencia.class, "DialogRegistroCorrespondencia.btnCargarCorrespondencia.text")); // NOI18N
        btnCargarCorrespondencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarCorrespondenciaActionPerformed(evt);
            }
        });

        tfRutaCargaCorrespondencia.setText(org.openide.util.NbBundle.getMessage(DialogRegistroCorrespondencia.class, "DialogRegistroCorrespondencia.tfRutaCargaCorrespondencia.text")); // NOI18N

        javax.swing.GroupLayout pnArchivoLayout = new javax.swing.GroupLayout(pnArchivo);
        pnArchivo.setLayout(pnArchivoLayout);
        pnArchivoLayout.setHorizontalGroup(
            pnArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnArchivoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCargarCorrespondencia, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfRutaCargaCorrespondencia, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnArchivoLayout.setVerticalGroup(
            pnArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnArchivoLayout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(pnArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCargarCorrespondencia, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfRutaCargaCorrespondencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 149, Short.MAX_VALUE)
                .addComponent(btnGuardarNota, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(btnCancelNota, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(175, 175, 175))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5)
                            .addComponent(tfRemitente, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE)
                            .addComponent(jLabel1)
                            .addComponent(tfDestinatario)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(8, 8, 8)
                .addComponent(tfRemitente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfDestinatario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(pnArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardarNota, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelNota, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelNotaActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelNotaActionPerformed

    private void btnGuardarNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarNotaActionPerformed
        altaCorrespondencia();
        //this.dispose();
    }//GEN-LAST:event_btnGuardarNotaActionPerformed

    private void btnCargarCorrespondenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarCorrespondenciaActionPerformed
        seleccionarCorrespondiencia();
    }//GEN-LAST:event_btnCargarCorrespondenciaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogRegistroCorrespondencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogRegistroCorrespondencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogRegistroCorrespondencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogRegistroCorrespondencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogRegistroCorrespondencia dialog = new DialogRegistroCorrespondencia(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelNota;
    private javax.swing.JButton btnCargarCorrespondencia;
    private javax.swing.JButton btnGuardarNota;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel pnArchivo;
    private javax.swing.JTextField tfDestinatario;
    private javax.swing.JTextField tfRemitente;
    private javax.swing.JTextField tfRutaCargaCorrespondencia;
    // End of variables declaration//GEN-END:variables

    private void altaCorrespondencia() {
        if ((tfRemitente.getText()).length() == 0) {
            JOptionPane.showMessageDialog(null, "Debe ingresar el Remitente", "Cuadro de texto vacio", JOptionPane.WARNING_MESSAGE);
            tfRemitente.grabFocus();
        } else if ((tfDestinatario.getText()).length() == 0) {
            JOptionPane.showMessageDialog(null, "Debe ingresar el Destinatario", "Cuadro de texto vacio", JOptionPane.WARNING_MESSAGE);
            tfDestinatario.grabFocus();

        } else {
            EntityManagerFactory emf = null;
            EntityManager em = null;
            Correspondencia correspondencia = new Correspondencia();
            if (!tfRutaCargaCorrespondencia.getText().isEmpty()){                
                File archivoEntrada = new File(tfRutaCargaCorrespondencia.getText());
                if (longitudArchivoValida(archivoEntrada)) {
                    InputStream is = null;
                    try {

                        Documento d = new Documento();

                       // if (!tfRutaCargaCorrespondencia.getText().isEmpty()) {
                            d.setNombreArchivo(archivoEntrada.getName());
                            is = new FileInputStream(archivoEntrada);
                            byte[] buffer = new byte[(int) archivoEntrada.length()]; //creamos el buffer
                            is.read(buffer); //leemos el archivo al buffer
                            d.setContenidoArchivo(buffer);
                            new DocumentoJpaController(Persistence.createEntityManagerFactory("ProyectoUnoPU", ConexionFacade.PROPIEDADES)).create(d);
                    //    }
                    /*    emf = Persistence.createEntityManagerFactory("ProyectoUnoPU", ConexionFacade.PROPIEDADES);
                        em = emf.createEntityManager();
                        em.getTransaction().begin();
                        
                        Correspondencia correspondencia = new Correspondencia();*/

                        /*correspondencia.setRemitente(tfRemitente.getText());
                        correspondencia.setDestinantario(tfDestinatario.getText());
                        correspondencia.setFechaRegistro(new Date());*/
                        if (!d.getNombreArchivo().isEmpty()) {
                            correspondencia.setDocumento(d);
                        }

                        //Validar si existe Dictamen
                    /*    em.persist(correspondencia);
                        em.getTransaction().commit();//finaliza
                        JOptionPane.showMessageDialog(null, "Correspondencia Registrada", "Registro de Correspondencia", JOptionPane.INFORMATION_MESSAGE);
                        corresp = (Correspondencia) correspondencia;
                        this.dispose();*/

                    } catch (Exception e) {
                        //JOptionPane.showMessageDialog(null, "Error Tratando de registrar el Dictamen", "Registro de Dictamen", JOptionPane.INFORMATION_MESSAGE);
                        JOptionPane.showMessageDialog(null, e.getMessage(), "Error al guardar el archivo de entrada", JOptionPane.INFORMATION_MESSAGE);
                    }/* finally {
                        em.close();
                        emf.close();

                    }*/
                } else {
                    JOptionPane.showMessageDialog(null, "Archivo demasiado Grande, debe ser menor a 5 MegaBytes");
                }                
            }// if (!tfRutaCargaCorrespondencia.getText().isEmpty()) 
            
            try {
                emf = Persistence.createEntityManagerFactory("ProyectoUnoPU", ConexionFacade.PROPIEDADES);
                em = emf.createEntityManager();
                em.getTransaction().begin();

                correspondencia.setRemitente(tfRemitente.getText());
                correspondencia.setDestinantario(tfDestinatario.getText());
                correspondencia.setFechaRegistro(new Date());

                em.persist(correspondencia);
                em.getTransaction().commit();//finaliza*/
                JOptionPane.showMessageDialog(null, "Correspondencia Registrada", "Registro de Correspondencia", JOptionPane.INFORMATION_MESSAGE);
                corresp = (Correspondencia) correspondencia;
                this.dispose();
                this.dispose();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage(), "Error Registro de Correspondencia", JOptionPane.INFORMATION_MESSAGE);
            } finally {
                em.close();
                emf.close();

            }//finally try        
            
        }//else
    }
    
    private boolean longitudArchivoValida(File archivoEntrada) {
        // Get length of file in bytes
        long fileSizeInBytes = archivoEntrada.length();
        // Convert the bytes to Kilobytes (1 KB = 1024 Bytes)
        long fileSizeInKB = fileSizeInBytes / 1024;
        // Convert the KB to MegaBytes (1 MB = 1024 KBytes)
        long fileSizeInMB = fileSizeInKB / 1024;
        return fileSizeInMB < 5;
    }    
    
    private void seleccionarCorrespondiencia() {
        JFileChooser fileChooser = new JFileChooser();
        int seleccion = fileChooser.showOpenDialog(null);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File fichero = fileChooser.getSelectedFile();
            tfRutaCargaCorrespondencia.setText(fichero.getAbsolutePath());
        }
    }//private void seleccionarCorrespondiencia()

}
