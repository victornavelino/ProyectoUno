/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.EntradasSalidas;


import controladores.DocumentoJpaController;
import entidades.Documento;
import entidades.EntradasSalidas.Expediente;
import facade.ConexionFacade;
import includes.Comunes;
import javax.swing.JOptionPane;
import facade.EntradasSalidas.ExpedienteFacade;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JFileChooser;



/**
 *
 * @author vouilloz
 */
public class diagExpediente extends javax.swing.JDialog {

    Expediente expediente, expediente2;
    private boolean bPermite = true;
    private boolean bCargarArchivo = false;

    public Expediente getExpediente() {
        return expediente;
    }

    public void setExpediente(Expediente expediente) {
        this.expediente = expediente;
    }
    
     /**
     * Creates new form DialogExpediente
     */
    public diagExpediente(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        inicializar();
    }

        public diagExpediente(java.awt.Frame parent, boolean modal, boolean bPermite, boolean bCargarArchivo, Expediente expediente) {
        super(parent, modal);
        initComponents();
        this.bPermite = bPermite;
        this.bCargarArchivo = bCargarArchivo;
        this.expediente2 = expediente;
        if(bCargarArchivo)
        {    
           inicializarParaArchivo();
        }
        else{ 
            inicializar();
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tfNumero = new javax.swing.JTextField();
        tfLetra = new javax.swing.JTextField();
        tfAnio = new javax.swing.JTextField();
        tfIniciador = new javax.swing.JTextField();
        tfExtracto = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btnNuevoExpediente = new javax.swing.JButton();
        btnModificarExpediente = new javax.swing.JButton();
        btnRegistrarExpediente = new javax.swing.JButton();
        btnCancelarExpediente = new javax.swing.JButton();
        btnSalirExpedientes = new javax.swing.JButton();
        btnBuscarExpediente = new javax.swing.JButton();
        pnArchivo = new javax.swing.JPanel();
        btnCargarExp = new javax.swing.JButton();
        tfRutaCargaExp = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagExpediente.class, "diagExpediente.jPanel1.border.title"))); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(diagExpediente.class, "diagExpediente.jLabel1.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(diagExpediente.class, "diagExpediente.jLabel2.text")); // NOI18N

        jLabel3.setText(org.openide.util.NbBundle.getMessage(diagExpediente.class, "diagExpediente.jLabel3.text")); // NOI18N

        jLabel4.setText(org.openide.util.NbBundle.getMessage(diagExpediente.class, "diagExpediente.jLabel4.text")); // NOI18N

        jLabel5.setText(org.openide.util.NbBundle.getMessage(diagExpediente.class, "diagExpediente.jLabel5.text")); // NOI18N

        tfNumero.setText(org.openide.util.NbBundle.getMessage(diagExpediente.class, "diagExpediente.tfNumero.text")); // NOI18N
        tfNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfNumeroKeyTyped(evt);
            }
        });

        tfLetra.setText(org.openide.util.NbBundle.getMessage(diagExpediente.class, "diagExpediente.tfLetra.text")); // NOI18N
        tfLetra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfLetraFocusLost(evt);
            }
        });
        tfLetra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfLetraKeyTyped(evt);
            }
        });

        tfAnio.setText(org.openide.util.NbBundle.getMessage(diagExpediente.class, "diagExpediente.tfAnio.text")); // NOI18N
        tfAnio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfAnioKeyTyped(evt);
            }
        });

        tfIniciador.setText(org.openide.util.NbBundle.getMessage(diagExpediente.class, "diagExpediente.tfIniciador.text")); // NOI18N

        tfExtracto.setText(org.openide.util.NbBundle.getMessage(diagExpediente.class, "diagExpediente.tfExtracto.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(tfExtracto, javax.swing.GroupLayout.PREFERRED_SIZE, 671, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(39, 39, 39))
                            .addComponent(tfLetra, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(tfNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfAnio, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addComponent(tfIniciador, javax.swing.GroupLayout.PREFERRED_SIZE, 521, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(137, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tfLetra, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfIniciador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfExtracto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(diagExpediente.class, "diagExpediente.jPanel2.border.title"))); // NOI18N

        btnNuevoExpediente.setText(org.openide.util.NbBundle.getMessage(diagExpediente.class, "diagExpediente.btnNuevoExpediente.text")); // NOI18N
        btnNuevoExpediente.setPreferredSize(new java.awt.Dimension(120, 40));
        btnNuevoExpediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoExpedienteActionPerformed(evt);
            }
        });

        btnModificarExpediente.setText(org.openide.util.NbBundle.getMessage(diagExpediente.class, "diagExpediente.btnModificarExpediente.text")); // NOI18N
        btnModificarExpediente.setPreferredSize(new java.awt.Dimension(120, 40));
        btnModificarExpediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarExpedienteActionPerformed(evt);
            }
        });

        btnRegistrarExpediente.setText(org.openide.util.NbBundle.getMessage(diagExpediente.class, "diagExpediente.btnRegistrarExpediente.text")); // NOI18N
        btnRegistrarExpediente.setPreferredSize(new java.awt.Dimension(120, 40));
        btnRegistrarExpediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarExpedienteActionPerformed(evt);
            }
        });

        btnCancelarExpediente.setText(org.openide.util.NbBundle.getMessage(diagExpediente.class, "diagExpediente.btnCancelarExpediente.text")); // NOI18N
        btnCancelarExpediente.setPreferredSize(new java.awt.Dimension(120, 40));
        btnCancelarExpediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarExpedienteActionPerformed(evt);
            }
        });

        btnSalirExpedientes.setText(org.openide.util.NbBundle.getMessage(diagExpediente.class, "diagExpediente.btnSalirExpedientes.text")); // NOI18N
        btnSalirExpedientes.setPreferredSize(new java.awt.Dimension(120, 40));
        btnSalirExpedientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirExpedientesActionPerformed(evt);
            }
        });

        btnBuscarExpediente.setText(org.openide.util.NbBundle.getMessage(diagExpediente.class, "diagExpediente.btnBuscarExpediente.text")); // NOI18N
        btnBuscarExpediente.setPreferredSize(new java.awt.Dimension(120, 40));
        btnBuscarExpediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarExpedienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNuevoExpediente, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnModificarExpediente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBuscarExpediente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRegistrarExpediente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCancelarExpediente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSalirExpedientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevoExpediente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnModificarExpediente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRegistrarExpediente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelarExpediente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalirExpedientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarExpediente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        btnCargarExp.setText(org.openide.util.NbBundle.getMessage(diagExpediente.class, "diagExpediente.btnCargarExp.text")); // NOI18N
        btnCargarExp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarExpActionPerformed(evt);
            }
        });

        tfRutaCargaExp.setText(org.openide.util.NbBundle.getMessage(diagExpediente.class, "diagExpediente.tfRutaCargaExp.text")); // NOI18N

        javax.swing.GroupLayout pnArchivoLayout = new javax.swing.GroupLayout(pnArchivo);
        pnArchivo.setLayout(pnArchivoLayout);
        pnArchivoLayout.setHorizontalGroup(
            pnArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnArchivoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCargarExp, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfRutaCargaExp)
                .addContainerGap())
        );
        pnArchivoLayout.setVerticalGroup(
            pnArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnArchivoLayout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(pnArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCargarExp, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfRutaCargaExp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnArchivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirExpedientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirExpedientesActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirExpedientesActionPerformed

    private void btnBuscarExpedienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarExpedienteActionPerformed
        diagBusquedaExpediente dlgBExp = new diagBusquedaExpediente(null, true);
        dlgBExp.setLocation(Comunes.centrarDialog(dlgBExp));
        dlgBExp.setVisible(true);
        if(dlgBExp.getExpediente()!=null){
        expediente=dlgBExp.getExpediente();
        inicializarModificar();
        }
    }//GEN-LAST:event_btnBuscarExpedienteActionPerformed

    private void btnNuevoExpedienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoExpedienteActionPerformed
        // TODO add your handling code here:
        IngresoDatos();
    }//GEN-LAST:event_btnNuevoExpedienteActionPerformed

    private void btnCancelarExpedienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarExpedienteActionPerformed
        // TODO add your handling code here:
        inicializar();
    }//GEN-LAST:event_btnCancelarExpedienteActionPerformed

    private void tfAnioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfAnioKeyTyped
        // escribir solo numeros
        //char caracter = evt.getKeyChar();
        //contamos los caracteres escritos - no debe pasar de 4
        //if (tfAnio.getText().length()== 4) {
        //    evt.consume();
        //}
        // Verificar si la tecla pulsada no es un digito
        //if(((caracter < '0') || (caracter > '9')) && (caracter != '\b' /*corresponde a BACK_SPACE*/)) {
        //    evt.consume();  // ignorar el evento de teclado
        //}
        Comunes.cantidadCarateres(tfAnio, evt, 4);
        Comunes.soloNumeros(tfAnio, evt);
    }//GEN-LAST:event_tfAnioKeyTyped

    private void tfLetraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfLetraKeyTyped
        //escribir solo letras
        //char caracter = evt.getKeyChar();
        //contamos los caracteres escritos - no debe pasar de 1
        //if (tfLetra.getText().length()== 1) {
        //    evt.consume();
        //}
        //verificar que la tecla pulsada sea una letra
        //if(!((caracter > 64 && caracter < 91) || (caracter > 96 && caracter < 123))){
        //    evt.consume();  // ignorar el evento de teclado
        //}
        Comunes.cantidadCarateres(tfLetra, evt, 1);
        Comunes.soloTexto(tfLetra, evt);
    }//GEN-LAST:event_tfLetraKeyTyped

    private void tfNumeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNumeroKeyTyped
        // escribir solo numeros
        //char caracter = evt.getKeyChar();
        // Verificar si la tecla pulsada no es un digito
        //if(((caracter < '0') || (caracter > '9')) && (caracter != '\b' /*corresponde a BACK_SPACE*/)) {
        //    evt.consume();  // ignorar el evento de teclado
        //}
        Comunes.soloNumeros(tfNumero, evt);
    }//GEN-LAST:event_tfNumeroKeyTyped

    private void tfLetraFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfLetraFocusLost
        // convierto en mayusculas cuando pierde el foco
        tfLetra.setText(Comunes.mayusculizar(tfLetra));
    }//GEN-LAST:event_tfLetraFocusLost

    private void btnRegistrarExpedienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarExpedienteActionPerformed
        // TODO add your handling code here:
        GuardarDatos();
    }//GEN-LAST:event_btnRegistrarExpedienteActionPerformed

    private void btnModificarExpedienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarExpedienteActionPerformed
        modificarExpediente();
    }//GEN-LAST:event_btnModificarExpedienteActionPerformed

    private void btnCargarExpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarExpActionPerformed
        seleccionarExpediente();
    }//GEN-LAST:event_btnCargarExpActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(diagExpediente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(diagExpediente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(diagExpediente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(diagExpediente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                diagExpediente dialog = new diagExpediente(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarExpediente;
    private javax.swing.JButton btnCancelarExpediente;
    private javax.swing.JButton btnCargarExp;
    private javax.swing.JButton btnModificarExpediente;
    private javax.swing.JButton btnNuevoExpediente;
    private javax.swing.JButton btnRegistrarExpediente;
    private javax.swing.JButton btnSalirExpedientes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel pnArchivo;
    private javax.swing.JTextField tfAnio;
    private javax.swing.JTextField tfExtracto;
    private javax.swing.JTextField tfIniciador;
    private javax.swing.JTextField tfLetra;
    private javax.swing.JTextField tfNumero;
    private javax.swing.JTextField tfRutaCargaExp;
    // End of variables declaration//GEN-END:variables

    private void inicializar() {
        tfLetra.setEnabled(false);
        tfNumero.setEnabled(false);
        tfAnio.setEnabled(false);
        tfExtracto.setEnabled(false);
        tfIniciador.setEnabled(false);

        tfLetra.setText("");
        tfNumero.setText("");
        tfAnio.setText("");
        tfIniciador.setText("");
        tfExtracto.setText("");

        if(bPermite){
            btnNuevoExpediente.setEnabled(true);
        //    btnModificarExpediente.setEnabled(true);
        } else{
            btnNuevoExpediente.setEnabled(false);
        //    btnModificarExpediente.setEnabled(false);
        }
        
        btnModificarExpediente.setEnabled(false);
        btnBuscarExpediente.setEnabled(true);
        btnRegistrarExpediente.setEnabled(false);
        btnCancelarExpediente.setEnabled(false);
        btnSalirExpedientes.setEnabled(true);
        Comunes.setEnableContainer(jPanel1, false);
        Comunes.setEnableContainer(pnArchivo, false);
        
       // tfRutaCargaExp.setEnabled(false);
        expediente=null;
    }
    
    private void inicializarParaArchivo() {
        tfLetra.setEnabled(false);
        tfNumero.setEnabled(false);
        tfAnio.setEnabled(false);
        tfExtracto.setEnabled(false);
        tfIniciador.setEnabled(false);

        tfLetra.setText(this.expediente2.getLetra());
        tfNumero.setText(this.expediente2.getNumero());
        tfAnio.setText(this.expediente2.getAnio());
        tfIniciador.setText(this.expediente2.getIniciador());
        tfExtracto.setText(this.expediente2.getExtracto());

        btnNuevoExpediente.setEnabled(false);
        btnModificarExpediente.setEnabled(false);
        btnBuscarExpediente.setEnabled(false);
        btnRegistrarExpediente.setEnabled(false);
        btnCancelarExpediente.setEnabled(true);
        btnSalirExpedientes.setEnabled(true);
        Comunes.setEnableContainer(jPanel1, false);
        Comunes.setEnableContainer(pnArchivo, true);
        
        expediente=null;
    }    

    //agregar datos a expedientes
    private void IngresoDatos() {
        Comunes.setEnableContainer(jPanel1, true);
        Comunes.setEnableContainer(pnArchivo, true);
        tfRutaCargaExp.setFocusable(false);
        //habilito los textos
        tfLetra.setEnabled(true);
        tfNumero.setEnabled(true);
        tfAnio.setEnabled(true);
        tfExtracto.setEnabled(true);
        tfIniciador.setEnabled(true);
        //habilito los botones para grabar y cancelar y deshabilito los restantes
        btnNuevoExpediente.setEnabled(false);
        btnModificarExpediente.setEnabled(false);
        btnBuscarExpediente.setEnabled(false);
        btnRegistrarExpediente.setEnabled(true);
        btnCancelarExpediente.setEnabled(true);
        btnSalirExpedientes.setEnabled(false);
        tfLetra.requestFocus();
    }

    //grabar datos
    private void GuardarDatos() {

        if (tfLetra.getText().isEmpty()) {
            tfLetra.grabFocus();
            JOptionPane.showMessageDialog(null, "Ingresar Letra del Expediente");
        } else if (tfNumero.getText().isEmpty()) {
            tfNumero.grabFocus();
            JOptionPane.showMessageDialog(null, "Ingresar Numero del Expediente");
        } else if (tfAnio.getText().isEmpty()) {
            tfAnio.grabFocus();
            JOptionPane.showMessageDialog(null, "Ingresar el Año");
        }
        else if (tfIniciador.getText().isEmpty()) {
            tfIniciador.grabFocus();
            JOptionPane.showMessageDialog(null, "Ingresar el Iniciador");
        }
        else if (tfExtracto.getText().isEmpty()) {
            tfExtracto.grabFocus();
            JOptionPane.showMessageDialog(null, "Ingresar el Estracto");
        }
        else{
             int respuesta = JOptionPane.showConfirmDialog(null, "¿Se Dara de Alta el Expediente, Desea Continuar:?", "Alta", JOptionPane.YES_NO_OPTION);
            if (respuesta == JOptionPane.YES_OPTION) {

                //ExpedienteFacade.getInstance().alta(expediente);
     
                EntityManagerFactory emf = null;
                EntityManager em = null;
                
                expediente = new Expediente();
                
if (!tfRutaCargaExp.getText().isEmpty()) {                

                File archivoEntrada = new File(tfRutaCargaExp.getText());
                if (longitudArchivoValida(archivoEntrada)) {
                    InputStream is = null;
                    try {

                        Documento d = new Documento();

                    //    if (!tfRutaCargaExp.getText().isEmpty()) {
                            d.setNombreArchivo(archivoEntrada.getName());
                            is = new FileInputStream(archivoEntrada);
                            byte[] buffer = new byte[(int) archivoEntrada.length()]; //creamos el buffer
                            is.read(buffer); //leemos el archivo al buffer
                            d.setContenidoArchivo(buffer);
                            new DocumentoJpaController(Persistence.createEntityManagerFactory("ProyectoUnoPU", ConexionFacade.PROPIEDADES)).create(d);
                    //    }
/*                        emf = Persistence.createEntityManagerFactory("ProyectoUnoPU", ConexionFacade.PROPIEDADES);
                        em = emf.createEntityManager();
                        em.getTransaction().begin();

                    //    expediente = new Expediente();
                        expediente.setLetra(tfLetra.getText());
                        expediente.setNumero(tfNumero.getText());
                        expediente.setAnio(tfAnio.getText());
                        expediente.setIniciador(tfIniciador.getText());
                        expediente.setExtracto(tfExtracto.getText());*/
                        if (!d.getNombreArchivo().isEmpty()) {
                            expediente.setDocumento(d);
                        }

                        //Validar si existe Dictamen
                    /*    em.persist(expediente);
                        em.getTransaction().commit();//finaliza
                        JOptionPane.showMessageDialog(null, "Expediente Registrado", "Registro de Expediente", JOptionPane.INFORMATION_MESSAGE);

                        this.dispose();*/

                    } catch (Exception e) {
                        //JOptionPane.showMessageDialog(null, "Error Tratando de registrar el Dictamen", "Registro de Dictamen", JOptionPane.INFORMATION_MESSAGE);
                        JOptionPane.showMessageDialog(null, e.getMessage(), "Error al guardar el archivo de entrada", JOptionPane.INFORMATION_MESSAGE);
                    }/* finally {
                        em.close();
                        emf.close();

                    }*/
                } else {
                    JOptionPane.showMessageDialog(null, "Archivo demasiado Grande, debe ser menor a 5 MegaBytes");
                }               
    }
    try{
                emf = Persistence.createEntityManagerFactory("ProyectoUnoPU", ConexionFacade.PROPIEDADES);
                em = emf.createEntityManager();
                em.getTransaction().begin();

                //    expediente = new Expediente();
                expediente.setLetra(tfLetra.getText());
                expediente.setNumero(tfNumero.getText());
                expediente.setAnio(tfAnio.getText());
                expediente.setIniciador(tfIniciador.getText());
                expediente.setExtracto(tfExtracto.getText());
                
                em.persist(expediente);
                em.getTransaction().commit();//finaliza*/
                JOptionPane.showMessageDialog(null, "Expediente Registrado", "Registro de Expediente", JOptionPane.INFORMATION_MESSAGE);

                this.dispose();              
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e.getMessage(), "Error Registro de Expediente", JOptionPane.INFORMATION_MESSAGE);
    } finally {
        em.close();
        emf.close();

    }// try finally
    }//if (respuesta == JOptionPane.YES_OPTION)
    }//else

   }//private void GuardarDatos() 
    
    private boolean longitudArchivoValida(File archivoEntrada) {
        // Get length of file in bytes
        long fileSizeInBytes = archivoEntrada.length();
        // Convert the bytes to Kilobytes (1 KB = 1024 Bytes)
        long fileSizeInKB = fileSizeInBytes / 1024;
        // Convert the KB to MegaBytes (1 MB = 1024 KBytes)
        long fileSizeInMB = fileSizeInKB / 1024;
        return fileSizeInMB < 5;
    }

    private void inicializarModificar() {
       //inicializar panel de control modo modificar expediente 
       btnNuevoExpediente.setEnabled(false);
       if(this.bPermite){
           btnModificarExpediente.setEnabled(true);
        
       } else {
           btnModificarExpediente.setEnabled(false);
         
       }
       
       btnBuscarExpediente.setEnabled(false);
       btnRegistrarExpediente.setEnabled(false);
       btnCancelarExpediente.setEnabled(true);
       btnSalirExpedientes.setEnabled(true);
       
       //inicializar textfield modo modificacion
       tfLetra.setText(expediente.getLetra());
       tfNumero.setText(expediente.getNumero());
       tfAnio.setText(expediente.getAnio());
       tfIniciador.setText(expediente.getIniciador());
       tfExtracto.setText(expediente.getExtracto());
       
       //habilitar textfields
       tfLetra.setEnabled(true);
       tfNumero.setEnabled(true);
       tfAnio.setEditable(true);
       tfIniciador.setEnabled(true);
       tfExtracto.setEnabled(true);
       
       Comunes.setEnableContainer(pnArchivo, false);
    }

    private void modificarExpediente() {
        int respuesta;
        respuesta = JOptionPane.showConfirmDialog(null, "¿Esta Por Modificar los Datos del Expediente solicitado, Desea Continuar?", "Modificar", JOptionPane.YES_NO_OPTION);
        if (respuesta == JOptionPane.YES_OPTION) {
            try {
                expediente.setLetra(tfLetra.getText());
                expediente.setNumero(tfNumero.getText());
                expediente.setAnio(tfAnio.getText());
                expediente.setIniciador(tfIniciador.getText());
                expediente.setExtracto(tfExtracto.getText());
                ExpedienteFacade.getInstance().modificar(expediente);
                JOptionPane.showMessageDialog(null, "Datos del Expediente Modificados");
                inicializar();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error: " + e);
            }
        }
    }
    
        private void seleccionarExpediente() {
        JFileChooser fileChooser = new JFileChooser();
        int seleccion = fileChooser.showOpenDialog(null);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File fichero = fileChooser.getSelectedFile();
            tfRutaCargaExp.setText(fichero.getAbsolutePath());
        }
    }
}