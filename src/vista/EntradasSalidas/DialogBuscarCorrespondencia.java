/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.EntradasSalidas;

import entidades.EntradasSalidas.Correspondencia;
import facade.ConexionFacade;
import includes.Comunes;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JOptionPane;

/**
 *
 * @author vouilloz
 */
public class DialogBuscarCorrespondencia extends javax.swing.JDialog {

    //public Dictamen dictamen;
    List<Correspondencia> lstCorrespondencia = new ArrayList<>();
    public Correspondencia correspondencia;
    private boolean flag;
    private boolean bAgregar = true;

    public Correspondencia getCorrespondencia() {
        return correspondencia;
    }

    public void setCorrespondencia(Correspondencia correspondencia) {
        this.correspondencia = correspondencia;
    }

    /**
     * Creates new form DialogBuscarDictamen
     */
    public DialogBuscarCorrespondencia(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
       // cargarListaCorrespondencia();
        inicializar();
        flag = true;
    }
    
    public DialogBuscarCorrespondencia(java.awt.Frame parent, boolean modal, boolean bAgregar) {
        super(parent, modal);
        initComponents();
       // cargarListaCorrespondencia();
        this.bAgregar = bAgregar;
        inicializar();
        flag = true;
    }    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cboseleccion = new javax.swing.JComboBox();
        lbl1 = new javax.swing.JLabel();
        tf1 = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlstCorrespondencia = new javax.swing.JList();
        btnSeleccionar = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DialogBuscarCorrespondencia.class, "DialogBuscarCorrespondencia.jPanel1.border.title_1"))); // NOI18N

        cboseleccion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Remitente", "Destinatario", " " }));
        cboseleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboseleccionActionPerformed(evt);
            }
        });

        lbl1.setText(org.openide.util.NbBundle.getMessage(DialogBuscarCorrespondencia.class, "DialogBuscarCorrespondencia.lbl1.text_1")); // NOI18N

        tf1.setText(org.openide.util.NbBundle.getMessage(DialogBuscarCorrespondencia.class, "DialogBuscarCorrespondencia.tf1.text_1")); // NOI18N

        btnBuscar.setText(org.openide.util.NbBundle.getMessage(DialogBuscarCorrespondencia.class, "DialogBuscarCorrespondencia.btnBuscar.text_1")); // NOI18N
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cboseleccion, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(217, 217, 217)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboseleccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                .addContainerGap())
        );

        jlstCorrespondencia.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { " ", " " };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jlstCorrespondencia);

        btnSeleccionar.setText(org.openide.util.NbBundle.getMessage(DialogBuscarCorrespondencia.class, "DialogBuscarCorrespondencia.btnSeleccionar.text_1")); // NOI18N
        btnSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarActionPerformed(evt);
            }
        });

        btnAgregar.setText(org.openide.util.NbBundle.getMessage(DialogBuscarCorrespondencia.class, "DialogBuscarCorrespondencia.btnAgregar.text_1")); // NOI18N
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnCerrar.setText(org.openide.util.NbBundle.getMessage(DialogBuscarCorrespondencia.class, "DialogBuscarCorrespondencia.btnCerrar.text_1")); // NOI18N
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(btnSeleccionar, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSeleccionar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        DialogRegistroCorrespondencia dlgRC = new DialogRegistroCorrespondencia(null, true);
        dlgRC.setLocation(Comunes.centrarDialog(dlgRC));
        dlgRC.setVisible(true);
        if (dlgRC.getCorresp() != null) {
            correspondencia = dlgRC.getCorresp();
            //lbl.setText(dictamen.getNumero());
            //codigo agregar el dictamen persistido que viene como parametro a la lista
            lstCorrespondencia.add(dlgRC.getCorresp());
            Comunes.cargarJList(jlstCorrespondencia, lstCorrespondencia);
            this.dispose();
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarActionPerformed
        seleccionarCorrespondencia();
    }//GEN-LAST:event_btnSeleccionarActionPerformed

    private void cboseleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboseleccionActionPerformed
        if (cboseleccion.getSelectedItem().equals("Numero")) {
            lbl1.setText("Remitente");
            flag = true;
        } else {
            lbl1.setText("Destinatario");
            flag = false;
        }
    }//GEN-LAST:event_cboseleccionActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if (flag) {
            if (tf1.getText().equals("")) {
                cargarListaCorrespondencia();
            } else {
                buscarRemitente();
            }

        } else {
           if (tf1.getText().equals("")) {
                cargarListaCorrespondencia();
            } else {
                buscarDestinatario();
            }
        }
        
    }//GEN-LAST:event_btnBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogBuscarCorrespondencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogBuscarCorrespondencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogBuscarCorrespondencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogBuscarCorrespondencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogBuscarCorrespondencia dialog = new DialogBuscarCorrespondencia(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnSeleccionar;
    private javax.swing.JComboBox cboseleccion;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList jlstCorrespondencia;
    private javax.swing.JLabel lbl1;
    private javax.swing.JTextField tf1;
    // End of variables declaration//GEN-END:variables

    private void cargarListaCorrespondencia() {
        EntityManagerFactory emf = null;
        EntityManager em = null;
        try {
            emf = Persistence.createEntityManagerFactory("ProyectoUnoPU", ConexionFacade.PROPIEDADES);
            em = emf.createEntityManager();
            em.getTransaction().begin();
            Query q = em.createQuery("SELECT c FROM Correspondencia c");
            lstCorrespondencia = q.getResultList();
            Comunes.cargarJList(jlstCorrespondencia, lstCorrespondencia);
            em.getTransaction().commit();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            em.close();
            emf.close();
        }

    }

    private void buscarRemitente() {
        EntityManagerFactory emf = null;
        EntityManager em = null;
        try {
            emf = Persistence.createEntityManagerFactory("ProyectoUnoPU", ConexionFacade.PROPIEDADES);
            em = emf.createEntityManager();
            em.getTransaction().begin();
            Query q = em.createQuery("SELECT c FROM Correspondencia c where c.remitente=:remitente");
            q.setParameter("remitente", tf1.getText());
            lstCorrespondencia.clear();
            lstCorrespondencia = q.getResultList();
            Comunes.cargarJList(jlstCorrespondencia, lstCorrespondencia);
            em.getTransaction().commit();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            em.close();
            emf.close();
        }

    }

    private void buscarDestinatario() {
        EntityManagerFactory emf = null;
        EntityManager em = null;
        try {
            emf = Persistence.createEntityManagerFactory("ProyectoUnoPU", ConexionFacade.PROPIEDADES);
            em = emf.createEntityManager();
            em.getTransaction().begin();
            Query q = em.createQuery("SELECT c FROM Correspondencia c where c.destinantario=:destinatario");
            q.setParameter("destinatario", tf1.getText());
            lstCorrespondencia.clear();
            lstCorrespondencia = q.getResultList();
            Comunes.cargarJList(jlstCorrespondencia, lstCorrespondencia);
            em.getTransaction().commit();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            em.close();
            emf.close();
        }
    }

    private void seleccionarCorrespondencia() {
        if (jlstCorrespondencia.getSelectedIndex() != -1) {
            correspondencia = (Correspondencia) jlstCorrespondencia.getSelectedValue();
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una Correspondencia de la lista");
        }

    }
    
    private void inicializar(){
        if(bAgregar){
            btnAgregar.setEnabled(true);
        }
        else{
            btnAgregar.setEnabled(false);
        }
    }
}
