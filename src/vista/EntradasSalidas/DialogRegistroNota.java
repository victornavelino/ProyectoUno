/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.EntradasSalidas;

import controladores.ArchivoNotasJpaController;
import entidades.EntradasSalidas.ArchivoNotas;
import entidades.EntradasSalidas.NotaEntradaSalida;
import entidades.proyecto.Nota;
import facade.ConexionFacade;
import facade.EntradasSalidas.NotaEntradaSalidaFacade;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author vouilloz
 */
public class DialogRegistroNota extends javax.swing.JDialog {

    public NotaEntradaSalida nota;

    public NotaEntradaSalida getNota() {
        return nota;
    }

    public void setNota(NotaEntradaSalida nota) {
        this.nota = nota;
    }

    /**
     * Creates new form DialogRegistroDictamen
     */
    public DialogRegistroNota(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        tfNumero.grabFocus();
        traerNotasDesc();
    }

    public DialogRegistroNota(java.awt.Frame parent, boolean modal, boolean bNoCarga_archivo) {
        super(parent, modal);
        initComponents();
        tfNumero.grabFocus();
        inicializarComponentes(bNoCarga_archivo);
        traerNotasDesc();
    }    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tfDescripcion = new javax.swing.JTextField();
        btnCargarNota = new javax.swing.JButton();
        tfRutaCargaNota = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        dpFechaNota = new org.jdesktop.swingx.JXDatePicker();
        tfNumero = new javax.swing.JTextField();
        btnGuardarNota = new javax.swing.JButton();
        btnCancelNota = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(DialogRegistroNota.class, "DialogRegistroNota.title")); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DialogRegistroNota.class, "DialogRegistroNota.jPanel1.border.title"))); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(DialogRegistroNota.class, "DialogRegistroNota.jLabel1.text")); // NOI18N

        jLabel5.setText(org.openide.util.NbBundle.getMessage(DialogRegistroNota.class, "DialogRegistroNota.jLabel5.text")); // NOI18N

        tfDescripcion.setText(org.openide.util.NbBundle.getMessage(DialogRegistroNota.class, "DialogRegistroNota.tfDescripcion.text")); // NOI18N

        btnCargarNota.setText(org.openide.util.NbBundle.getMessage(DialogRegistroNota.class, "DialogRegistroNota.btnCargarNota.text")); // NOI18N
        btnCargarNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarNotaActionPerformed(evt);
            }
        });

        tfRutaCargaNota.setText(org.openide.util.NbBundle.getMessage(DialogRegistroNota.class, "DialogRegistroNota.tfRutaCargaNota.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(DialogRegistroNota.class, "DialogRegistroNota.jLabel2.text")); // NOI18N

        dpFechaNota.setFormats("dd/MM/yyyy");

        tfNumero.setText(org.openide.util.NbBundle.getMessage(DialogRegistroNota.class, "DialogRegistroNota.tfNumero.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(btnCargarNota, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(tfRutaCargaNota))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(tfNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5)
                                .addComponent(tfDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel2)
                    .addComponent(dpFechaNota, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(28, 28, 28))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dpFechaNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCargarNota, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfRutaCargaNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        btnGuardarNota.setText(org.openide.util.NbBundle.getMessage(DialogRegistroNota.class, "DialogRegistroNota.btnGuardarNota.text")); // NOI18N
        btnGuardarNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarNotaActionPerformed(evt);
            }
        });

        btnCancelNota.setText(org.openide.util.NbBundle.getMessage(DialogRegistroNota.class, "DialogRegistroNota.btnCancelNota.text")); // NOI18N
        btnCancelNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelNotaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(btnGuardarNota, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancelNota, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardarNota, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelNota, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelNotaActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelNotaActionPerformed

    private void btnGuardarNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarNotaActionPerformed
        altaNota();
    }//GEN-LAST:event_btnGuardarNotaActionPerformed

    private void btnCargarNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarNotaActionPerformed
        seleccionarNota();
    }//GEN-LAST:event_btnCargarNotaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogRegistroNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogRegistroNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogRegistroNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogRegistroNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogRegistroNota dialog = new DialogRegistroNota(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelNota;
    private javax.swing.JButton btnCargarNota;
    private javax.swing.JButton btnGuardarNota;
    private org.jdesktop.swingx.JXDatePicker dpFechaNota;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField tfDescripcion;
    private javax.swing.JTextField tfNumero;
    private javax.swing.JTextField tfRutaCargaNota;
    // End of variables declaration//GEN-END:variables

    private void altaNota() {
        if ((tfNumero.getText()).length() == 0) {
            JOptionPane.showMessageDialog(null, "Debe ingresar el Numero de Nota", "Cuadro de texto vacio", JOptionPane.WARNING_MESSAGE);
            tfNumero.grabFocus();
        } else if ((tfDescripcion.getText()).length() == 0) {
            JOptionPane.showMessageDialog(null, "Debe ingresar la descripcion", "Cuadro de texto vacio", JOptionPane.WARNING_MESSAGE);
            tfDescripcion.grabFocus();

        } else if (NotaEntradaSalidaFacade.getInstance().buscarNumeroNota(tfNumero.getText())) {
            JOptionPane.showMessageDialog(null, "El Numero de Nota Ya Existe, seleccione un numero distinto", "Cuadro de texto vacio", JOptionPane.WARNING_MESSAGE);
            tfNumero.grabFocus();
        } else {
            EntityManagerFactory emf = null;
            EntityManager em = null;
            NotaEntradaSalida note = new NotaEntradaSalida();
           
if (!tfRutaCargaNota.getText().isEmpty()){
            File archivoEntrada = new File(tfRutaCargaNota.getText());
            if (longitudArchivoValida(archivoEntrada)) {
                InputStream is = null;
                try {

                    ArchivoNotas d = new ArchivoNotas();

                    //if (!tfRutaCargaNota.getText().isEmpty()) {
                        d.setNombreArchivo(archivoEntrada.getName());
                        is = new FileInputStream(archivoEntrada);
                        byte[] buffer = new byte[(int) archivoEntrada.length()]; //creamos el buffer
                        is.read(buffer); //leemos el archivo al buffer
                        d.setContenidoArchivo(buffer);
                        new ArchivoNotasJpaController(Persistence.createEntityManagerFactory("ProyectoUnoPU", ConexionFacade.PROPIEDADES)).create(d);
                    //}
                   /* emf = Persistence.createEntityManagerFactory("ProyectoUnoPU", ConexionFacade.PROPIEDADES);
                    em = emf.createEntityManager();
                    em.getTransaction().begin();

                    NotaEntradaSalida note = new NotaEntradaSalida();

                    note.setNumero(tfNumero.getText());
                    note.setDescripcion(tfDescripcion.getText());
                    note.setFechaNota(dpFechaNota.getDate());*/
                    if (!d.getNombreArchivo().isEmpty()) {
                        note.setArchivoNota(d);
                    }

                    //Validar si existe Dictamen
                /*    em.persist(note);
                    em.getTransaction().commit();
                    JOptionPane.showMessageDialog(null, "Nota Registrada", "Registro de Nota", JOptionPane.INFORMATION_MESSAGE);
                    nota = (NotaEntradaSalida) note;
                    this.dispose();*/

                } catch (Exception e) {
                   JOptionPane.showMessageDialog(null, e.getMessage(), "Error al guardar el archivo de entrada", JOptionPane.INFORMATION_MESSAGE);
                } /* finally {
                    em.close();
                    emf.close();

                }*/
            } else {
                JOptionPane.showMessageDialog(null, "Archivo demasiado Grande, debe ser menor a 5 MegaBytes");
            }//else if (longitudArchivoValida(archivoEntrada))
        }//if (!tfRutaCargaNota.getText().isEmpty()) 
    try {
        emf = Persistence.createEntityManagerFactory("ProyectoUnoPU", ConexionFacade.PROPIEDADES);
        em = emf.createEntityManager();
        em.getTransaction().begin();

        note.setNumero(tfNumero.getText());
        note.setDescripcion(tfDescripcion.getText());
        note.setFechaNota(dpFechaNota.getDate());

        em.persist(note);
        em.getTransaction().commit();
        JOptionPane.showMessageDialog(null, "Nota Registrada", "Registro de Nota", JOptionPane.INFORMATION_MESSAGE);
        nota = (NotaEntradaSalida) note;
        this.dispose();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e.getMessage(), "Error Registro de Nota", JOptionPane.INFORMATION_MESSAGE);
    } finally {
        em.close();
        emf.close();

    }//finally try


    }//else
    }//alta

    private void seleccionarNota() {
        JFileChooser fileChooser = new JFileChooser();
        int seleccion = fileChooser.showOpenDialog(null);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File fichero = fileChooser.getSelectedFile();
            tfRutaCargaNota.setText(fichero.getAbsolutePath());
        }
    }

    private boolean longitudArchivoValida(File archivoEntrada) {
        // Get length of file in bytes
        long fileSizeInBytes = archivoEntrada.length();
        // Convert the bytes to Kilobytes (1 KB = 1024 Bytes)
        long fileSizeInKB = fileSizeInBytes / 1024;
        // Convert the KB to MegaBytes (1 MB = 1024 KBytes)
        long fileSizeInMB = fileSizeInKB / 1024;
        return fileSizeInMB < 5;
    }

    private void traerNotasDesc() {
        try {
            System.out.println("entro try");
            List<NotaEntradaSalida> listaNotas = NotaEntradaSalidaFacade.getInstance().listaNotas();
            NotaEntradaSalida nota;
            nota = (NotaEntradaSalida) listaNotas.get(0);
            tfNumero.setText((String.valueOf(Integer.valueOf(nota.getNumero()) + 1)));
        } catch (Exception e) {
            System.out.println("salio catch");
            tfNumero.setText("1");
        }
    }

private void inicializarComponentes(boolean bNoCarga_archivo){
    if(bNoCarga_archivo){
      btnCargarNota.setEnabled(false);
    //  tfRutaCargaNota.setEnabled(false);  
    }
    tfRutaCargaNota.setEnabled(false);  
}//private void inicializarComponentes(boolean bCarga_archivo)

}
