/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.EntradasSalidas;

import entidades.EntradasSalidas.NotaEntradaSalida;
import facade.ConexionFacade;
import facade.EntradasSalidas.NotaEntradaSalidaFacade;
import facade.NotaFacade;
import includes.Comunes;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JOptionPane;

/**
 *
 * @author vouilloz
 */
public class DialogBuscarNota extends javax.swing.JDialog {

    //public Dictamen dictamen;
    List<NotaEntradaSalida> lstNota = new ArrayList<>();
    public NotaEntradaSalida nota;
    private boolean flag;
    private boolean bNuevo_mod = true;
    private boolean bCargar_Archivo = false;

    public NotaEntradaSalida getNota() {
        return nota;
    }

    /**
     * Creates new form DialogBuscarDictamen
     */
    public DialogBuscarNota(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        //cargarListaNotas();
        flag = true;
    }
    
    public DialogBuscarNota(java.awt.Frame parent, boolean modal, boolean bNuevo_mod, boolean bCargar_Archivo) {
        super(parent, modal);
        initComponents();
        this.bNuevo_mod = bNuevo_mod;
        this.bCargar_Archivo = bCargar_Archivo;
        flag = true;
        inicializarComponentes();
    }    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cboseleccion = new javax.swing.JComboBox();
        lbl1 = new javax.swing.JLabel();
        tf1 = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstNotas = new javax.swing.JList();
        btnSeleccionar = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DialogBuscarNota.class, "DialogBuscarNota.jPanel1.border.title"))); // NOI18N

        cboseleccion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Numero", "Descripcion", "" }));
        cboseleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboseleccionActionPerformed(evt);
            }
        });

        lbl1.setText(org.openide.util.NbBundle.getMessage(DialogBuscarNota.class, "DialogBuscarNota.lbl1.text")); // NOI18N

        tf1.setText(org.openide.util.NbBundle.getMessage(DialogBuscarNota.class, "DialogBuscarNota.tf1.text")); // NOI18N

        btnBuscar.setText(org.openide.util.NbBundle.getMessage(DialogBuscarNota.class, "DialogBuscarNota.btnBuscar.text")); // NOI18N
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cboseleccion, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf1, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(217, 217, 217)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboseleccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                .addContainerGap())
        );

        lstNotas.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { " ", " " };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lstNotas);

        btnSeleccionar.setText(org.openide.util.NbBundle.getMessage(DialogBuscarNota.class, "DialogBuscarNota.btnSeleccionar.text")); // NOI18N
        btnSeleccionar.setPreferredSize(new java.awt.Dimension(40, 28));
        btnSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarActionPerformed(evt);
            }
        });

        btnAgregar.setText(org.openide.util.NbBundle.getMessage(DialogBuscarNota.class, "DialogBuscarNota.btnAgregar.text")); // NOI18N
        btnAgregar.setPreferredSize(new java.awt.Dimension(40, 28));
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnCerrar.setText(org.openide.util.NbBundle.getMessage(DialogBuscarNota.class, "DialogBuscarNota.btnCerrar.text")); // NOI18N
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        btnEliminar.setText(org.openide.util.NbBundle.getMessage(DialogBuscarNota.class, "DialogBuscarNota.btnEliminar.text")); // NOI18N
        btnEliminar.setPreferredSize(new java.awt.Dimension(40, 28));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnModificar.setText(org.openide.util.NbBundle.getMessage(DialogBuscarNota.class, "DialogBuscarNota.btnModificar.text")); // NOI18N
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSeleccionar, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSeleccionar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
    DialogRegistroNota dlgRD;
        if(this.bCargar_Archivo){
             dlgRD = new DialogRegistroNota(null, true,false);
        } else{
             dlgRD = new DialogRegistroNota(null, true);
        }
        
        dlgRD.setLocation(Comunes.centrarDialog(dlgRD));
        dlgRD.setVisible(true);
        if (dlgRD.getNota() != null) {
            //dictamen = dlgRD.getDictamen();
            //  lbl.setText(dictamen.getNumero());
            //codigo agregar el dictamen persistido que viene como parametro a la lista
            lstNota.add(dlgRD.getNota());
            Comunes.cargarJList(lstNotas, lstNota);
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarActionPerformed
        seleccionarDictamen();
    }//GEN-LAST:event_btnSeleccionarActionPerformed

    private void cboseleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboseleccionActionPerformed
        if (cboseleccion.getSelectedItem().equals("Numero")) {
            lbl1.setText("Numero");
            flag = true;
        } else {
            lbl1.setText("Descripcion");
            flag = false;
        }
    }//GEN-LAST:event_cboseleccionActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if (flag) {
            buscarNotaNumero();
        } else {
            buscarNotaDescripcion(tf1.getText());
        }
        if (tf1.getText().equals("")) {
            cargarListaNotas();
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        accionEliminar();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        accionModificar();
    }//GEN-LAST:event_btnModificarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogBuscarNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogBuscarNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogBuscarNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogBuscarNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogBuscarNota dialog = new DialogBuscarNota(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSeleccionar;
    private javax.swing.JComboBox cboseleccion;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl1;
    private javax.swing.JList lstNotas;
    private javax.swing.JTextField tf1;
    // End of variables declaration//GEN-END:variables

    private void cargarListaNotas() {
        System.out.println("entro cargarListaNotas");
        EntityManagerFactory emf = null;
        EntityManager em = null;
        try {
            emf = Persistence.createEntityManagerFactory("ProyectoUnoPU", ConexionFacade.PROPIEDADES);
            em = emf.createEntityManager();
            em.getTransaction().begin();
            Query q = em.createQuery("SELECT n FROM NotaEntradaSalida n");
            lstNota = q.getResultList();
            System.out.println("lista notas " + lstNota);
            Comunes.cargarJList(lstNotas, lstNota);
            em.getTransaction().commit();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            em.close();
            emf.close();
        }

    }

    private void buscarNotaNumero() {
        EntityManagerFactory emf = null;
        EntityManager em = null;
        try {
            emf = Persistence.createEntityManagerFactory("ProyectoUnoPU", ConexionFacade.PROPIEDADES);
            em = emf.createEntityManager();
            em.getTransaction().begin();
            Query q = em.createQuery("SELECT n FROM NotaEntradaSalida n where n.numero=:numero");
            q.setParameter("numero", tf1.getText());
            lstNota.clear();
            lstNota = q.getResultList();
            Comunes.cargarJList(lstNotas, lstNota);
            em.getTransaction().commit();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            em.close();
            emf.close();
        }

    }

    private void buscarNotaDescripcion(String descripcion) {
        
        EntityManagerFactory emf = null;
        EntityManager em = null;
        try {
            emf = Persistence.createEntityManagerFactory("ProyectoUnoPU", ConexionFacade.PROPIEDADES);
            em = emf.createEntityManager();
            em.getTransaction().begin();
            Query q = em.createQuery("SELECT n FROM NotaEntradaSalida n where n.Descripcion LIKE '%" + descripcion + "%'");
           // q.setParameter("descripcion", tf1.getText());
                               
            lstNota.clear();
            lstNota = q.getResultList();
            Comunes.cargarJList(lstNotas, lstNota);
            em.getTransaction().commit();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            em.close();
            emf.close();
        }
    }

    private void seleccionarDictamen() {
        if (lstNotas.getSelectedIndex() != -1) {
            nota = (NotaEntradaSalida) lstNotas.getSelectedValue();
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una nota de la lista");
        }

    }

    private void accionEliminar() {
        int respuesta;
        if (lstNotas.getSelectedIndex() != -1) {
            respuesta = JOptionPane.showConfirmDialog(null, "¿Desea Eliminar la Nota Seleccionada?", "Eliminacion", JOptionPane.YES_NO_OPTION);
            if (respuesta == JOptionPane.YES_OPTION) {
                try {
                    nota = (NotaEntradaSalida) lstNotas.getSelectedValue();
                    System.out.println("nota " + nota.getDescripcion() + nota.getNumero());
                    NotaEntradaSalidaFacade.getInstance().eliminar(nota.getId());
                    JOptionPane.showMessageDialog(null, "La Nota Seleccionada ha sido Eliminada");
                    Comunes.cargarJList(lstNotas, NotaEntradaSalidaFacade.getInstance().getTodas());
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "La Nota no puede Ser Eliminada ya que esta relacionada a algun registro de Entradas/Salidas, Solo se Pueden eliminar las que no tienen ninguna relacion");
                    //JOptionPane.showMessageDialog(null, "Error al Eliminar");
                }

            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe Seleccionar una Nota de la Lista");
        }
    }

    private void accionModificar() {
        if (lstNotas.getSelectedIndex() != -1) {
            nota = (NotaEntradaSalida) lstNotas.getSelectedValue();
            DialogModificarNota dlgMN = new DialogModificarNota(null, true, nota);
            dlgMN.setLocation(Comunes.centrarDialog(dlgMN));
            dlgMN.setVisible(true);
            if(dlgMN.getNota()!=null){
             Comunes.cargarJList(lstNotas, NotaEntradaSalidaFacade.getInstance().getTodas());
            }
            
        } else {
            JOptionPane.showMessageDialog(null, "Debe Seleccionar una Nota de la Lista");
        }
    }
    
    private void inicializarComponentes(){
        if(bNuevo_mod == false){
            btnAgregar.setEnabled(true);
            btnBuscar.setEnabled(true);
            btnCerrar.setEnabled(true);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }/*else{
            btnAgregar.setEnabled(true);
            btnBuscar.setEnabled(true);
            btnCerrar.setEnabled(true);
            btnEliminar.setEnabled(true);
            btnModificar.setEnabled(true);            
        }*/
    
    }
}
