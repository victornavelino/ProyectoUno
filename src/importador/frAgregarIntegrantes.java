/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frAgregarIntegrantes.java
 *
 * Created on 13/06/2011, 15:44:41
 */
package importador;

import entidades.operaciones.Operacion;
import entidades.persona.investigador.Investigador;
import entidades.proyecto.Proyecto;
import entidades.usuario.Usuario;
import facade.InvestigadorFacade;
import facade.OperacionFacade;
import facade.ParticipacionFacade;
import facade.ProyectoFacade;
import includes.Comunes;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Carlos
 */
public class frAgregarIntegrantes extends javax.swing.JFrame {

    private ProyectoFacade proyectoFacade = ProyectoFacade.getInstance();
    private ParticipacionFacade participacionFacade = new ParticipacionFacade();
    Usuario usuario;

    /** Creates new form frAgregarIntegrantes */
    public frAgregarIntegrantes() {
        initComponents();
        inicializarComponentes();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListProyectos = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListIntegrantesDentro = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListIntegrantesFuera = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        tfFiltroProyectos = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        tfFiltroInvestigadores = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestión de Participacion de Investigadores en Proyectos");

        jLabel1.setText("Proyectos");

        jListProyectos.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListProyectosValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListProyectos);

        jLabel2.setText("Dentro");

        jListIntegrantesDentro.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListIntegrantesDentroValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jListIntegrantesDentro);

        jLabel3.setText("Fuera");

        jScrollPane3.setViewportView(jListIntegrantesFuera);

        jButton1.setText(">>>");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("<<<");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Ver Participaciones");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel4.setText("Filtro");

        tfFiltroProyectos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfFiltroProyectosActionPerformed(evt);
            }
        });

        jButton4.setText("Filtrar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel5.setText("Filtro");

        tfFiltroInvestigadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfFiltroInvestigadoresActionPerformed(evt);
            }
        });

        jButton6.setText("Filtrar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton5.setText("Añadir Nuevo");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfFiltroProyectos, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jButton1)
                                            .addComponent(jButton2))
                                        .addGap(26, 26, 26)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfFiltroInvestigadores, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton6))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jButton5)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(jButton3)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(tfFiltroProyectos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5)
                        .addGap(5, 5, 5)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(60, 60, 60)
                        .addComponent(jButton2)
                        .addGap(36, 36, 36)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jLabel5)
                    .addComponent(tfFiltroInvestigadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jListProyectosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListProyectosValueChanged
        if (jListProyectos.getSelectedIndex() != -1) {
            cargarIntegrantes();
        } else {
            Comunes.cargarJList(jListIntegrantesDentro, new ArrayList());
            Comunes.cargarJList(jListIntegrantesFuera, new ArrayList());
        }

    }//GEN-LAST:event_jListProyectosValueChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        agregarIntegrante();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        quitarIntegrante();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jListIntegrantesDentroValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListIntegrantesDentroValueChanged
        cambiarEstadoVerParticipaciones();
    }//GEN-LAST:event_jListIntegrantesDentroValueChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        mostrarParticipaciones();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tfFiltroProyectosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfFiltroProyectosActionPerformed
        filtrarProyecto();
}//GEN-LAST:event_tfFiltroProyectosActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        filtrarProyecto();
}//GEN-LAST:event_jButton4ActionPerformed

    private void tfFiltroInvestigadoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfFiltroInvestigadoresActionPerformed
        filtrarInvestigador();
}//GEN-LAST:event_tfFiltroInvestigadoresActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        filtrarInvestigador();
}//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        agregarNuevoInvestigador();
}//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new frAgregarIntegrantes().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList jListIntegrantesDentro;
    private javax.swing.JList jListIntegrantesFuera;
    private javax.swing.JList jListProyectos;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField tfFiltroInvestigadores;
    private javax.swing.JTextField tfFiltroProyectos;
    // End of variables declaration//GEN-END:variables

    private void inicializarComponentes() {
        Comunes.cargarJList(jListProyectos, proyectoFacade.getTodos());
    }

    private void cargarIntegrantes() {
        if (jListProyectos.getSelectedIndex() != -1) {
            List<Investigador> integrantesDentro = proyectoFacade.getTodosIntegrantes((Proyecto) jListProyectos.getSelectedValue());
            List<Investigador> integrantesFuera = InvestigadorFacade.getInstance().getTodosInvestigador();
            integrantesFuera.removeAll(integrantesDentro);
            Comunes.cargarJList(jListIntegrantesDentro, integrantesDentro);
            Comunes.cargarJList(jListIntegrantesFuera, integrantesFuera);
        }
    }

    private void agregarIntegrante() {
        if (jListIntegrantesFuera.getSelectedIndex() != -1) {
            if (jListProyectos.getSelectedIndex() != -1) {
                Investigador investigadorSeleccionado = (Investigador) jListIntegrantesFuera.getSelectedValue();
                Proyecto proyectoSeleccionado = (Proyecto) jListProyectos.getSelectedValue();
                diagDatosNuevosInvestigador datosNuevoInvestigador = new diagDatosNuevosInvestigador(this, true, investigadorSeleccionado, proyectoSeleccionado, usuario);
                datosNuevoInvestigador.setLocation(Comunes.centrarDialog(datosNuevoInvestigador));
                datosNuevoInvestigador.setVisible(true);
                if (datosNuevoInvestigador.isGuardado()) {
                    List<Investigador> integrantesDentro = proyectoFacade.getTodosIntegrantes((Proyecto) jListProyectos.getSelectedValue());
                    List<Investigador> integrantesFuera = InvestigadorFacade.getInstance().getTodosInvestigador();
                    integrantesFuera.removeAll(integrantesDentro);
                    Comunes.cargarJList(jListIntegrantesFuera, integrantesFuera);
                    Comunes.cargarJList(jListIntegrantesDentro, integrantesDentro);
                    Operacion operacion = new Operacion();
                    operacion.setFecha(Comunes.obtenerFechaActualDesdeDB());
                    operacion.setOperacion("Agregación de Integrante en Proyecto");
                    operacion.setUsuario(usuario);
                    OperacionFacade.getInstance().alta(operacion);
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Debe escoger proyecto", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(rootPane, "Debe escoger investigador", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void quitarIntegrante() {
        if (jListIntegrantesDentro.getSelectedIndex() != -1) {
            if (jListProyectos.getSelectedIndex() != -1) {
                Investigador investigadorSeleccionado = (Investigador) jListIntegrantesDentro.getSelectedValue();
                Proyecto proyectoSeleccionado = (Proyecto) jListProyectos.getSelectedValue();
                proyectoFacade.eliminarTodasParticipaciones(investigadorSeleccionado, proyectoSeleccionado);
                List<Investigador> integrantesDentro = proyectoFacade.getTodosIntegrantes((Proyecto) jListProyectos.getSelectedValue());
                List<Investigador> integrantesFuera = InvestigadorFacade.getInstance().getTodosInvestigador();
                integrantesFuera.removeAll(integrantesDentro);
                Comunes.cargarJList(jListIntegrantesFuera, integrantesFuera);
                Comunes.cargarJList(jListIntegrantesDentro, integrantesDentro);
            } else {
                JOptionPane.showMessageDialog(rootPane, "Debe escoger proyecto", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Debe escoger investigador", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void cambiarEstadoVerParticipaciones() {
        if (jListIntegrantesDentro.getSelectedIndex() != -1) {
            jButton3.setEnabled(true);
        } else {
            jButton3.setEnabled(false);
        }
    }

    private void mostrarParticipaciones() {
//        if (jListIntegrantesDentro.getSelectedIndex() != -1) {
//            if (jListProyectos.getSelectedIndex() != -1) {
//                diagDatosInvestigador datosInvestigador = new diagDatosInvestigador(this, true,
//                        (Investigador) jListIntegrantesDentro.getSelectedValue(),
//                        (Proyecto) jListProyectos.getSelectedValue());
//                datosInvestigador.setLocation(Comunes.centrarDialog(datosInvestigador));
//                datosInvestigador.setVisible(true);
//            } else {
//                JOptionPane.showMessageDialog(this, "Debe escoger un investigador",
//                        "Error", JOptionPane.ERROR_MESSAGE);
//            }
//        } else {
//            JOptionPane.showMessageDialog(this, "Debe escoger un proyecto",
//                    "Error", JOptionPane.ERROR_MESSAGE);
//        }
//        cargarIntegrantes();
    }

    private void filtrarProyecto() {
        if (!tfFiltroProyectos.getText().equals("")) {
            Comunes.cargarJList(jListProyectos, proyectoFacade.buscar(tfFiltroProyectos.getText()));
        } else {
            Comunes.cargarJList(jListProyectos, proyectoFacade.getTodos());
        }
    }

    private void filtrarInvestigador() {
        if (jListProyectos.getSelectedIndex() != -1) {
            if (!tfFiltroInvestigadores.getText().equals("")) {
                List<Investigador> integrantesDentro = proyectoFacade.getTodosIntegrantes((Proyecto) jListProyectos.getSelectedValue());
                List<Investigador> integrantesFuera = InvestigadorFacade.getInstance().getTodosInvestigador();
                integrantesFuera.removeAll(integrantesDentro);
                Comunes.cargarJList(jListIntegrantesFuera, InvestigadorFacade.getInstance().filtrar(integrantesFuera, tfFiltroInvestigadores.getText()));
            } else {
                List<Investigador> integrantesDentro = proyectoFacade.getTodosIntegrantes((Proyecto) jListProyectos.getSelectedValue());
                List<Investigador> integrantesFuera = InvestigadorFacade.getInstance().getTodosInvestigador();
                integrantesFuera.removeAll(integrantesDentro);
                Comunes.cargarJList(jListIntegrantesFuera, integrantesFuera);
            }
        }
    }

    private void agregarNuevoInvestigador() {
        diagInvestigador1 investigadorAlta = new diagInvestigador1(this, true, "Alta");
        investigadorAlta.setLocation(Comunes.centrarDialog(investigadorAlta));
        investigadorAlta.setVisible(true);
        cargarIntegrantes();
    }
}
